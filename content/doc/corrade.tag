<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AnyReference.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>AnyReference_8h.html</filename>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::Containers::AnyReference</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Array_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <class kind="class">Corrade::Containers::Array</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>Array&lt; T &gt;</type>
      <name>array</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a57f8d4e0a25951f539461539c90d4e25</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4258433529f847d3e6ed10442f6b9b8b</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9a1ca1efe52f9930f1b31b9feab5a145</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; T &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayTuple.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>ArrayTuple_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <class kind="class">Corrade::Containers::ArrayTuple</class>
    <class kind="class">Corrade::Containers::ArrayTuple::Item</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>ArrayView_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="Assert_8h" name="Assert.h" local="yes" imported="no">Corrade/Utility/Assert.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <includes id="Move_8h" name="Move.h" local="yes" imported="no">Corrade/Utility/Move.h</includes>
    <class kind="class">Corrade::Containers::ArrayView</class>
    <class kind="class">Corrade::Containers::ArrayView&lt; void &gt;</class>
    <class kind="class">Corrade::Containers::ArrayView&lt; const void &gt;</class>
    <class kind="class">Corrade::Containers::StaticArrayView</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="typedef">
      <type>StaticArrayView&lt; 2, T &gt;</type>
      <name>ArrayView2</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a538f5aec51521bc0827c08093b94b2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArrayView&lt; 3, T &gt;</type>
      <name>ArrayView3</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a70273af021774c9602e069546e695aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArrayView&lt; 4, T &gt;</type>
      <name>ArrayView4</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9fd5a1e3503cd60414c512bed40b9494</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a32ef8daa386aee742e5f39fc5b1516fd</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac8edb9cd0a74f5a0da2ef9c6d03f9ef2</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a95ac37a82ede3b7b4aae3fb20e552c99</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac450a49515ff20058552c732542b1b13</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a3a43320e58651eafa9774e04c68545e5</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ade5f07807e9559c80c45e3c314299b91</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8e6435208f2cda38505084a930a3e9ec</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2b0383474d8ce57fbd53da5b5a428939</anchor>
      <arglist>(ArrayView&lt; const void &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a19e087600ec3a4f81931386ee28e39ef</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9e4a13e421a34a19eec002ed65bda582</anchor>
      <arglist>(StaticArrayView&lt; size_, T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aaf76e645cbe62b360a0f13de4dff2837</anchor>
      <arglist>(T(&amp;)[size_])</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a58d7bb8d46f44949b57b226485db4a9b</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a3cf428b256a5ed8941145e4d15ae8b45</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aeb96550df22942b8379e77d3942c88c4</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2f1123798b8bee4ebadf785646108c98</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aee41b58bdb45963c476ce7554dda2290</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aee9c43d476128f05403e638ce539c90d</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayViewStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>ArrayViewStl_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
  </compound>
  <compound kind="file">
    <name>ArrayViewStlSpan.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>ArrayViewStlSpan_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
  </compound>
  <compound kind="file">
    <name>BigEnumSet.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>BigEnumSet_8h.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <class kind="class">Corrade::Containers::BigEnumSet</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>BigEnumSet.hpp</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>BigEnumSet_8hpp.html</filename>
    <includes id="BigEnumSet_8h" name="BigEnumSet.h" local="yes" imported="no">Corrade/Containers/BigEnumSet.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>bigEnumSetDebugOutput</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a43181898a295599ab45af395bce0bbbd</anchor>
      <arglist>(Utility::Debug &amp;debug, BigEnumSet&lt; T, size &gt; value, const char *empty)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BitArray.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>BitArray_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::Containers::BitArray</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>BitArrayView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>BitArrayView_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::Containers::BasicBitArrayView</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="typedef">
      <type>BasicBitArrayView&lt; const char &gt;</type>
      <name>BitArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa2cbc2d04487fbb69ac408beb3a61205</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicBitArrayView&lt; char &gt;</type>
      <name>MutableBitArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a524f39ffdbd9ea40f8679faeea91bf6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Containers.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Containers_8h.html</filename>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>EnumSet.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>EnumSet_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <class kind="class">Corrade::Containers::EnumSet</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENUMSET_OPERATORS</name>
      <anchorfile>EnumSet_8h.html</anchorfile>
      <anchor>abea606a97fd1f8321cf005b33239bff0</anchor>
      <arglist>(class)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENUMSET_FRIEND_OPERATORS</name>
      <anchorfile>EnumSet_8h.html</anchorfile>
      <anchor>a8d5e08f0c65922f00b53c38ccfcaa99a</anchor>
      <arglist>(class)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a74e7890c172dce7a2a5b95c037d55996</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9ac3a9dbe8d6b8bc0422aaeaf11bfdf8</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EnumSet.hpp</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>EnumSet_8hpp.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>enumSetDebugOutput</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a12c4ea794fa62c56969b1311e2b5c21b</anchor>
      <arglist>(Utility::Debug &amp;debug, EnumSet&lt; T, fullValue &gt; value, const char *empty, std::initializer_list&lt; T &gt; enums)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GrowableArray.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>GrowableArray_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Corrade/Containers/Array.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Corrade/Utility/Math.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Corrade/Utility/TypeTraits.h</includes>
    <class kind="struct">Corrade::Containers::ArrayNewAllocator</class>
    <class kind="struct">Corrade::Containers::ArrayMallocAllocator</class>
    <class kind="struct">Corrade::Containers::ArrayAllocator</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a46c91612607a6ce5a823322d05666879</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ee3b98c647b7c5ca7126a09673bc1b5</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arrayIsGrowable</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a169f206bc857abaa7c4db37ffa536722</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayCapacity</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a7bc7511f661ed0c9b60eeaf69add11b3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayReserve</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a365d83a4f4c08c44886e7429fe6afd08</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af1eec8f55170b31020601972676a666f</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7013a9fbe380f8165f498963b1574a7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4bb55b3330d9a26981875c8386704520</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8ff22e44e8ce7e1f28afc6b0bd1e2c1c</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac2a73a29be4796e42f87abbccc9ff955</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9dc411dd05adcef6c681c9fad9b9bdbc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a296d5d6dd7d068c8a4213600d50c5307</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae62c9676edb6cf4a7ef65ce8b658b5e3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1816aeebda9cfeb7c3721870424f02fa</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a35d60ea406e01a325535da32b03b0634</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a42ea2d796126a0411960911e18b35447</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7c8f048165bf1ca49d4afacada57f82</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9d4838774c256548468059c8394da8d9</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>afba53a4c9507e13ed2ee461ddc78ebc8</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acf62b401f66f6fa02fd23dfb00aecef7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab6a58e17da5dcffc298895f1b56ef5dc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abf99a6ca1917325bb25dbe3c09e9b294</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad4bf4ea5adffe8e78366201c0da60fa5</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a603c59a6e7c557af0cb5437a315c1c36</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemove</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae92e01d4b8c12d4b3d7d4ff6bc558c7b</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveUnordered</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa64e7c94743a46f917b43c86b83c1bb4</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveSuffix</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a398816c87fac07ede4e18854b32f1cbf</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a77949cacfb14e300bd153185f1992757</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT=Corrade::NoInit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a50c31776f6c38c1c3d7b7f326a148b26</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a46c91612607a6ce5a823322d05666879</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ee3b98c647b7c5ca7126a09673bc1b5</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arrayIsGrowable</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a169f206bc857abaa7c4db37ffa536722</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayCapacity</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a7bc7511f661ed0c9b60eeaf69add11b3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayReserve</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a365d83a4f4c08c44886e7429fe6afd08</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af1eec8f55170b31020601972676a666f</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7013a9fbe380f8165f498963b1574a7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4bb55b3330d9a26981875c8386704520</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8ff22e44e8ce7e1f28afc6b0bd1e2c1c</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac2a73a29be4796e42f87abbccc9ff955</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9dc411dd05adcef6c681c9fad9b9bdbc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a296d5d6dd7d068c8a4213600d50c5307</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae62c9676edb6cf4a7ef65ce8b658b5e3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1816aeebda9cfeb7c3721870424f02fa</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a35d60ea406e01a325535da32b03b0634</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a42ea2d796126a0411960911e18b35447</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7c8f048165bf1ca49d4afacada57f82</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9d4838774c256548468059c8394da8d9</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>afba53a4c9507e13ed2ee461ddc78ebc8</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acf62b401f66f6fa02fd23dfb00aecef7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab6a58e17da5dcffc298895f1b56ef5dc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abf99a6ca1917325bb25dbe3c09e9b294</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad4bf4ea5adffe8e78366201c0da60fa5</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a603c59a6e7c557af0cb5437a315c1c36</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemove</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae92e01d4b8c12d4b3d7d4ff6bc558c7b</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveUnordered</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa64e7c94743a46f917b43c86b83c1bb4</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveSuffix</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a398816c87fac07ede4e18854b32f1cbf</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a77949cacfb14e300bd153185f1992757</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT=Corrade::NoInit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a50c31776f6c38c1c3d7b7f326a148b26</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a46c91612607a6ce5a823322d05666879</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ee3b98c647b7c5ca7126a09673bc1b5</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arrayIsGrowable</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a169f206bc857abaa7c4db37ffa536722</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayCapacity</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a7bc7511f661ed0c9b60eeaf69add11b3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayReserve</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a365d83a4f4c08c44886e7429fe6afd08</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af1eec8f55170b31020601972676a666f</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7013a9fbe380f8165f498963b1574a7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4bb55b3330d9a26981875c8386704520</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8ff22e44e8ce7e1f28afc6b0bd1e2c1c</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac2a73a29be4796e42f87abbccc9ff955</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9dc411dd05adcef6c681c9fad9b9bdbc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a296d5d6dd7d068c8a4213600d50c5307</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae62c9676edb6cf4a7ef65ce8b658b5e3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1816aeebda9cfeb7c3721870424f02fa</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a35d60ea406e01a325535da32b03b0634</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a42ea2d796126a0411960911e18b35447</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7c8f048165bf1ca49d4afacada57f82</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9d4838774c256548468059c8394da8d9</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>afba53a4c9507e13ed2ee461ddc78ebc8</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acf62b401f66f6fa02fd23dfb00aecef7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab6a58e17da5dcffc298895f1b56ef5dc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abf99a6ca1917325bb25dbe3c09e9b294</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad4bf4ea5adffe8e78366201c0da60fa5</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a603c59a6e7c557af0cb5437a315c1c36</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemove</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae92e01d4b8c12d4b3d7d4ff6bc558c7b</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveUnordered</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa64e7c94743a46f917b43c86b83c1bb4</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveSuffix</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a398816c87fac07ede4e18854b32f1cbf</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a77949cacfb14e300bd153185f1992757</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT=Corrade::NoInit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a50c31776f6c38c1c3d7b7f326a148b26</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LinkedList.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>LinkedList_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="Assert_8h" name="Assert.h" local="yes" imported="no">Corrade/Utility/Assert.h</includes>
    <class kind="class">Corrade::Containers::LinkedList</class>
    <class kind="class">Corrade::Containers::LinkedListItem</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>MoveReference.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>MoveReference_8h.html</filename>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::Containers::MoveReference</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>Optional.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Optional_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="struct">Corrade::Containers::NullOptT</class>
    <class kind="class">Corrade::Containers::Optional</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>Optional&lt; typename std::decay&lt; T &gt;::type &gt;</type>
      <name>optional</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a71e22f3640eb28dd7b2f7b8339931224</anchor>
      <arglist>(T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; T &gt;</type>
      <name>optional</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a828d28109eb44c02f39b554a392606e9</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>optional</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab28ec333a1a0bfbfe1f0e93b200fe1a1</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedOptionalConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="variable">
      <type>constexpr NullOptT</type>
      <name>NullOpt</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a047ff43a43f3841e3c7125e1cc41bb60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OptionalStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>OptionalStl_8h.html</filename>
    <includes id="Optional_8h" name="Optional.h" local="yes" imported="no">Corrade/Containers/Optional.h</includes>
  </compound>
  <compound kind="file">
    <name>Pair.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Pair_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <includes id="Move_8h" name="Move.h" local="yes" imported="no">Corrade/Utility/Move.h</includes>
    <class kind="class">Corrade::Containers::Pair</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>constexpr Pair&lt; typename std::decay&lt; F &gt;::type, typename std::decay&lt; S &gt;::type &gt;</type>
      <name>pair</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2b7783627dcc6a1de27b18a1b91474db</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pair</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a299657ac36033cc6c615ca68b983ec6d</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedPairConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PairStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>PairStl_8h.html</filename>
    <includes id="Pair_8h" name="Pair.h" local="yes" imported="no">Corrade/Containers/Pair.h</includes>
  </compound>
  <compound kind="file">
    <name>Pointer.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Pointer_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <includes id="Move_8h" name="Move.h" local="yes" imported="no">Corrade/Utility/Move.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::Containers::Pointer</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>Pointer&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a76b1a48222910763fdc5046b6625090e</anchor>
      <arglist>(T *pointer)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pointer</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9fe9dd514c016cdbff0fddf90ae1250f</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedPointerConverter&lt; T &gt;::from(Utility::move(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; U &gt;</type>
      <name>pointerCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae1b70d106c3a13b76188c0f7f956cb0c</anchor>
      <arglist>(Pointer&lt; T &gt; &amp;&amp;pointer)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab287dc10fa2591e662d9a9ea611a3dad</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PointerStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>PointerStl_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
  </compound>
  <compound kind="file">
    <name>Reference.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Reference_8h.html</filename>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::Containers::Reference</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>ReferenceStl_8h.html</filename>
    <includes id="Reference_8h" name="Reference.h" local="yes" imported="no">Corrade/Containers/Reference.h</includes>
  </compound>
  <compound kind="file">
    <name>ScopeGuard.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>ScopeGuard_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <class kind="class">Corrade::Containers::ScopeGuard</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
  </compound>
  <compound kind="file">
    <name>StaticArray.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StaticArray_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <class kind="class">Corrade::Containers::StaticArray</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="typedef">
      <type>StaticArray&lt; 1, T &gt;</type>
      <name>Array1</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ade5f9cc4d92b3f1a798e9d648ea49a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 2, T &gt;</type>
      <name>Array2</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a13dae01e39f8fd19040ad724b704ec50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 3, T &gt;</type>
      <name>Array3</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abb1083b373a1a228c422f4f07b830287</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 4, T &gt;</type>
      <name>Array4</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a0b0a9db6a9c6cd0eec1c2f3ea4b25b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa8111199cdb6cc30c470e3cc9c54a30e</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5b40a450ade4927381bf97a165e3621e</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4f6c86de70a1ab496a1d798648c22f80</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, const T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab15dc352f75f85e562eaa85ae058ac9f</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ebf447d7f388e81fe6d34910c80cfbe</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), const U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aae0b8c37cdca03924fac3a3ff457bf9b</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a0cad6e09b65666040bb2460df883e4a3</anchor>
      <arglist>(const StaticArray&lt; size_, T &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StridedArrayView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StridedArrayView_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Corrade/Utility/Math.h</includes>
    <class kind="class">Corrade::Containers::StridedDimensions</class>
    <class kind="class">Corrade::Containers::StridedArrayView</class>
    <class kind="class">Corrade::Containers::StridedArrayView&lt; dimensions, void &gt;</class>
    <class kind="class">Corrade::Containers::StridedArrayView&lt; dimensions, const void &gt;</class>
    <class kind="class">Corrade::Containers::StridedIterator</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="typedef">
      <type>StridedArrayView&lt; 1, T &gt;</type>
      <name>StridedArrayView1D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a161bca60e6aa4f6f998b6f3cfa64eaef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 2, T &gt;</type>
      <name>StridedArrayView2D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aad0779dab68e1061b22da995439f668b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 3, T &gt;</type>
      <name>StridedArrayView3D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8fd4827befab8d70f0da5e4300bfdc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 4, T &gt;</type>
      <name>StridedArrayView4D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac01ba7473315887995a8680b259c9c74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a6c404d07d7621b49edc810ad76a7c6f0</anchor>
      <arglist>(ArrayView&lt; typename StridedArrayView1D&lt; T &gt;::ErasedType &gt; data, T *member, std::size_t size, std::ptrdiff_t stride)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>adc752d45dc49d4d9d2903cb23e127fac</anchor>
      <arglist>(ArrayView&lt; T &gt; data, std::size_t size, std::ptrdiff_t stride)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae1d5fefb507d00ef2f0df7c76b2c6c80</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a28f0f3e4514d0a6d4d463f7bd2884f16</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView1D&lt; const T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af01162b5a464cae22ae51d39a6baf5cd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8a18ea77b75e5838af7828f4b681de1d</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5687e5c332876211a23a2202ea89231b</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView&lt; dimensions, T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab15f7dff3df81f6529c2b9e401f813dc</anchor>
      <arglist>(StridedArrayView&lt; dimensions, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af0b91e302ea8ee6b0c76fe99fe6af1f8</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a529bc0bc79d6272d1e53c85c5ecd7005</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a70b1b0045d3523446c65ef79416c6d99</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, const void &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af6b32c425934efbd48dbb3d18839b9ad</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, void &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abb1caf4042587dc306fc92204c441feb</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac1dad147461a93c462d36ae8a009c313</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8834b18f663b21057e77c4f33b725d9c</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, const void &gt; &amp;view, std::size_t lastDimensionSize)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a6d49244b843135197647e98f13a171c2</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, void &gt; &amp;view, std::size_t lastDimensionSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StridedArrayViewStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StridedArrayViewStl_8h.html</filename>
    <includes id="StridedArrayView_8h" name="StridedArrayView.h" local="yes" imported="no">Corrade/Containers/StridedArrayView.h</includes>
  </compound>
  <compound kind="file">
    <name>String.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Containers_2String_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="struct">Corrade::Containers::AllocatedInitT</class>
    <class kind="class">Corrade::Containers::String</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="variable">
      <type>constexpr AllocatedInitT</type>
      <name>AllocatedInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1f81c0df1f144ff03f4f02f6721f615b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>String.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>TestSuite_2Compare_2String_8h.html</filename>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="Comparator_8h" name="Comparator.h" local="yes" imported="no">Corrade/TestSuite/Comparator.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::StringHasPrefix</class>
    <class kind="class">Corrade::TestSuite::Compare::StringHasSuffix</class>
    <class kind="class">Corrade::TestSuite::Compare::StringContains</class>
    <class kind="class">Corrade::TestSuite::Compare::StringNotContains</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
  </compound>
  <compound kind="file">
    <name>String.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Utility_2String_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::String</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>fromArray</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a3e5a23b4c3afe46b19c0ea93a098e634</anchor>
      <arglist>(const char *string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fromArray</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>acb24339bd65dda380b696d363f4cc799</anchor>
      <arglist>(const char *string, std::size_t length)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ltrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>afc39c7e3c0d3da5bb4cfdf4bada808ab</anchor>
      <arglist>(std::string string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ltrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9b120b72f24ac6c1266d60b112a131f6</anchor>
      <arglist>(std::string string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ltrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a5dcd2f1e07dfeb6b3f523b8fd7fcc0db</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rtrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aa7519775e721a492a57c3752b6e0a5ae</anchor>
      <arglist>(std::string string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rtrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a787500cae52742d206c30a00d315bd88</anchor>
      <arglist>(std::string string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rtrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a13384c2eb91136a2282cabcf6d40e7e7</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a010626127bd50cc902768b3fa50e8e8c</anchor>
      <arglist>(std::string string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a3e6ed45cb59343ff1c968cc7c5f74864</anchor>
      <arglist>(std::string string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ab1422c3f09858ed4959d7ddd022c913a</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ltrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9ec8fbf7b2a097997d9ae0b7fd8008b6</anchor>
      <arglist>(std::string &amp;string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ltrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aeb380f7b1a78cde7b825a2dd70d13035</anchor>
      <arglist>(std::string &amp;string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ltrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aa559956eafb291ec822be7a090303d93</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rtrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a7fe6b0a142484d4768e6cbb915229a7e</anchor>
      <arglist>(std::string &amp;string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rtrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>afe0d71afe06d476c99ca801c4a60a13c</anchor>
      <arglist>(std::string &amp;string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rtrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ae415f2a9274c946aa64ce76b2978f512</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a60ffdcb3d21f7d4fcf1068be07c37908</anchor>
      <arglist>(std::string &amp;string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a03e7318d0f0755c771da20b917c294e4</anchor>
      <arglist>(std::string &amp;string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9ad609584914e7de5a25fc01d807731b</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aef6ef6f1df55eb8e089d3ee154137223</anchor>
      <arglist>(const std::string &amp;string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>split</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af1f53a99f6e06d5edf606b8bc41a0e74</anchor>
      <arglist>(Containers::StringView string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac7cdf17db22ef43ed931c52745dccff7</anchor>
      <arglist>(const std::string &amp;string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a36418e055bcddcb32f19e022a2dbb606</anchor>
      <arglist>(Containers::StringView string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac0ff6b03a281fecebe8540c3aa86cd47</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;delimiters)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a5c53bb9b7eb0b881648d1a419b2e4423</anchor>
      <arglist>(Containers::StringView string, Containers::StringView delimiters)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ae292e7122f5d7274263fe0b02262c801</anchor>
      <arglist>(const std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a2dabe0d792b9a3e983e67c0c222bee3e</anchor>
      <arglist>(const Containers::StringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>partition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ad61d663b8d5d2be27fb99dd8935fd276</anchor>
      <arglist>(const std::string &amp;string, char separator)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>partition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>afd863b0ac4b9f32424e3cc8f553a76cf</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;separator)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>rpartition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a03a31c17c8f6699134f65c887ba152d4</anchor>
      <arglist>(const std::string &amp;string, char separator)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>rpartition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aef50f459a779177ce9871efcdd18ce09</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;separator)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9af3018407a9cac247c09da9ac8e577d</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ab3976871853ef6dea483d603dbf2dce1</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const char(&amp;delimiter)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac2209eae14e2358736f8476d49fd0e8d</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const std::string &amp;delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac2adb8eafce8ddb6f7c163bd112e5c57</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a31b9cde42bf5ac3ba81b8bf91419e866</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const char(&amp;delimiter)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af6fd8637c075cade57f6fc099c62106c</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const std::string &amp;delimiter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lowercaseInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a8f89429f64be0b47f198ef3332f29be1</anchor>
      <arglist>(Containers::MutableStringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>lowercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a47dd33cbf867fd55b23a271e682a141b</anchor>
      <arglist>(Containers::StringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>lowercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a1148769f11fcb3d7c26705d18b63d8a5</anchor>
      <arglist>(Containers::String string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lowercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a09fde2ac2c5c7a28e0c694d22ca89ee6</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uppercaseInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a963077494efd41f5f016ad257b069d5d</anchor>
      <arglist>(Containers::MutableStringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>uppercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af05b99fccf0a865e0574b2b282838a4b</anchor>
      <arglist>(Containers::StringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>uppercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a17fa61e495612987859d77c434772778</anchor>
      <arglist>(Containers::String string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uppercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4593d63bc7b1f340584b21d6a169afe9</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>add091001179ac1455795365a3b667073</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aca63ac7667c9b71ce5e3240daf32316e</anchor>
      <arglist>(const std::string &amp;string, const char(&amp;prefix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>adcf054be72915ea30008949ba8d7e45a</anchor>
      <arglist>(const std::string &amp;string, char prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewBeginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aac2a0377274984a88d8c5ba1267bfaa0</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, const char(&amp;prefix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewBeginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aba910ca698919200907a1b82b446e0cb</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, char prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a810b5cb07e3a5e5063145ef47567ab7f</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ace94f739418cde7292a1e4ffdb75598e</anchor>
      <arglist>(const std::string &amp;string, const char(&amp;suffix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a5a89d25c3d54527384d85f3b9b22010f</anchor>
      <arglist>(const std::string &amp;string, char suffix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewEndsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a036c4916e1cd32b0d31978899c205a9c</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, const char(&amp;suffix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewEndsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a86b3902899551c11f8a1db1b9b0becdf</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, char suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripPrefix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a6d1d8723eecd80d2cb0b476a92730782</anchor>
      <arglist>(std::string string, const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripPrefix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a220d3903694aa0a90ec23540054c73cd</anchor>
      <arglist>(std::string string, const char(&amp;prefix)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripPrefix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a6dbe4d041b412de515dfaf992f6778b0</anchor>
      <arglist>(std::string string, char prefix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripSuffix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4913f68a09a3ad6dec44e8220d8d4c72</anchor>
      <arglist>(std::string string, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripSuffix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ab70c0084c70b8dfc512283edb553c5fa</anchor>
      <arglist>(std::string string, const char(&amp;suffix)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripSuffix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a376d68bfe85b7c6a6d4a4d87209fcd2b</anchor>
      <arglist>(std::string string, char suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ae74814f4438913aa1300538529069d32</anchor>
      <arglist>(std::string string, const std::string &amp;search, const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4efbec885c01308ee148007ad21d42ad</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac7fb659c24110adebb2955a75d290442</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4d54d0ac8fb49d705ae692bc88fa2c85</anchor>
      <arglist>(std::string string, const std::string &amp;search, const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aef5cb78b1c8e6336abce1c5b94b6fbf0</anchor>
      <arglist>(std::string string, const std::string &amp;search, const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a6dd7b108947809be4906cab43e050f0b</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a3c0ad6e25f8092de0ac2737ff9c62ee7</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a47b378ccf712482676488a771ec07f46</anchor>
      <arglist>(std::string string, const std::string &amp;search, const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; std::uint32_t &gt; &gt;</type>
      <name>parseNumberSequence</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af0649368075a2f9b387c72a09b7bfc87</anchor>
      <arglist>(Containers::StringView string, std::uint32_t min, std::uint32_t max)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StringStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StringStl_8h.html</filename>
    <includes id="Containers_2String_8h" name="String.h" local="yes" imported="no">Corrade/Containers/String.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="StlForwardString_8h" name="StlForwardString.h" local="yes" imported="no">Corrade/Utility/StlForwardString.h</includes>
  </compound>
  <compound kind="file">
    <name>StringStlHash.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StringStlHash_8h.html</filename>
    <includes id="Containers_2String_8h" name="String.h" local="yes" imported="no">Corrade/Containers/String.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="MurmurHash2_8h" name="MurmurHash2.h" local="yes" imported="no">Corrade/Utility/MurmurHash2.h</includes>
  </compound>
  <compound kind="file">
    <name>StringStlView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StringStlView_8h.html</filename>
    <includes id="Containers_2String_8h" name="String.h" local="yes" imported="no">Corrade/Containers/String.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
  </compound>
  <compound kind="file">
    <name>StringView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>StringView_8h.html</filename>
    <includes id="Corrade_8h" name="Corrade.h" local="yes" imported="no">Corrade/Corrade.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="DebugAssert_8h" name="DebugAssert.h" local="yes" imported="no">Corrade/Utility/DebugAssert.h</includes>
    <includes id="Move_8h" name="Move.h" local="yes" imported="no">Corrade/Utility/Move.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::Containers::BasicStringView</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <namespace>Corrade::Containers::Literals</namespace>
    <member kind="typedef">
      <type>EnumSet&lt; StringViewFlag &gt;</type>
      <name>StringViewFlags</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab43f431e0d4ae89b9f205e0e7adc7021</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicStringView&lt; const char &gt;</type>
      <name>StringView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ac77ad25e27290ff059450af138fbed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicStringView&lt; char &gt;</type>
      <name>MutableStringView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a810883e8f1a8d70a270974d86c5d6629</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StringViewFlag</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a7ea6dbda3ba1bf973775cf605dd5d436</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Containers.html" anchor="a7ea6dbda3ba1bf973775cf605dd5d436a4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Containers.html" anchor="a7ea6dbda3ba1bf973775cf605dd5d436ab90111c75972f26b57ab364724b34921">NullTerminated</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aabd63b13acd5ca553d41015d6a0b7ec3</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a37533ccf37e6d0d25674e86bd52a8342</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a241cc5c0e7ed2bafaef013bc5735bd29</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acf48d36f9b3e4bd1add77640b13452b1</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a0fcba4446c47cef12dd65b28cbd23cca</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a15b299abd79e4afecbffa9f7fe5e2ccb</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>operator+</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa25a50dbfab845280e92ecae86b132b5</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>operator*</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aee6a277665b8ee53c8242753ccdd9bea</anchor>
      <arglist>(StringView string, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>operator*</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a99c531f093fa2c9248d31f5c735949f6</anchor>
      <arglist>(std::size_t count, StringView string)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StringView</type>
      <name>operator&quot;&quot;_s</name>
      <anchorfile>namespaceCorrade_1_1Containers_1_1Literals.html</anchorfile>
      <anchor>a77602518db83671261025e3ca632151d</anchor>
      <arglist>(const char *data, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tags.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Containers_2Tags_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
  </compound>
  <compound kind="file">
    <name>Tags.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/</path>
    <filename>Tags_8h.html</filename>
    <includes id="Macros_8h" name="Macros.h" local="yes" imported="no">Corrade/Utility/Macros.h</includes>
    <class kind="struct">Corrade::DefaultInitT</class>
    <class kind="struct">Corrade::ValueInitT</class>
    <class kind="struct">Corrade::NoInitT</class>
    <class kind="struct">Corrade::NoCreateT</class>
    <class kind="struct">Corrade::DirectInitT</class>
    <class kind="struct">Corrade::InPlaceInitT</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="typedef">
      <type>Corrade::DefaultInitT</type>
      <name>DefaultInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a07c5953cb4114b33bfc0a9b88070b1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::ValueInitT</type>
      <name>ValueInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4db79a5757ea865004f931965b4b9946</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::NoInitT</type>
      <name>NoInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acb29bbf10a9f34366e299a490dbd75a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::NoCreateT</type>
      <name>NoCreateT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a49c57bc91b29e61bb35c15d0155e36f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::DirectInitT</type>
      <name>DirectInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2432fa245182237098830d84d950c21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::InPlaceInitT</type>
      <name>InPlaceInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a22afdcae721ff44a2e0114daf04fa064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultInitT</type>
      <name>DefaultInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a2c768ae68c048998f2f97d920bf5413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr ValueInitT</type>
      <name>ValueInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>af3be6d0316a337741e2545bf2b1d7bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a0fc1aca838b7d380102ab12c608b62b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>adf027d6a5dc5c9c6fd0ac10be8558a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DirectInitT</type>
      <name>DirectInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a679ee035631033ace1eb3423bfbb6c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr InPlaceInitT</type>
      <name>InPlaceInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a84b3474f75f94cafa4a0b52911f362da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::DefaultInitT</type>
      <name>DefaultInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a876a3f289a2d9bab6c960fb4d0c213d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::ValueInitT</type>
      <name>ValueInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4f2b333de68614337b8af5031241d1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9f525a7cad37460a212272538f2e7974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad6e54209a8ced072dd01d53f1208387e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::DirectInitT</type>
      <name>DirectInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab2419af9b31a38b9a9647b257d5a69bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::InPlaceInitT</type>
      <name>InPlaceInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab46f58b81041b0f83fa3fc564c604133</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Triple.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>Triple_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <includes id="Move_8h" name="Move.h" local="yes" imported="no">Corrade/Utility/Move.h</includes>
    <class kind="class">Corrade::Containers::Triple</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Containers</namespace>
    <member kind="function">
      <type>constexpr Triple&lt; typename std::decay&lt; F &gt;::type, typename std::decay&lt; S &gt;::type, typename std::decay&lt; T &gt;::type &gt;</type>
      <name>triple</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a6acd55864ee53360e153820f2348496d</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second, T &amp;&amp;third)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>triple</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1748277cb24f2a03b286c1d741349696</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedTripleConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TripleStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Containers/</path>
    <filename>TripleStl_8h.html</filename>
    <includes id="Triple_8h" name="Triple.h" local="yes" imported="no">Corrade/Containers/Triple.h</includes>
  </compound>
  <compound kind="file">
    <name>Corrade.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/</path>
    <filename>Corrade_8h.html</filename>
    <namespace>Corrade</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_MSVC_COMPATIBILITY</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>abf3217b8fb29b2bdb1174d7a9ba5f868</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_MSVC2017_COMPATIBILITY</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a553f541a45d293e05e7aebb726ed49aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_MSVC2015_COMPATIBILITY</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>abf7db3f63bdd0deb0fb40a9555e8c56a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_BUILD_DEPRECATED</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a3768587aab2fe63f56887ce5367594d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_BUILD_STATIC</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a18e68fa3008fa4f6f734cc69cb94c133</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_BUILD_STATIC_UNIQUE_GLOBALS</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a58b5a2cebd5d6f0d925134eed8710841</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_BUILD_MULTITHREADED</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a1ac88f5e5f8c979d585486d09d3f2a76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_BUILD_CPU_RUNTIME_DISPATCH</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a513e068096e1767d87805ded276af0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_IS_DEBUG_BUILD</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ae4e975c11633d872ef032c01705b4f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CXX_STANDARD</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ac60c76b712cf20807a6415c733ca40a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_UNIX</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a89eaf7bef5858f7e783a4e57aec81c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_APPLE</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ae2cc32d00e885ea5101b9397ca3bb384</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_IOS</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a28ef41f421f7abcd207c8da78fc3c1da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_IOS_SIMULATOR</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>abd967ec380b0645c82d7d0cf17106313</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_WINDOWS</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a19063435bd2d1b9a6a2567c8c316cb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_WINDOWS_RT</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>aa0551725e55f4584267108f34d07174a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_EMSCRIPTEN</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>aafeb56971752236fd87733937f9392f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_ANDROID</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a4d1ec6acb651e40f04ad8aef103f51a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_X86</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ae205d17d7e08d468eb9fd141467c3f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_ARM</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a197c45a30d0cc37b5ffecb9943cdfb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_POWERPC</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a1b7f626b036b53c0315f516a8d44df7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_WASM</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a01e72644943652823f94244830560c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_32BIT</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a7ece931785c2dccf74cbce044f75f908</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_BIG_ENDIAN</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ae13d587bbf36c8dfec36e91c24ce388a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_GCC</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a565559b9dfa2f8b855f6a1ece503e3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_CLANG</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a1fbc34c96158ac35c50af83371a46299</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_APPLE_CLANG</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ab27dda691f6d6f56c91808ac273efb1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_CLANG_CL</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a2dd9a943f3b907c78c3e00055a445001</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_MSVC</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a65009a6f1b29882625bba4bb3332bafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_MINGW</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a922f380566b5b1becef35cf988cfbf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_LIBCXX</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a53878336788ffb39c14bb51d1ca05076</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_LIBSTDCXX</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a157b7c44625caeea833bee41adafde7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_DINKUMWARE</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ad462c1c8f92ad3084169f1ef08ac534f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_SSE2</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ac5084f4b6a30b08b6b45d4e4d4063407</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_SSE3</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a351b68c3906c163d767c12afa1a797df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_SSSE3</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>afeb6d8fda0e607f10f33e0071530820a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_SSE41</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a23503ab28a47f7b2c67f44098d702f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_SSE42</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>afee39eab99916d13e2a57c6a989b7d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_POPCNT</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a440cc632bbe6ad553e95cab5a8d7b776</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_LZCNT</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>acfd2a2096498a09878b0b8c9aec8d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_BMI1</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>af23139df3c2bae1a5bdc7a7fb7f4028b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_AVX</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>abec21d7976ccd7e1f4970b1091c11942</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_AVX_F16C</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>accce0a939165b7c5c76891cfbd5cd55c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_AVX_FMA</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>aff559e5a6bda20d22f4ae5e4f4f58fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_AVX2</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>aab8bfebcd5e75e88cfd928946709f51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_AVX512F</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a9238a5d202ed321a0435d2885e2ff47c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_NEON</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a673c54ad6b5b826a5dbad53f541fc232</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_NEON_FMA</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>aa03dcfbfe76c8660b8be97ceacef834e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_NEON_FP16</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a94ab5b8bc5e79ed4d6ec5f194eac83e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TARGET_SIMD128</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a56ef81b7da04c3cb95250869aa6ae41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_USE_IFUNC</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a7dc0a34bc59076520b25e735563cf798</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_PLUGINMANAGER_NO_DYNAMIC_PLUGIN_SUPPORT</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>a17304cb82d4f7b7279a223fe69bb78d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TESTSUITE_TARGET_XCTEST</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ad07f99b330b2e84932d57b2cb7ed393d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_UTILITY_USE_ANSI_COLORS</name>
      <anchorfile>Corrade_8h.html</anchorfile>
      <anchor>ac7cb3a2eb43e3bc3e9e925899229a768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Cpu.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/</path>
    <filename>Cpu_8h.html</filename>
    <includes id="Corrade_8h" name="Corrade.h" local="yes" imported="no">Corrade/Corrade.h</includes>
    <includes id="Macros_8h" name="Macros.h" local="yes" imported="no">Corrade/Utility/Macros.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="struct">Corrade::Cpu::TypeTraits</class>
    <class kind="struct">Corrade::Cpu::ScalarT</class>
    <class kind="struct">Corrade::Cpu::Sse2T</class>
    <class kind="struct">Corrade::Cpu::Sse3T</class>
    <class kind="struct">Corrade::Cpu::Ssse3T</class>
    <class kind="struct">Corrade::Cpu::Sse41T</class>
    <class kind="struct">Corrade::Cpu::Sse42T</class>
    <class kind="struct">Corrade::Cpu::PopcntT</class>
    <class kind="struct">Corrade::Cpu::LzcntT</class>
    <class kind="struct">Corrade::Cpu::Bmi1T</class>
    <class kind="struct">Corrade::Cpu::AvxT</class>
    <class kind="struct">Corrade::Cpu::AvxF16cT</class>
    <class kind="struct">Corrade::Cpu::AvxFmaT</class>
    <class kind="struct">Corrade::Cpu::Avx2T</class>
    <class kind="struct">Corrade::Cpu::Avx512fT</class>
    <class kind="struct">Corrade::Cpu::NeonT</class>
    <class kind="struct">Corrade::Cpu::NeonFmaT</class>
    <class kind="struct">Corrade::Cpu::NeonFp16T</class>
    <class kind="struct">Corrade::Cpu::Simd128T</class>
    <class kind="class">Corrade::Cpu::Features</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Cpu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_DECLARE</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a61150aae89029e7693e6f6690fb65a5c</anchor>
      <arglist>(tag)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_SELECT</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>aac01b038141283c0d628106d50739d56</anchor>
      <arglist>(tag)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_DISPATCHER_BASE</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a0b29ab5881e2e0b24ff443100d5aa81e</anchor>
      <arglist>(function)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_DISPATCHER</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>ad4532aef8ce891c64b8b1612039e872e</anchor>
      <arglist>(function,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_DISPATCHED_POINTER</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a5378d07b7bfa36af2adb7d45003e2c8f</anchor>
      <arglist>(dispatcher,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CPU_DISPATCHED_IFUNC</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>afcbf5e42884c152a1bd6631928dd3e59</anchor>
      <arglist>(dispatcher,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_SSE2</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>aeba810221330f505ff63906f3ff468d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_SSE3</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>aecddabadd54f9ed90c6aab44c3beba20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_SSSE3</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>afcc31bd837d135e93744efe03a23dfec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_SSE41</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>ab1aa294defa07611740c51f363919d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_SSE42</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a1401826ece3a6534177d42c4fc751391</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_POPCNT</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>aac31f11b314e953035a9c396dbf57980</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_LZCNT</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a27e81600544f7ca937b85b0c71ea1c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_BMI1</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a9249635fbc5bbaa497f9bfe7e4591de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_AVX</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a6f5794b897d28bfd1a4a37b30d48fd2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_AVX_F16C</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a9d77db2196b88157b19e6c1986219b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_AVX_FMA</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a60ea289fc54204cb608d5b8390ae6c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_AVX2</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>aa4dab6243f7b22397fd546518d64a8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_AVX512F</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a7399611e9dededaadef77a7faaec9e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_NEON</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a666900aea764714fa16cb7bdc42aa1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_NEON_FMA</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a6c25968017c8fd8f5050d5a4e6fed544</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_NEON_FP16</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a7742cb316e50ca67e9faf00dbafaa351</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE_SIMD128</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>a58acd990ded629f05c6ccb01c4aa6c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ENABLE</name>
      <anchorfile>Cpu_8h.html</anchorfile>
      <anchor>ac7f3083f14d3bf8210853c67f6e6902f</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Tags&lt; 0 &gt;</type>
      <name>DefaultExtraT</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a6e589f2f27676a179ea943ca0f4210d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Tags&lt; TypeTraits&lt; DefaultBaseT &gt;::Index|DefaultExtraT::Value &gt;</type>
      <name>DefaultT</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a0c677e989287f4c0718c925ee9aabd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>tag</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ae523f73a603f905f3687e9acc69e0d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>features</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a33f27b3980b02c723baba427e353f735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>compiledFeatures</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a9ec9c346a852c3e194df51b3d0b82e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>runtimeFeatures</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a9afada18b534309f7700f1cb79eeae28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>constexpr ScalarT</type>
      <name>Scalar</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ad46bdf541c1b53cbc48b61ada9322763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse2T</type>
      <name>Sse2</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a0824c1dffe74c9af986f5c448334df7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse3T</type>
      <name>Sse3</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a3b044236d7916684b4a87937907626e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Ssse3T</type>
      <name>Ssse3</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a114904bf69f2c4ecd91f90cc70d37b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse41T</type>
      <name>Sse41</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ac25dd6c599fe1e12851997d2697298d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse42T</type>
      <name>Sse42</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a01ca5010f56dc4811155125c000024d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr PopcntT</type>
      <name>Popcnt</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a03e5d8b9ee8cbb9bdb53fef9b06af0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr LzcntT</type>
      <name>Lzcnt</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a157591d3b2a1877ba7645bbae1383551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Bmi1T</type>
      <name>Bmi1</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a0c582368e389d7c5c0e7f5292efdf581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AvxT</type>
      <name>Avx</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>acbbdbb148d34666728d3dae3ac636051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AvxF16cT</type>
      <name>AvxF16c</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a1ba9c6e0be3429fcde02d66697c803b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AvxFmaT</type>
      <name>AvxFma</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a4775746a89fbf46704495e837f3add0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Avx2T</type>
      <name>Avx2</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ae53a0c8cdcbffd46cf48e443dd1c9ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Avx512fT</type>
      <name>Avx512f</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>aaad8362a47a0e673758f926fdd31dc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NeonT</type>
      <name>Neon</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>afb2aa2abe1d692820f60acc7bc839047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NeonFmaT</type>
      <name>NeonFma</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a69ca74be36799b556d04781b78a43a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NeonFp16T</type>
      <name>NeonFp16</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>adcc7038ce8560bddbe32d7473dcfc5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Simd128T</type>
      <name>Simd128</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a5994e7ffbf54ba14ab7ddc95cc5be311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>typedef</type>
      <name>DefaultBaseT</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ae761c508c5e186eefc093605bf690a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultBaseT</type>
      <name>DefaultBase</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a7eb0fdea7fc6203c8abe112c2b58271a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultExtraT</type>
      <name>DefaultExtra</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a41afb9c2034966f23645a677b8906588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultT</type>
      <name>Default</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>adfd9d16f07465c937144c4155aa5b592</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Connection.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Interconnect/</path>
    <filename>Connection_8h.html</filename>
    <includes id="Reference_8h" name="Reference.h" local="yes" imported="no">Corrade/Containers/Reference.h</includes>
    <includes id="Interconnect_8h" name="Interconnect.h" local="yes" imported="no">Corrade/Interconnect/Interconnect.h</includes>
    <class kind="class">Corrade::Interconnect::Connection</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Interconnect</namespace>
  </compound>
  <compound kind="file">
    <name>Emitter.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Interconnect/</path>
    <filename>Emitter_8h.html</filename>
    <includes id="Connection_8h" name="Connection.h" local="yes" imported="no">Corrade/Interconnect/Connection.h</includes>
    <includes id="Assert_8h" name="Assert.h" local="yes" imported="no">Corrade/Utility/Assert.h</includes>
    <class kind="class">Corrade::Interconnect::Emitter</class>
    <class kind="class">Corrade::Interconnect::Emitter::Signal</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Interconnect</namespace>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>namespaceCorrade_1_1Interconnect.html</anchorfile>
      <anchor>afe6ec8e2281aa5a2804094419d135005</anchor>
      <arglist>(EmitterObject &amp;emitter, Interconnect::Emitter::Signal(Emitter::*signal)(Args...), Functor &amp;&amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>namespaceCorrade_1_1Interconnect.html</anchorfile>
      <anchor>a52f95755ab08bad47be07955f641f2cc</anchor>
      <arglist>(EmitterObject &amp;emitter, Interconnect::Emitter::Signal(Emitter::*signal)(Args...), ReceiverObject &amp;receiver, void(Receiver::*slot)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>namespaceCorrade_1_1Interconnect.html</anchorfile>
      <anchor>a08518bbf1547ae48fbd32afeba6fc787</anchor>
      <arglist>(Emitter &amp;emitter, const Connection &amp;connection)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Interconnect.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Interconnect/</path>
    <filename>Interconnect_8h.html</filename>
    <class kind="class">Corrade::Interconnect::StateMachine</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Interconnect</namespace>
  </compound>
  <compound kind="file">
    <name>Receiver.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Interconnect/</path>
    <filename>Receiver_8h.html</filename>
    <includes id="Interconnect_8h" name="Interconnect.h" local="yes" imported="no">Corrade/Interconnect/Interconnect.h</includes>
    <class kind="class">Corrade::Interconnect::Receiver</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Interconnect</namespace>
  </compound>
  <compound kind="file">
    <name>StateMachine.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Interconnect/</path>
    <filename>StateMachine_8h.html</filename>
    <includes id="Emitter_8h" name="Emitter.h" local="yes" imported="no">Corrade/Interconnect/Emitter.h</includes>
    <class kind="class">Corrade::Interconnect::StateTransition</class>
    <class kind="class">Corrade::Interconnect::StateMachine</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Interconnect</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractManager.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>AbstractManager_8h.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="PluginManager_8h" name="PluginManager.h" local="yes" imported="no">Corrade/PluginManager/PluginManager.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::PluginManager::AbstractManager</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_PLUGIN_IMPORT</name>
      <anchorfile>AbstractManager_8h.html</anchorfile>
      <anchor>a4ced3bca898533c1f46abcd6ec64342b</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_PLUGIN_EJECT</name>
      <anchorfile>AbstractManager_8h.html</anchorfile>
      <anchor>ae1a1325930d428220ae273496afd2554</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_PLUGIN_VERSION</name>
      <anchorfile>AbstractManager_8h.html</anchorfile>
      <anchor>a32a64a27920c39102eec2496320a0b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_PLUGIN_REGISTER</name>
      <anchorfile>AbstractManager_8h.html</anchorfile>
      <anchor>aa39d441432b9f4e399c152c85a6dd417</anchor>
      <arglist>(name, className, interface)</arglist>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; LoadState &gt;</type>
      <name>LoadStates</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a61b14635bc0c147c65e8be80260ca891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LoadState</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>aa240e935222a178e1acb5c0853f15547</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a3485912f892918a4ed6b357abad8e5a4">WrongPluginVersion</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ae90c7458dc20c6326d3a34071de85e3f">WrongInterfaceVersion</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ad6ab066e75221cc9a69bfede5f75347c">WrongMetadataFile</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a3c062ee3a4f39445ef4ba44ada5bde3c">UnresolvedDependency</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a3729d9667c9ed82ae96b6174b288a3a5">LoadFailed</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a84a8921b25f505d0d2077aeb5db4bc16">Static</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a7381d487d18845b379422325c0a768d6">Loaded</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a5111e24c1ecc6266ce0de4b4dc42033b">NotLoaded</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ac7de13f47f40f470d0795d224221a577">UnloadFailed</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ab651efdb98a5d6bd2b3935d0c3f4a5e2">Required</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a019d1ca7d50cc54b995f60d456435e87">Used</enumvalue>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a73b06a0cd1333798b796a2061dc6bedd</anchor>
      <arglist>(Utility::Debug &amp;debug, PluginManager::LoadState value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a75f06adcf2b3f416601f1f58507a3f15</anchor>
      <arglist>(Utility::Debug &amp;debug, PluginManager::LoadStates value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AbstractManagingPlugin.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>AbstractManagingPlugin_8h.html</filename>
    <includes id="AbstractPlugin_8h" name="AbstractPlugin.h" local="yes" imported="no">Corrade/PluginManager/AbstractPlugin.h</includes>
    <includes id="Manager_8h" name="Manager.h" local="yes" imported="no">Corrade/PluginManager/Manager.h</includes>
    <class kind="class">Corrade::PluginManager::AbstractManagingPlugin</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractPlugin.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>AbstractPlugin_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="PluginManager_8h" name="PluginManager.h" local="yes" imported="no">Corrade/PluginManager/PluginManager.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::PluginManager::AbstractPlugin</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
    <member kind="function">
      <type>Containers::Array&lt; Containers::String &gt;</type>
      <name>implicitPluginSearchPaths</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a3498558bb07446e3f5cdf624995e4291</anchor>
      <arglist>(Containers::StringView libraryLocation, Containers::StringView hardcodedPath, Containers::StringView relativePath)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Manager.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>Manager_8h.html</filename>
    <includes id="AbstractManager_8h" name="AbstractManager.h" local="yes" imported="no">Corrade/PluginManager/AbstractManager.h</includes>
    <includes id="Manager_8hpp" name="Manager.hpp" local="yes" imported="no">Corrade/PluginManager/Manager.hpp</includes>
    <class kind="class">Corrade::PluginManager::Manager</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
  </compound>
  <compound kind="file">
    <name>Manager.hpp</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>Manager_8hpp.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Corrade/Containers/Array.h</includes>
    <includes id="Containers_2String_8h" name="String.h" local="yes" imported="no">Corrade/Containers/String.h</includes>
    <includes id="Manager_8h" name="Manager.h" local="yes" imported="no">Corrade/PluginManager/Manager.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
  </compound>
  <compound kind="file">
    <name>PluginManager.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>PluginManager_8h.html</filename>
    <class kind="class">Corrade::PluginManager::AbstractManagingPlugin</class>
    <class kind="class">Corrade::PluginManager::Manager</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
  </compound>
  <compound kind="file">
    <name>PluginMetadata.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/PluginManager/</path>
    <filename>PluginMetadata_8h.html</filename>
    <includes id="PluginManager_8h" name="PluginManager.h" local="yes" imported="no">Corrade/PluginManager/PluginManager.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::PluginManager::PluginMetadata</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::PluginManager</namespace>
  </compound>
  <compound kind="file">
    <name>Comparator.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/</path>
    <filename>Comparator_8h.html</filename>
    <includes id="Assert_8h" name="Assert.h" local="yes" imported="no">Corrade/Utility/Assert.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::TestSuite::Comparator</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ComparisonStatusFlag &gt;</type>
      <name>ComparisonStatusFlags</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>a4578a3861445b1ed4bd30a160f9380bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ComparisonStatusFlag</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>ad2d124df3140f28b26e7e6b3f5c79170</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170ad7c8c85bf79bbe1b7188497c32c3b0ca">Failed</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170a0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170a4c2a8fe7eaf24721cc7a9f0175115bd4">Message</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170ad4a9fa383ab700c5bdd6f31cf7df0faf">Verbose</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170a7f84beab04579bef70043ca0cc72fb85">Diagnostic</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170ad86c142bfd1ab654a16c8eaf191eade7">VerboseDiagnostic</enumvalue>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>af1096abd0227add4b864b06b17b07b6b</anchor>
      <arglist>(Utility::Debug &amp;debug, ComparisonStatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>a76c55488944ad1983d80fac4fc3ddcaa</anchor>
      <arglist>(Utility::Debug &amp;debug, ComparisonStatusFlags value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Container.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>Container_8h.html</filename>
    <includes id="Comparator_8h" name="Comparator.h" local="yes" imported="no">Corrade/TestSuite/Comparator.h</includes>
    <includes id="Math_8h" name="Math.h" local="yes" imported="no">Corrade/Utility/Math.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::Container</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
  </compound>
  <compound kind="file">
    <name>File.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>File_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="TestSuite_8h" name="TestSuite.h" local="yes" imported="no">Corrade/TestSuite/TestSuite.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::File</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
  </compound>
  <compound kind="file">
    <name>FileToString.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>FileToString_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="TestSuite_8h" name="TestSuite.h" local="yes" imported="no">Corrade/TestSuite/TestSuite.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::FileToString</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
  </compound>
  <compound kind="file">
    <name>FloatingPoint.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>FloatingPoint_8h.html</filename>
    <includes id="TestSuite_8h" name="TestSuite.h" local="yes" imported="no">Corrade/TestSuite/TestSuite.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::TestSuite::Comparator&lt; float &gt;</class>
    <class kind="class">Corrade::TestSuite::Comparator&lt; double &gt;</class>
    <class kind="class">Corrade::TestSuite::Comparator&lt; long double &gt;</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
  </compound>
  <compound kind="file">
    <name>Numeric.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>Numeric_8h.html</filename>
    <includes id="Tester_8h" name="Tester.h" local="yes" imported="no">Corrade/TestSuite/Tester.h</includes>
    <includes id="TestSuite_8h" name="TestSuite.h" local="yes" imported="no">Corrade/TestSuite/TestSuite.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::Less</class>
    <class kind="class">Corrade::TestSuite::Compare::LessOrEqual</class>
    <class kind="class">Corrade::TestSuite::Compare::GreaterOrEqual</class>
    <class kind="class">Corrade::TestSuite::Compare::Greater</class>
    <class kind="class">Corrade::TestSuite::Compare::Around</class>
    <class kind="class">Corrade::TestSuite::Compare::NotEqual</class>
    <class kind="class">Corrade::TestSuite::Compare::Divisible</class>
    <class kind="class">Corrade::TestSuite::Compare::NotDivisible</class>
    <class kind="class">Corrade::TestSuite::Compare::Aligned</class>
    <class kind="class">Corrade::TestSuite::Compare::NotAligned</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
    <member kind="function">
      <type>Around&lt; T &gt;</type>
      <name>around</name>
      <anchorfile>namespaceCorrade_1_1TestSuite_1_1Compare.html</anchorfile>
      <anchor>a76165bdc14d6ddd8ba20356ffd11e2e5</anchor>
      <arglist>(T epsilon)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SortedContainer.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>SortedContainer_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Corrade/Containers/Array.h</includes>
    <includes id="Container_8h" name="Container.h" local="yes" imported="no">Corrade/TestSuite/Compare/Container.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::SortedContainer</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
  </compound>
  <compound kind="file">
    <name>StringToFile.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/Compare/</path>
    <filename>StringToFile_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="TestSuite_8h" name="TestSuite.h" local="yes" imported="no">Corrade/TestSuite/TestSuite.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::TestSuite::Compare::StringToFile</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::TestSuite::Compare</namespace>
  </compound>
  <compound kind="file">
    <name>Tester.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/</path>
    <filename>Tester_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="Comparator_8h" name="Comparator.h" local="yes" imported="no">Corrade/TestSuite/Comparator.h</includes>
    <includes id="FloatingPoint_8h" name="FloatingPoint.h" local="yes" imported="no">Corrade/TestSuite/Compare/FloatingPoint.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <includes id="Macros_8h" name="Macros.h" local="yes" imported="no">Corrade/Utility/Macros.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::TestSuite::Tester</class>
    <class kind="class">Corrade::TestSuite::Tester::TesterConfiguration</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TEST_MAIN</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a3c85abc9a7086c802f27679aaa18857d</anchor>
      <arglist>(Class)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_VERIFY</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>ac2ccdd86183eafac13a23398e75dd87c</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_COMPARE</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>ac040e8cda2279e803f5cf7ae26fef454</anchor>
      <arglist>(actual, expected)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_COMPARE_AS</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>af00ea8b64c6a47fb95921a1b7664f8d6</anchor>
      <arglist>(actual, expected,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_COMPARE_WITH</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a100e93eb343f155d19f9af61176c3fd9</anchor>
      <arglist>(actual, expected, comparatorInstance)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_EXPECT_FAIL</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>abe5c7d7ccc6a5dbb67a4be57ae5ad87f</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_EXPECT_FAIL_IF</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a541129fcf90cb5371553ad0d056ac2cf</anchor>
      <arglist>(condition, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INFO</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a3c3e0371d9dc201bed3a7cfa505d3604</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_WARN</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>ad11036939e9b749bdd7fab911fb1b9c9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_FAIL_IF</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>ad036231237d37661ff863a52f4ac6c4b</anchor>
      <arglist>(condition, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_SKIP</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a1aa57d8c6b37e11bbcdb162fa2a17281</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_SKIP_IF_NO_ASSERT</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a9d12727f4f19c2379c622ab0d54be54f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_SKIP_IF_NO_DEBUG_ASSERT</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>a11caf23b963b77efcf762acf51275624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ITERATION</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>ab81030d744465b227614075cfbd9ae09</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_BENCHMARK</name>
      <anchorfile>Tester_8h.html</anchorfile>
      <anchor>accfe2c844655169d9d546734b3d9bc12</anchor>
      <arglist>(batchSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestSuite.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/TestSuite/</path>
    <filename>TestSuite_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::TestSuite</namespace>
  </compound>
  <compound kind="file">
    <name>AbstractHash.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>AbstractHash_8h.html</filename>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <class kind="class">Corrade::Utility::HashDigest</class>
    <class kind="class">Corrade::Utility::AbstractHash</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>Algorithms.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Algorithms_8h.html</filename>
    <includes id="StridedArrayView_8h" name="StridedArrayView.h" local="yes" imported="no">Corrade/Containers/StridedArrayView.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a842b4e479156706bfb87ecec1232a127</anchor>
      <arglist>(const Containers::ArrayView&lt; const void &gt; &amp;src, const Containers::ArrayView&lt; void &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6d2284e38a3a106c3de3fc6dffc193c6</anchor>
      <arglist>(const Containers::ArrayView&lt; const T &gt; &amp;src, const Containers::ArrayView&lt; T &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6cd0c04124a0d7c4879d4cf6da3556a2</anchor>
      <arglist>(const Containers::StridedArrayView&lt; dimensions, const char &gt; &amp;src, const Containers::StridedArrayView&lt; dimensions, char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>afe017978af3a52fd6bfab7a461b26b04</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const char &gt; &amp;src, const Containers::StridedArrayView1D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a048d3a441c483299359630bef7c29144</anchor>
      <arglist>(const Containers::StridedArrayView2D&lt; const char &gt; &amp;src, const Containers::StridedArrayView2D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a92f4374b3577f57527b9786fb2f2f4cc</anchor>
      <arglist>(const Containers::StridedArrayView3D&lt; const char &gt; &amp;src, const Containers::StridedArrayView3D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a4d88348f9502b5f662757be78e7e306c</anchor>
      <arglist>(const Containers::StridedArrayView4D&lt; const char &gt; &amp;src, const Containers::StridedArrayView4D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>affde4e62221981d89e5b95c4df33a325</anchor>
      <arglist>(const Containers::StridedArrayView&lt; dimensions, const T &gt; &amp;src, const Containers::StridedArrayView&lt; dimensions, T &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a06f446f1c1c3651cbeecb2d4879d494f</anchor>
      <arglist>(From &amp;&amp;src, To &amp;&amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a039691d89f3ce26def0c05999735743e</anchor>
      <arglist>(std::initializer_list&lt; typename ToView::Type &gt; src, To &amp;&amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab19ea7faa970d7f31bdab70097fdc291</anchor>
      <arglist>(const Containers::StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AndroidLogStreamBuffer.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>AndroidLogStreamBuffer_8h.html</filename>
    <class kind="class">Corrade::Utility::AndroidLogStreamBuffer</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>Arguments.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Arguments_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Corrade/Containers/Array.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <includes id="ConfigurationValue_8h" name="ConfigurationValue.h" local="yes" imported="no">Corrade/Utility/ConfigurationValue.h</includes>
    <includes id="StlForwardVector_8h" name="StlForwardVector.h" local="yes" imported="no">Corrade/Utility/StlForwardVector.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <includes id="Macros_8h" name="Macros.h" local="yes" imported="no">Corrade/Utility/Macros.h</includes>
    <class kind="class">Corrade::Utility::Arguments</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>Assert.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Assert_8h.html</filename>
    <includes id="Move_8h" name="Move.h" local="yes" imported="no">Corrade/Utility/Move.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <includes id="Macros_8h" name="Macros.h" local="yes" imported="no">Corrade/Utility/Macros.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_NO_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a588d67a03f847239f809eda035d73730</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_GRACEFUL_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>ac1219dd11f8ebd0b77dce3c86b4f1419</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_STANDARD_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a845bf87e4589879e6c86c1f49f89c12c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a83f7361970111951c88f1564a4f148e8</anchor>
      <arglist>(condition, message, returnValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CONSTEXPR_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a43ad70ea0dbc1d959f6e8d1a1ecca845</anchor>
      <arglist>(condition, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ASSERT_OUTPUT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a1e9180e437ee8e687152d1aeb9972cb4</anchor>
      <arglist>(call, message, returnValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ASSERT_UNREACHABLE</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a43f13cdfc5f2ceef611c9ab46c4563fa</anchor>
      <arglist>(message, returnValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a1114c0fdae83004b9a0f8d2ed4afae96</anchor>
      <arglist>(condition)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_CONSTEXPR_ASSERT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a9d78e8f103d2bca79e2c3e96b12c2c0c</anchor>
      <arglist>(condition)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_ASSERT_OUTPUT</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>a8154b41da944a95b2aab65686a1bc249</anchor>
      <arglist>(call)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_ASSERT_EXPRESSION</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>aa28973beaab346de608f2c3ebfb067c9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_ASSERT_UNREACHABLE</name>
      <anchorfile>Assert_8h.html</anchorfile>
      <anchor>ae57d79a33cb035144c8a888125318c04</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Configuration.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Configuration_8h.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="ConfigurationGroup_8h" name="ConfigurationGroup.h" local="yes" imported="no">Corrade/Utility/ConfigurationGroup.h</includes>
    <class kind="class">Corrade::Utility::Configuration</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>ConfigurationGroup.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>ConfigurationGroup_8h.html</filename>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <includes id="ConfigurationValue_8h" name="ConfigurationValue.h" local="yes" imported="no">Corrade/Utility/ConfigurationValue.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::Utility::ConfigurationGroup</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::BasicGroupIterator</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::BasicGroups</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::BasicGroupIterator</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::BasicGroups</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::ValueIterator</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::Values</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>ConfigurationValue.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>ConfigurationValue_8h.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="StlForwardString_8h" name="StlForwardString.h" local="yes" imported="no">Corrade/Utility/StlForwardString.h</includes>
    <class kind="struct">Corrade::Utility::ConfigurationValue</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Containers::StringView &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Containers::String &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; short &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned short &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; int &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned int &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; long long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned long long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; float &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; double &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; long double &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; std::string &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; bool &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; char32_t &gt;</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ConfigurationValueFlag &gt;</type>
      <name>ConfigurationValueFlags</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a4d1891e33318b3189e012812127acd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConfigurationValueFlag</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3b46f5e69ac219d10525df018f027b84</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a594be08882c8e9d5efb9eeb62f303744">Oct</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a92640bd72988395b326c888614f8937a">Hex</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a21234a0e100d74037a4da2e53f3200d7">Scientific</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a621e7b8ece62fecc55e883252ff2fbe7">Uppercase</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>Debug.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Debug_8h.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Corrade/Utility/TypeTraits.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::Utility::Debug</class>
    <class kind="class">Corrade::Utility::Warning</class>
    <class kind="class">Corrade::Utility::Error</class>
    <class kind="class">Corrade::Utility::Fatal</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_UTILITY_DEBUG_HAS_SOURCE_LOCATION</name>
      <anchorfile>Debug_8h.html</anchorfile>
      <anchor>abe12fef422beeaba34f95c26b427a27e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator!</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a9dc0b7f07f114111dbad9ab62d92ad8d</anchor>
      <arglist>(Implementation::DebugSourceLocation debug)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ae2cee4795e84d13d29d1d9e1c805ecd2</anchor>
      <arglist>(Debug &amp;debug, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ac103e9217a8710bd03ee4783d3d6ed4b</anchor>
      <arglist>(Debug &amp;debug, const Iterable &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a76d39b67ac31b0abf23b5c5d4bec9f15</anchor>
      <arglist>(Debug &amp;debug, const std::pair&lt; T, U &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugAssert.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>DebugAssert_8h.html</filename>
    <includes id="Assert_8h" name="Assert.h" local="yes" imported="no">Corrade/Utility/Assert.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEBUG_ASSERT</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a623fea157905d00473dd8d8f01fa4021</anchor>
      <arglist>(condition, message, returnValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CONSTEXPR_DEBUG_ASSERT</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a10b67346aba2987a2ce6121c1ec6aef9</anchor>
      <arglist>(condition, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEBUG_ASSERT_OUTPUT</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>aa38d3620341328d35a21e6bc91915c73</anchor>
      <arglist>(call, message, returnValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEBUG_ASSERT_UNREACHABLE</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a2f1438be3f9e39ffbb99d2dac6ab4167</anchor>
      <arglist>(message, returnValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_DEBUG_ASSERT</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a09a26914d5558990eeb21eb0f9b77543</anchor>
      <arglist>(condition)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_CONSTEXPR_DEBUG_ASSERT</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a9c6872192d7ad52819038a0cb2b7f319</anchor>
      <arglist>(condition)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_DEBUG_ASSERT_OUTPUT</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a5378428b0c6d82efc1a33f9a72f5d62e</anchor>
      <arglist>(call)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_DEBUG_ASSERT_EXPRESSION</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a4d6902ec2de828bbdd2ac849048edcd4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_INTERNAL_DEBUG_ASSERT_UNREACHABLE</name>
      <anchorfile>DebugAssert_8h.html</anchorfile>
      <anchor>a3371e8c29ef37c6014757226164ab7dc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>DebugStl_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a516b71a8f99c9bd0edea7275889ebc7a</anchor>
      <arglist>(Debug &amp;debug, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;!std::is_same&lt; T, char &gt;::value, Debug &amp; &gt;::type</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a9c5697e2ec9a42531dbb3c9dfe1dbd02</anchor>
      <arglist>(Debug &amp;debug, const std::basic_string&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a9f9d27d6f040e6e490f2d73c5a0b8b56</anchor>
      <arglist>(Debug &amp;debug, const std::tuple&lt; Args... &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DebugStlStringView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>DebugStlStringView_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="Debug_8h" name="Debug.h" local="yes" imported="no">Corrade/Utility/Debug.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a93d5d075373cf6340043fbd204d1c6b7</anchor>
      <arglist>(Debug &amp;debug, std::string_view value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab456ac723e0708a30c48123d4392dfc6</anchor>
      <arglist>(Debug &amp;debug, std::basic_string_view&lt; T &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Directory.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Directory_8h.html</filename>
    <includes id="Macros_8h" name="Macros.h" local="yes" imported="no">Corrade/Utility/Macros.h</includes>
    <includes id="Path_8h" name="Path.h" local="yes" imported="no">Corrade/Utility/Path.h</includes>
    <includes id="StlForwardString_8h" name="StlForwardString.h" local="yes" imported="no">Corrade/Utility/StlForwardString.h</includes>
    <includes id="StlForwardVector_8h" name="StlForwardVector.h" local="yes" imported="no">Corrade/Utility/StlForwardVector.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::Directory</namespace>
    <member kind="typedef">
      <type>Path::MapDeleter</type>
      <name>MapDeleter</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a4a3512fdf2fc13d62e82bfb9ec4ec68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Path::ListFlag</type>
      <name>Flag</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a595594e312715b81d60e5ef4d17b9f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Path::ListFlags</type>
      <name>Flags</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a45fa918ad353c136a48e29e80e52fffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fromNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ac7fda13e2db7d2a780a0bfffbea9b751</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a6d1cffbdff2819a86ed9436934c9af13</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a222baead7128ec0cadc433e3a8c0059f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a07df998aa551057785f2db6c51e78e63</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>splitExtension</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a33b62a435a580891394d5eef5ef40fbb</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>aa1c57ae6d2c15c7507ad1ae70810d4de</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a7caa7ac094864b221e993f045827dc29</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; paths)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>list</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a5712caca31ae4361b4a86d8b9cd938c2</anchor>
      <arglist>(const std::string &amp;path, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkpath</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ad80859f373fbf1ed39b11eb27649c34b</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rm</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ac78c147e3378045ca84362dc1617a5d2</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a02041ca36863926c8a7ff71082e71450</anchor>
      <arglist>(const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSandboxed</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a3cc7a87483e3b192253cbe72d1cb1f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>current</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ae4f90da841b0501c64f42f062b68c1e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a7b6180448b3e9eb8c053d2e1a7076acf</anchor>
      <arglist>(const void *address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a5cbda2bad2c154240c7c229360a3c0da</anchor>
      <arglist>(R(*address)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>executableLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a4e3dbc86c7b8d0c3c39d9802a9947b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>home</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a8dcea7e885d165d77f8ef68814788bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>configurationDir</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a73ddfdc8249b1bc779e8bb58cd9c319a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>tmp</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a7b3ca5990decccd118261fe86824af70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a0299a9e5b18b4187615c2fd8e256d586</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a71124e92e3ac55de0d4b821d2c9a2206</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fileExists</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a1a83e17a2230dd6c04d33dac2a6e745f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::size_t &gt;</type>
      <name>fileSize</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ad9900231f9e45e681b2394b686239cea</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>read</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a479f58a44c8c8f352e15c315b8d7666f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>afdc9b2319f9470117c4fb6b2ecf63187</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>af3e40dd0b19be0b79e8d2bad631f9009</anchor>
      <arglist>(const std::string &amp;filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a2e31a8897f1f4d78ec7179d584ab0100</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>append</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>aab260374e6387877a6648dfa8696c1b3</anchor>
      <arglist>(const std::string &amp;filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a5dbaa371ae23637c6952fa1360de0f0e</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a665cc812333bddf0c9640376291a8bcb</anchor>
      <arglist>(const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char, MapDeleter &gt;</type>
      <name>map</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>acd5bb7f69640298e8b046912ab6e9c5b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; const char, MapDeleter &gt;</type>
      <name>mapRead</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a84c45342a8cec2111853f51873d82c9d</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char, MapDeleter &gt;</type>
      <name>mapWrite</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a2efbd1e6b276c36e4a3a2c18895795ab</anchor>
      <arglist>(const std::string &amp;filename, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char, MapDeleter &gt;</type>
      <name>map</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a769141becd7eed77b15c0d0d1a79cc04</anchor>
      <arglist>(const std::string &amp;filename, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Endianness.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Endianness_8h.html</filename>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Corrade/Utility/TypeTraits.h</includes>
    <includes id="utilities_8h" name="utilities.h" local="yes" imported="no">Corrade/Utility/utilities.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::Endianness</namespace>
    <member kind="function">
      <type>T</type>
      <name>swap</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a32cdd5603b8c9356b2bf8f85a508e006</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a72f4acb55efd11bdb075218a0e36c4c7</anchor>
      <arglist>(T &amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isBigEndian</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>aeff28d1f20b7da71712f85ae04203dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>bigEndian</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>ae88adb4ebce124ae783e1183ffcb607f</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bigEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a58cefb8b571d639049a253557a5a796c</anchor>
      <arglist>(T &amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>littleEndian</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a9848d9ae0a2cf9e05b76f5c39e4b294e</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>littleEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a495156c88b017f68145ae431f0c4655c</anchor>
      <arglist>(T &amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::uint32_t</type>
      <name>fourCC</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>af63968671f5f4d919a27793d59ef21b7</anchor>
      <arglist>(char a, char b, char c, char d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EndiannessBatch.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>EndiannessBatch_8h.html</filename>
    <includes id="StridedArrayView_8h" name="StridedArrayView.h" local="yes" imported="no">Corrade/Containers/StridedArrayView.h</includes>
    <includes id="Endianness_8h" name="Endianness.h" local="yes" imported="no">Corrade/Utility/Endianness.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::Endianness</namespace>
    <member kind="function">
      <type>void</type>
      <name>swapInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>ad847186f0783252771182f1fe234c984</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>aa8c817beb76071450e085d889c4e353b</anchor>
      <arglist>(const Containers::ArrayView&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>littleEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a860ace689a05c291f931a5d830aa711a</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>littleEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a8f27ad4e2bd328fedd1159bb240cc245</anchor>
      <arglist>(const Containers::ArrayView&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bigEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a66e612b31d8531b0337862b1e54b0f9d</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bigEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>ad54b30aac0eaeebf36b4fe1fc1b64c44</anchor>
      <arglist>(const Containers::ArrayView&lt; T &gt; &amp;values)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FileWatcher.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>FileWatcher_8h.html</filename>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="class">Corrade::Utility::FileWatcher</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>Format.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Format_8h.html</filename>
    <includes id="Tags_8h" name="Tags.h" local="yes" imported="no">Corrade/Tags.h</includes>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="Containers_2String_8h" name="String.h" local="yes" imported="no">Corrade/Containers/String.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>Containers::String</type>
      <name>format</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6ed9378fb78a4da408fd5154a9d9a308</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a8c16cf18e0326f57cdb267b3857f6947</anchor>
      <arglist>(const Containers::MutableStringView &amp;buffer, const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a1c10c304b9e8a058370c2b6e0ddd5b9d</anchor>
      <arglist>(char(&amp;buffer)[size], const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3b0e22fcc7bd43f5758df742ba40ebb1</anchor>
      <arglist>(std::FILE *file, const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab27a2c45ff7f820fa421daae6cdb82af</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printError</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a1d88fd05905f0c021fe6169068441102</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FormatStl.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>FormatStl_8h.html</filename>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="Format_8h" name="Format.h" local="yes" imported="no">Corrade/Utility/Format.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>formatString</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>aaa50b1dc1eaffad13a65ee141a5c9e4f</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>aaf6e2f081fa8fd67065dd7b39811f5f6</anchor>
      <arglist>(std::string &amp;string, std::size_t offset, const char *format, const Args &amp;... args)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FormatStlStringView.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>FormatStlStringView_8h.html</filename>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="Format_8h" name="Format.h" local="yes" imported="no">Corrade/Utility/Format.h</includes>
  </compound>
  <compound kind="file">
    <name>IntrinsicsAvx.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>IntrinsicsAvx_8h.html</filename>
    <includes id="IntrinsicsSse4_8h" name="IntrinsicsSse4.h" local="yes" imported="no">Corrade/Utility/IntrinsicsSse4.h</includes>
  </compound>
  <compound kind="file">
    <name>IntrinsicsSse2.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>IntrinsicsSse2_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>IntrinsicsSse3.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>IntrinsicsSse3_8h.html</filename>
    <includes id="IntrinsicsSse2_8h" name="IntrinsicsSse2.h" local="yes" imported="no">Corrade/Utility/IntrinsicsSse2.h</includes>
  </compound>
  <compound kind="file">
    <name>IntrinsicsSse4.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>IntrinsicsSse4_8h.html</filename>
    <includes id="IntrinsicsSsse3_8h" name="IntrinsicsSsse3.h" local="yes" imported="no">Corrade/Utility/IntrinsicsSsse3.h</includes>
  </compound>
  <compound kind="file">
    <name>IntrinsicsSsse3.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>IntrinsicsSsse3_8h.html</filename>
    <includes id="IntrinsicsSse3_8h" name="IntrinsicsSse3.h" local="yes" imported="no">Corrade/Utility/IntrinsicsSse3.h</includes>
  </compound>
  <compound kind="file">
    <name>Json.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Json_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <includes id="Assert_8h" name="Assert.h" local="yes" imported="no">Corrade/Utility/Assert.h</includes>
    <class kind="class">Corrade::Utility::Json</class>
    <class kind="class">Corrade::Utility::JsonToken</class>
    <class kind="class">Corrade::Utility::JsonObjectItem</class>
    <class kind="class">Corrade::Utility::JsonArrayItem</class>
    <class kind="class">Corrade::Utility::JsonIterator</class>
    <class kind="class">Corrade::Utility::JsonView</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="typedef">
      <type>JsonView&lt; JsonObjectItem &gt;</type>
      <name>JsonObjectView</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ad1465283b0d84db8636372530d054f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JsonView&lt; JsonArrayItem &gt;</type>
      <name>JsonArrayView</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a05350f92880c9e8e296891c6fd82dce0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>JsonWriter.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>JsonWriter_8h.html</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <class kind="class">Corrade::Utility::JsonWriter</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>Macros.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Macros_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEPRECATED</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a8bc844974522ec40054a604cadbdb2b2</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEPRECATED_ALIAS</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a023a57e9d0c61a1b6f840b3e0569f734</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEPRECATED_NAMESPACE</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a0614a11b8608ffc924324f4843da7992</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEPRECATED_ENUM</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>aa58b39f18ce825eaad362ea65e91eda1</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEPRECATED_FILE</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a4bc9f2298919bde9bacc16f319707fe3</anchor>
      <arglist>(message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_DEPRECATED_MACRO</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a6a94c59eaa6f104ce689c22ebc44c336</anchor>
      <arglist>(macro, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_IGNORE_DEPRECATED_PUSH</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a3d9823862d0498c5a6cfe2dbc39f47c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_IGNORE_DEPRECATED_POP</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a8131d4370d2883c4942e1afebcf18ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_UNUSED</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>aaf99b187cce2ff1eadddf1507ace2d69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_FALLTHROUGH</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>af3cd136001e4eb1fc1a78aa17fe8232e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ALIGNAS</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>acb148d614b069112fb97d4f022ab6c9b</anchor>
      <arglist>(alignment)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_NORETURN</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>aeac429c30ec933b14293d5431a5c1a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_THREAD_LOCAL</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a59b7cd35ec1f1af9940bd99faed0c7e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_CONSTEXPR14</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>af57746d07f1b55515249dd8f7f1d9e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ALWAYS_INLINE</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a3df4fcf9966b18af3f5d311a04698b56</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_NEVER_INLINE</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>aa1fa4f001e0054f159136327ede89c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_ASSUME</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a7c63ae57169d0bb4a234861746afc80e</anchor>
      <arglist>(condition)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_LIKELY</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a920f43a2c726c5aa05e7d24e7277b64a</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_UNLIKELY</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a3686e1974bd8ba98caa33eba87240451</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_FUNCTION</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a35bb07eaded9ca76d8a2c72135243ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_LINE_STRING</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a074226a9c37ee5816e828a4cf823381d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_PASSTHROUGH</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>abaeff2cd0d6ba43349ff67e7d789929e</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_NOOP</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>af7f58d690d283d65afaf4ff3942f6c53</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_AUTOMATIC_INITIALIZER</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a8a4cea6b4e9cc0f231fec08fc867f2d9</anchor>
      <arglist>(function)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_AUTOMATIC_FINALIZER</name>
      <anchorfile>Macros_8h.html</anchorfile>
      <anchor>a89fc5f07629645f4e45c130859ac0909</anchor>
      <arglist>(function)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Math.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Math_8h.html</filename>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>constexpr T</type>
      <name>min</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ac40a96d7a67b36c7b93ab1ed1d0f2bc8</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>max</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a27a307079be1c24d171914a7af464960</anchor>
      <arglist>(T value, T max)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Memory.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Memory_8h.html</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">Corrade/Containers/Array.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a4c107e1764479ea1f32ff5266bfb163e</anchor>
      <arglist>(std::size_t size)</arglist>
      <docanchor file="namespaceCorrade_1_1Utility.html" title="Array initialization">Utility-allocateAligned-initialization</docanchor>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>af407cb240cc490b1a88d5b0b1d36590d</anchor>
      <arglist>(DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ae3a2a13e2f51c4116d27059f124a14d8</anchor>
      <arglist>(ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a345621f50f8ba99ff1f5fa678fc8375f</anchor>
      <arglist>(NoInitT, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Move.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Move_8h.html</filename>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>constexpr T &amp;&amp;</type>
      <name>forward</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab98a3f5ef78f381cdc74552174bf2760</anchor>
      <arglist>(typename std::remove_reference&lt; T &gt;::type &amp;t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;&amp;</type>
      <name>forward</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ad4a60b97f25e3a60ea596d72ebfd5b52</anchor>
      <arglist>(typename std::remove_reference&lt; T &gt;::type &amp;&amp;t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::remove_reference&lt; T &gt;::type &amp;&amp;</type>
      <name>move</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6360698b6c1e839706bd9ae1a8ab0d45</anchor>
      <arglist>(T &amp;&amp;t) noexcept</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MurmurHash2.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>MurmurHash2_8h.html</filename>
    <includes id="AbstractHash_8h" name="AbstractHash.h" local="yes" imported="no">Corrade/Utility/AbstractHash.h</includes>
    <class kind="class">Corrade::Utility::MurmurHash2</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>Path.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Path_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="EnumSet_8h" name="EnumSet.h" local="yes" imported="no">Corrade/Containers/EnumSet.h</includes>
    <class kind="class">Corrade::Utility::Path::MapDeleter</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::Path</namespace>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ListFlag &gt;</type>
      <name>ListFlags</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aa06cbdd515339c2e6e483a343534f0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ListFlag</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aaedb816dc129cca78cbe29c2846f3c74</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74ad6186b962ccb090e812467363c008e0a">SkipDotAndDotDot</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74ab5fc8c3926425785013c492ab8ecc22f">SkipFiles</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a9011abdfaf22b80f4ae98a3f59fed46b">SkipDirectories</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a2e58e2c745e14cc46a112c48075b863e">SkipSpecial</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a6e1549d1367460b4ab06f5575f2d427c">SortAscending</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a12995c419287e0ef1f6f2d6ce1dfc12a">SortDescending</enumvalue>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>fromNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>abc182ac11ec281d7a1ea88239cab1790</anchor>
      <arglist>(Containers::String path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>toNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>af0ed0a36839892032407b7a6d2f35b36</anchor>
      <arglist>(Containers::String path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pair&lt; Containers::StringView, Containers::StringView &gt;</type>
      <name>split</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>afa00c1be4062e72ca953c6fec8360ac0</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pair&lt; Containers::StringView, Containers::StringView &gt;</type>
      <name>splitExtension</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a26bb101cea4fa0121be87cd7310bd21c</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>afb4796406072719aae055752c4f53fc7</anchor>
      <arglist>(Containers::StringView path, Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aed31d5c88e7e8dcd864d215787163ed5</anchor>
      <arglist>(Containers::ArrayView&lt; const Containers::StringView &gt; paths)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a296e591d2bc43e0aeefe07b0c49fe009</anchor>
      <arglist>(std::initializer_list&lt; Containers::StringView &gt; paths)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a0d4fc3b710b264a0fdc87be9d4481361</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ab2e3405e590c5b47299c1a5ae8e61560</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>make</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a41321c89e0d8f23bdfb5b1b876b3ab82</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aea62357b9738996a531e313505e57841</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a394d79e9f49936bd1206ac61e9cd3122</anchor>
      <arglist>(Containers::StringView from, Containers::StringView to)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ab9790051c2232e266c3c6274720ddfaa</anchor>
      <arglist>(const void *address)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ac52bceea2517fa8db3002b727abd6c67</anchor>
      <arglist>(R(*address)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>executableLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>afb4f47bf31e9e48bb8dc1dcb235ec5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>currentDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ad9fa7dca2bcd867e8c4c91e9fd2053b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>homeDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ac64c037dc4ac5bb5df5cf14f7ed8416a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>configurationDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a704c5d5f22dea5e56776242c2f22e689</anchor>
      <arglist>(Containers::StringView name)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>temporaryDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ae00eda6ee11143995ea7fa6c88615b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; Containers::String &gt; &gt;</type>
      <name>list</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a453829fbdc42242938bdfcbad9934633</anchor>
      <arglist>(Containers::StringView path, ListFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::size_t &gt;</type>
      <name>size</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a5354d1342dd6dc420ff88b26b63e4ce5</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; char &gt; &gt;</type>
      <name>read</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>adbaf347c00ef1c9089df79894262e262</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>readString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>acacbfb6c60b9f98eb74ebe9920fa1425</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a7170a8ddab379f31bb32701262480ca5</anchor>
      <arglist>(Containers::StringView filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a8f4728b65c0044483804bc7396ca66eb</anchor>
      <arglist>(Containers::StringView filename, const char *string)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>append</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a7e8d536c651ef6f321ccd8c3cdf11c93</anchor>
      <arglist>(Containers::StringView filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>append</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a955b45964491bcfc20a6ec34e41cd0d8</anchor>
      <arglist>(Containers::StringView filename, const char *string)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a9059a8790646066c5fa0b943a65a9f1f</anchor>
      <arglist>(Containers::StringView from, Containers::StringView to)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; char, MapDeleter &gt; &gt;</type>
      <name>map</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a2d6d5e2cfef5b8a8423815845f0bf6c1</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; const char, MapDeleter &gt; &gt;</type>
      <name>mapRead</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a722db85ca13a6bf55221c55054260705</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; char, MapDeleter &gt; &gt;</type>
      <name>mapWrite</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a0027cbd41dbbad403a14a5ecfa2d9359</anchor>
      <arglist>(Containers::StringView filename, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Resource.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Resource_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="yes" imported="no">Corrade/Containers/StringStl.h</includes>
    <class kind="class">Corrade::Utility::Resource</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_RESOURCE_INITIALIZE</name>
      <anchorfile>Resource_8h.html</anchorfile>
      <anchor>a876986c779d3629c74c76e35607ea9e2</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_RESOURCE_FINALIZE</name>
      <anchorfile>Resource_8h.html</anchorfile>
      <anchor>a6ded4adbc1776241a0aed878fa5207a9</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sha1.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Sha1_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="AbstractHash_8h" name="AbstractHash.h" local="yes" imported="no">Corrade/Utility/AbstractHash.h</includes>
    <includes id="StlForwardString_8h" name="StlForwardString.h" local="yes" imported="no">Corrade/Utility/StlForwardString.h</includes>
    <class kind="class">Corrade::Utility::Sha1</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>StlForwardArray.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>StlForwardArray_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>StlForwardString.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>StlForwardString_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>StlForwardTuple.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>StlForwardTuple_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>StlForwardVector.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>StlForwardVector_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>StlMath.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>StlMath_8h.html</filename>
  </compound>
  <compound kind="file">
    <name>System.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>System_8h.html</filename>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::System</namespace>
    <member kind="function">
      <type>bool</type>
      <name>isSandboxed</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1System.html</anchorfile>
      <anchor>a21c40d8baa4eb92d77460a1ebb5c84be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1System.html</anchorfile>
      <anchor>a7f93179c285d2667b97d9b38476d4cda</anchor>
      <arglist>(std::size_t ms)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tweakable.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Tweakable_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <includes id="StringView_8h" name="StringView.h" local="yes" imported="no">Corrade/Containers/StringView.h</includes>
    <includes id="Optional_8h" name="Optional.h" local="yes" imported="no">Corrade/Containers/Optional.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">Corrade/Containers/Pointer.h</includes>
    <includes id="StlForwardString_8h" name="StlForwardString.h" local="yes" imported="no">Corrade/Utility/StlForwardString.h</includes>
    <includes id="TweakableParser_8h" name="TweakableParser.h" local="yes" imported="no">Corrade/Utility/TweakableParser.h</includes>
    <includes id="TypeTraits_8h" name="TypeTraits.h" local="yes" imported="no">Corrade/Utility/TypeTraits.h</includes>
    <class kind="class">Corrade::Utility::Tweakable</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>TweakableParser.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>TweakableParser_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <includes id="Utility_8h" name="Utility.h" local="yes" imported="no">Corrade/Utility/Utility.h</includes>
    <class kind="struct">Corrade::Utility::TweakableParser</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; int &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; unsigned int &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; unsigned long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; long long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; unsigned long long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; float &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; double &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; long double &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; char &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; bool &gt;</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TweakableState</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a62dda609bc506c6cb04603c81742f974</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a4bac8cdf0a968472b519b3b295d0d48b">NoChange</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a780b2be805c1437cd6730ba91f6107e3">Recompile</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ae0d97ad312a2030f1344b8839f5d9779</anchor>
      <arglist>(Debug &amp;debug, TweakableState value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TypeTraits.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>TypeTraits_8h.html</filename>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_LONG_DOUBLE_SAME_AS_DOUBLE</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>a25c25031b0fb43c7dba476f3eae99b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_STD_IS_TRIVIALLY_TRAITS_SUPPORTED</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>ad99957fbe6771bd263939a75a661e3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_HAS_TYPE</name>
      <anchorfile>TypeTraits_8h.html</anchorfile>
      <anchor>aeddc232fff93303bbed75d6d595eb5b8</anchor>
      <arglist>(className,...)</arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; bool, implementation-specific &gt;</type>
      <name>IsIterable</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a5b6f2707e54c886af00f4738ff83afa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; bool, implementation-specific &gt;</type>
      <name>IsStringLike</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a25706236e8711798719a814357f6bffd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Unicode.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Unicode_8h.html</filename>
    <includes id="ArrayView_8h" name="ArrayView.h" local="yes" imported="no">Corrade/Containers/ArrayView.h</includes>
    <includes id="StlForwardString_8h" name="StlForwardString.h" local="yes" imported="no">Corrade/Utility/StlForwardString.h</includes>
    <includes id="Array_8h" name="Array.h" local="no" imported="no">Corrade/Containers/Array.h</includes>
    <includes id="StringStl_8h" name="StringStl.h" local="no" imported="no">Corrade/Containers/StringStl.h</includes>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <namespace>Corrade::Utility::Unicode</namespace>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>nextChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ad74ef425d1e826c21af814030d763807</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text, std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>nextChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a3cd253f620e843e9ecac1d427b7c070f</anchor>
      <arglist>(const std::string &amp;text, const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>nextChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a634c36aab0be25e8417905c1a1b492c4</anchor>
      <arglist>(const char(&amp;text)[size], const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>prevChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>af74600d45c83f2cc0e60f925159d47c5</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text, std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>prevChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ad231509de72398162b11d48f9ea75f85</anchor>
      <arglist>(const std::string &amp;text, const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>prevChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ab7b8f89831f52d67d311c5886b847ce6</anchor>
      <arglist>(const char(&amp;text)[size], const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::u32string</type>
      <name>utf32</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a738435f73e123822a70f692d9d9cfec8</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>utf8</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a0b1547a3b650117161826a75943e5946</anchor>
      <arglist>(char32_t character, Containers::StaticArrayView&lt; 4, char &gt; result)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; wchar_t &gt;</type>
      <name>widen</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a9be15534350700c2eaf00cab36114447</anchor>
      <arglist>(Containers::StringView text)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; wchar_t &gt;</type>
      <name>widen</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>aceca9ac9adddf6dd8f5d1d0a37b2fb5f</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>widen</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>af92cf003d4c9bf36b0a53777ab5a0445</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>narrow</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a28b402c1ada2f1c71d99854cb8693c28</anchor>
      <arglist>(Containers::ArrayView&lt; const wchar_t &gt; text)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>narrow</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a014e858ed4979934d7d90bf545f938bf</anchor>
      <arglist>(const wchar_t *text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>narrow</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ad81ae601a86426189543698218fb276d</anchor>
      <arglist>(const std::wstring &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>utilities.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>utilities_8h.html</filename>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
    <member kind="function">
      <type>To</type>
      <name>bitCast</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3831cece822dfde455336664676f6867</anchor>
      <arglist>(const From &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>bitCast</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3831cece822dfde455336664676f6867</anchor>
      <arglist>(const From &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>bitCast</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3831cece822dfde455336664676f6867</anchor>
      <arglist>(const From &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Utility.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>Utility_8h.html</filename>
    <includes id="Containers_8h" name="Containers.h" local="yes" imported="no">Corrade/Containers/Containers.h</includes>
    <class kind="class">Corrade::Utility::HashDigest</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue</class>
    <class kind="class">Corrade::Utility::JsonView</class>
    <class kind="class">Corrade::Utility::JsonIterator</class>
    <class kind="struct">Corrade::Utility::TweakableParser</class>
    <namespace>Corrade</namespace>
    <namespace>Corrade::Utility</namespace>
  </compound>
  <compound kind="file">
    <name>VisibilityMacros.h</name>
    <path>/home/mosra/Code/corrade/src/Corrade/Utility/</path>
    <filename>VisibilityMacros_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_VISIBILITY_EXPORT</name>
      <anchorfile>VisibilityMacros_8h.html</anchorfile>
      <anchor>a94f5b366975d677886021cd41bfaacfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_VISIBILITY_INLINE_MEMBER_EXPORT</name>
      <anchorfile>VisibilityMacros_8h.html</anchorfile>
      <anchor>ac332c9c9f3b148b132e7b52a162fe31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_VISIBILITY_IMPORT</name>
      <anchorfile>VisibilityMacros_8h.html</anchorfile>
      <anchor>a62c8c1098f4007c1769d03181a78b33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_VISIBILITY_STATIC</name>
      <anchorfile>VisibilityMacros_8h.html</anchorfile>
      <anchor>ac12ca04badf8b2b6bc283e5f0da3802e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_VISIBILITY_LOCAL</name>
      <anchorfile>VisibilityMacros_8h.html</anchorfile>
      <anchor>a802c9a3721942bf48b11ca6314e14a4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractHash&lt; 20 &gt;</name>
    <filename>classCorrade_1_1Utility_1_1AbstractHash.html</filename>
    <member kind="typedef">
      <type>HashDigest&lt; digestSize &gt;</type>
      <name>Digest</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>a44db12441a55b94fdead99c880fd0a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DigestSize</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>aa41c2cba14c058c8fd70492ab23ada04a1845bcbe98f41a624c92ed7e797a14f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractHash&lt; sizeof(std::size_t)&gt;</name>
    <filename>classCorrade_1_1Utility_1_1AbstractHash.html</filename>
    <member kind="typedef">
      <type>HashDigest&lt; digestSize &gt;</type>
      <name>Digest</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>a44db12441a55b94fdead99c880fd0a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DigestSize</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>aa41c2cba14c058c8fd70492ab23ada04a1845bcbe98f41a624c92ed7e797a14f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; bool &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Array.html</filename>
    <member kind="typedef">
      <type>bool</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab88bec3b842462e9eea5157a4049a094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(bool *, std::size_t)</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6397e3aabed2ca448871a747e19a7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5ab628ed1d689df54ee1e14c9f33e00</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab4c2451e1504971dee5076ad43300be8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aee328791ce2617cb4cbd761522ac4133</anchor>
      <arglist>(Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2d73357c4f1d4847106f08e3433f2ff5</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0411056505395a580b1d8c1c1eec5264</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a254f265dfd10f55861ffe830a706f052</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a5a3992a62430260aa95d039906ad3621</anchor>
      <arglist>(Corrade::InPlaceInitT, std::initializer_list&lt; bool &gt; list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a913499c6a05cd36964ad56d0eaa1f002</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac5e574bd66bf13c323e9bf8f404201af</anchor>
      <arglist>(bool *data, std::size_t size, void(*)(bool *, std::size_t) deleter={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a96d5213dcca0193ecd6c8d67217efde2</anchor>
      <arglist>(const Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ade7103081fcb82b77f40b3a6a0c9bd1f</anchor>
      <arglist>(Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abe3fdda5f09aafcab1a74ca03540ac20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae4fd95d4d6fb93e26fe27daf744fe1f3</anchor>
      <arglist>(const Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6e53420070a5c28fde2922b4688bfced</anchor>
      <arglist>(Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af31e57e0d1e4f2e5d93499c757c8b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aefbd190121eea9f4c4d3ef05ed9f93d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2f5760d29e69b7cd6ed9677d7437dc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a10f73f2e74201f5c31ea178398844543</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const bool *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acc671fef58ee49ca4771122488f0802f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>bool *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0c46890d99721a859619561f719b4e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const bool *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a33fe38b5e0d633ff71d09ac0680fdb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void(*)(bool *, std::size_t)</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acb21f4e838440faf1fb27c734faafb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af1e4ac498e1951951729ecab48134a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa0867c93743b6867c4268cc3ca0a400e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad1cee21a514b977d045ae8886f8f8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abaad6108087008802cd894a6679e2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const bool *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2cf50e3d4736428b83c245135a961044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const bool *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a51dfe4f115f8ed72485d544ab64cf769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a339172cd6f805a667dfbebdcefa533b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const bool *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a123d78064aa332f26b476a45ef0e36f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const bool *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1533ba643c00b3fea2077fbeb39b2afb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af9952bb49bfc14336f8cf74a36972df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5dae33824bfe205b71f15d51a9549f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a09753cc0bf9113ccc38af90b6046885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab36c43874c25c61611ae6b95ae467499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a31ed9632bbdf1612906867854df485bd</anchor>
      <arglist>(bool *begin, bool *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a9ca17fbe62f246a0ecddf34c2f7bdda6</anchor>
      <arglist>(const bool *begin, const bool *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa73a1d7ad0ac1447d8d88bf4528fad53</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa8233e6899d80bdc8b5a29b5d6c06a01</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a579c53eed240bec43484618562965136</anchor>
      <arglist>(bool *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac491c4ab9c19f54cc097e2ea44087a00</anchor>
      <arglist>(const bool *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa13615ad681496ae4cdf399b1983e2de</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a026738f8ed85a893eb7c390642a1717c</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4efc7e35b1c6e07f6a0538e70ae74f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const bool &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a7a7d4aff6c7407560052e6a991ce4270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a24be60e39728f7d05ba83b0a8eb506bf</anchor>
      <arglist>(bool *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a46534a6cb1a2b3fccad4461b36e16f23</anchor>
      <arglist>(const bool *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a417b40b5867ec282c138bd9120c778c5</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6e0382e2f5e9bd21932fc23e6e3898c</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, bool &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4a03329fd16024a3c66786616cfee6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const bool &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aaa88e27dfa475c63ac3387ed0925cf1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a803162c8189d5ce30496dd61d515036b</anchor>
      <arglist>(bool *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a71c394e0726949e796704f63d62a4a86</anchor>
      <arglist>(const bool *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, bool &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af57bee80926e318df2158dff796f38e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const bool &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1b66e1595f447c24eba4579068043a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>adf6635159fa9c6d4c47c4f98ef0248af</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aad441eb3bb38a897fc974dbd95440609</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a362b5bd85f0e5938d7f8c8d0cfb6ce1c</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6afac13af92523dcbc27c9ad62a815a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a18b64076ced177a2e249245fc47231a9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1df9e22238f52449f079e23984067e30</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; bool &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a23d4bc894026561c0aea1ec22d5f6350</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const bool &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a300375138e0e41448e54cedd9982a485</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>bool *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa6256e53419003ba6f434a91f293c92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; bool &gt;</type>
      <name>array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; bool &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; bool, void(*)(bool *, std::size_t) &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; bool &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Array.html</filename>
    <member kind="typedef">
      <type>Corrade::Containers::Array&lt; std::string &gt;</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab88bec3b842462e9eea5157a4049a094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t)</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6397e3aabed2ca448871a747e19a7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5ab628ed1d689df54ee1e14c9f33e00</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab4c2451e1504971dee5076ad43300be8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aee328791ce2617cb4cbd761522ac4133</anchor>
      <arglist>(Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2d73357c4f1d4847106f08e3433f2ff5</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0411056505395a580b1d8c1c1eec5264</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a254f265dfd10f55861ffe830a706f052</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a5a3992a62430260aa95d039906ad3621</anchor>
      <arglist>(Corrade::InPlaceInitT, std::initializer_list&lt; Corrade::Containers::Array&lt; std::string &gt; &gt; list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a913499c6a05cd36964ad56d0eaa1f002</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac5e574bd66bf13c323e9bf8f404201af</anchor>
      <arglist>(Corrade::Containers::Array&lt; std::string &gt; *data, std::size_t size, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) deleter={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a96d5213dcca0193ecd6c8d67217efde2</anchor>
      <arglist>(const Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ade7103081fcb82b77f40b3a6a0c9bd1f</anchor>
      <arglist>(Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abe3fdda5f09aafcab1a74ca03540ac20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae4fd95d4d6fb93e26fe27daf744fe1f3</anchor>
      <arglist>(const Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6e53420070a5c28fde2922b4688bfced</anchor>
      <arglist>(Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af31e57e0d1e4f2e5d93499c757c8b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aefbd190121eea9f4c4d3ef05ed9f93d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2f5760d29e69b7cd6ed9677d7437dc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Corrade::Containers::Array&lt; std::string &gt; *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a10f73f2e74201f5c31ea178398844543</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Corrade::Containers::Array&lt; std::string &gt; *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acc671fef58ee49ca4771122488f0802f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0c46890d99721a859619561f719b4e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a33fe38b5e0d633ff71d09ac0680fdb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t)</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acb21f4e838440faf1fb27c734faafb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af1e4ac498e1951951729ecab48134a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa0867c93743b6867c4268cc3ca0a400e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad1cee21a514b977d045ae8886f8f8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abaad6108087008802cd894a6679e2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2cf50e3d4736428b83c245135a961044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a51dfe4f115f8ed72485d544ab64cf769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a339172cd6f805a667dfbebdcefa533b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a123d78064aa332f26b476a45ef0e36f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1533ba643c00b3fea2077fbeb39b2afb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Containers::Array&lt; std::string &gt; &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af9952bb49bfc14336f8cf74a36972df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5dae33824bfe205b71f15d51a9549f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Containers::Array&lt; std::string &gt; &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a09753cc0bf9113ccc38af90b6046885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Corrade::Containers::Array&lt; std::string &gt; &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab36c43874c25c61611ae6b95ae467499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a31ed9632bbdf1612906867854df485bd</anchor>
      <arglist>(Corrade::Containers::Array&lt; std::string &gt; *begin, Corrade::Containers::Array&lt; std::string &gt; *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a9ca17fbe62f246a0ecddf34c2f7bdda6</anchor>
      <arglist>(const Corrade::Containers::Array&lt; std::string &gt; *begin, const Corrade::Containers::Array&lt; std::string &gt; *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa73a1d7ad0ac1447d8d88bf4528fad53</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa8233e6899d80bdc8b5a29b5d6c06a01</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a579c53eed240bec43484618562965136</anchor>
      <arglist>(Corrade::Containers::Array&lt; std::string &gt; *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac491c4ab9c19f54cc097e2ea44087a00</anchor>
      <arglist>(const Corrade::Containers::Array&lt; std::string &gt; *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa13615ad681496ae4cdf399b1983e2de</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a026738f8ed85a893eb7c390642a1717c</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4efc7e35b1c6e07f6a0538e70ae74f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a7a7d4aff6c7407560052e6a991ce4270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a24be60e39728f7d05ba83b0a8eb506bf</anchor>
      <arglist>(Corrade::Containers::Array&lt; std::string &gt; *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a46534a6cb1a2b3fccad4461b36e16f23</anchor>
      <arglist>(const Corrade::Containers::Array&lt; std::string &gt; *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a417b40b5867ec282c138bd9120c778c5</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6e0382e2f5e9bd21932fc23e6e3898c</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4a03329fd16024a3c66786616cfee6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aaa88e27dfa475c63ac3387ed0925cf1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a803162c8189d5ce30496dd61d515036b</anchor>
      <arglist>(Corrade::Containers::Array&lt; std::string &gt; *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a71c394e0726949e796704f63d62a4a86</anchor>
      <arglist>(const Corrade::Containers::Array&lt; std::string &gt; *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af57bee80926e318df2158dff796f38e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1b66e1595f447c24eba4579068043a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>adf6635159fa9c6d4c47c4f98ef0248af</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aad441eb3bb38a897fc974dbd95440609</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a362b5bd85f0e5938d7f8c8d0cfb6ce1c</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6afac13af92523dcbc27c9ad62a815a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a18b64076ced177a2e249245fc47231a9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1df9e22238f52449f079e23984067e30</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a23d4bc894026561c0aea1ec22d5f6350</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a300375138e0e41448e54cedd9982a485</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>Corrade::Containers::Array&lt; std::string &gt; *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa6256e53419003ba6f434a91f293c92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Corrade::Containers::Array&lt; std::string &gt; &gt;</type>
      <name>array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; Corrade::Containers::Array&lt; std::string &gt; &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; Corrade::Containers::Array&lt; std::string &gt;, void(*)(Corrade::Containers::Array&lt; std::string &gt; *, std::size_t) &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; Corrade::Containers::Array&lt; std::string &gt; &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Entry &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Array.html</filename>
    <member kind="typedef">
      <type>Entry</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab88bec3b842462e9eea5157a4049a094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(Entry *, std::size_t)</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6397e3aabed2ca448871a747e19a7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5ab628ed1d689df54ee1e14c9f33e00</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab4c2451e1504971dee5076ad43300be8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aee328791ce2617cb4cbd761522ac4133</anchor>
      <arglist>(Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2d73357c4f1d4847106f08e3433f2ff5</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0411056505395a580b1d8c1c1eec5264</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a254f265dfd10f55861ffe830a706f052</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a5a3992a62430260aa95d039906ad3621</anchor>
      <arglist>(Corrade::InPlaceInitT, std::initializer_list&lt; Entry &gt; list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a913499c6a05cd36964ad56d0eaa1f002</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac5e574bd66bf13c323e9bf8f404201af</anchor>
      <arglist>(Entry *data, std::size_t size, void(*)(Entry *, std::size_t) deleter={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a96d5213dcca0193ecd6c8d67217efde2</anchor>
      <arglist>(const Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ade7103081fcb82b77f40b3a6a0c9bd1f</anchor>
      <arglist>(Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abe3fdda5f09aafcab1a74ca03540ac20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae4fd95d4d6fb93e26fe27daf744fe1f3</anchor>
      <arglist>(const Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6e53420070a5c28fde2922b4688bfced</anchor>
      <arglist>(Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af31e57e0d1e4f2e5d93499c757c8b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aefbd190121eea9f4c4d3ef05ed9f93d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2f5760d29e69b7cd6ed9677d7437dc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Entry *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a10f73f2e74201f5c31ea178398844543</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const Entry *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acc671fef58ee49ca4771122488f0802f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0c46890d99721a859619561f719b4e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a33fe38b5e0d633ff71d09ac0680fdb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void(*)(Entry *, std::size_t)</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acb21f4e838440faf1fb27c734faafb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af1e4ac498e1951951729ecab48134a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa0867c93743b6867c4268cc3ca0a400e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad1cee21a514b977d045ae8886f8f8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abaad6108087008802cd894a6679e2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2cf50e3d4736428b83c245135a961044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a51dfe4f115f8ed72485d544ab64cf769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a339172cd6f805a667dfbebdcefa533b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a123d78064aa332f26b476a45ef0e36f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Entry *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1533ba643c00b3fea2077fbeb39b2afb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Entry &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af9952bb49bfc14336f8cf74a36972df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5dae33824bfe205b71f15d51a9549f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Entry &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a09753cc0bf9113ccc38af90b6046885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Entry &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab36c43874c25c61611ae6b95ae467499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a31ed9632bbdf1612906867854df485bd</anchor>
      <arglist>(Entry *begin, Entry *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a9ca17fbe62f246a0ecddf34c2f7bdda6</anchor>
      <arglist>(const Entry *begin, const Entry *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa73a1d7ad0ac1447d8d88bf4528fad53</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa8233e6899d80bdc8b5a29b5d6c06a01</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a579c53eed240bec43484618562965136</anchor>
      <arglist>(Entry *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac491c4ab9c19f54cc097e2ea44087a00</anchor>
      <arglist>(const Entry *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa13615ad681496ae4cdf399b1983e2de</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a026738f8ed85a893eb7c390642a1717c</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4efc7e35b1c6e07f6a0538e70ae74f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const Entry &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a7a7d4aff6c7407560052e6a991ce4270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a24be60e39728f7d05ba83b0a8eb506bf</anchor>
      <arglist>(Entry *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a46534a6cb1a2b3fccad4461b36e16f23</anchor>
      <arglist>(const Entry *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a417b40b5867ec282c138bd9120c778c5</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6e0382e2f5e9bd21932fc23e6e3898c</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Entry &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4a03329fd16024a3c66786616cfee6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Entry &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aaa88e27dfa475c63ac3387ed0925cf1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a803162c8189d5ce30496dd61d515036b</anchor>
      <arglist>(Entry *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a71c394e0726949e796704f63d62a4a86</anchor>
      <arglist>(const Entry *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, Entry &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af57bee80926e318df2158dff796f38e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const Entry &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1b66e1595f447c24eba4579068043a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>adf6635159fa9c6d4c47c4f98ef0248af</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aad441eb3bb38a897fc974dbd95440609</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a362b5bd85f0e5938d7f8c8d0cfb6ce1c</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6afac13af92523dcbc27c9ad62a815a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a18b64076ced177a2e249245fc47231a9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1df9e22238f52449f079e23984067e30</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Entry &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a23d4bc894026561c0aea1ec22d5f6350</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Entry &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a300375138e0e41448e54cedd9982a485</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>Entry *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa6256e53419003ba6f434a91f293c92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Entry &gt;</type>
      <name>array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; Entry &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; Entry, void(*)(Entry *, std::size_t) &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; Entry &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; std::pair&lt; std::string, std::string &gt; &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Array.html</filename>
    <member kind="typedef">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab88bec3b842462e9eea5157a4049a094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t)</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6397e3aabed2ca448871a747e19a7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5ab628ed1d689df54ee1e14c9f33e00</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab4c2451e1504971dee5076ad43300be8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aee328791ce2617cb4cbd761522ac4133</anchor>
      <arglist>(Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2d73357c4f1d4847106f08e3433f2ff5</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0411056505395a580b1d8c1c1eec5264</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a254f265dfd10f55861ffe830a706f052</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a5a3992a62430260aa95d039906ad3621</anchor>
      <arglist>(Corrade::InPlaceInitT, std::initializer_list&lt; std::pair&lt; std::string, std::string &gt; &gt; list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a913499c6a05cd36964ad56d0eaa1f002</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac5e574bd66bf13c323e9bf8f404201af</anchor>
      <arglist>(std::pair&lt; std::string, std::string &gt; *data, std::size_t size, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) deleter={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a96d5213dcca0193ecd6c8d67217efde2</anchor>
      <arglist>(const Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ade7103081fcb82b77f40b3a6a0c9bd1f</anchor>
      <arglist>(Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abe3fdda5f09aafcab1a74ca03540ac20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae4fd95d4d6fb93e26fe27daf744fe1f3</anchor>
      <arglist>(const Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6e53420070a5c28fde2922b4688bfced</anchor>
      <arglist>(Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af31e57e0d1e4f2e5d93499c757c8b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aefbd190121eea9f4c4d3ef05ed9f93d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2f5760d29e69b7cd6ed9677d7437dc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::pair&lt; std::string, std::string &gt; *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a10f73f2e74201f5c31ea178398844543</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const std::pair&lt; std::string, std::string &gt; *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acc671fef58ee49ca4771122488f0802f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt; *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0c46890d99721a859619561f719b4e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a33fe38b5e0d633ff71d09ac0680fdb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t)</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acb21f4e838440faf1fb27c734faafb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af1e4ac498e1951951729ecab48134a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa0867c93743b6867c4268cc3ca0a400e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad1cee21a514b977d045ae8886f8f8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt; *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abaad6108087008802cd894a6679e2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2cf50e3d4736428b83c245135a961044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a51dfe4f115f8ed72485d544ab64cf769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt; *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a339172cd6f805a667dfbebdcefa533b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a123d78064aa332f26b476a45ef0e36f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1533ba643c00b3fea2077fbeb39b2afb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt; &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af9952bb49bfc14336f8cf74a36972df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5dae33824bfe205b71f15d51a9549f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt; &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a09753cc0bf9113ccc38af90b6046885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::string, std::string &gt; &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab36c43874c25c61611ae6b95ae467499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a31ed9632bbdf1612906867854df485bd</anchor>
      <arglist>(std::pair&lt; std::string, std::string &gt; *begin, std::pair&lt; std::string, std::string &gt; *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a9ca17fbe62f246a0ecddf34c2f7bdda6</anchor>
      <arglist>(const std::pair&lt; std::string, std::string &gt; *begin, const std::pair&lt; std::string, std::string &gt; *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa73a1d7ad0ac1447d8d88bf4528fad53</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa8233e6899d80bdc8b5a29b5d6c06a01</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a579c53eed240bec43484618562965136</anchor>
      <arglist>(std::pair&lt; std::string, std::string &gt; *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac491c4ab9c19f54cc097e2ea44087a00</anchor>
      <arglist>(const std::pair&lt; std::string, std::string &gt; *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa13615ad681496ae4cdf399b1983e2de</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a026738f8ed85a893eb7c390642a1717c</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4efc7e35b1c6e07f6a0538e70ae74f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a7a7d4aff6c7407560052e6a991ce4270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a24be60e39728f7d05ba83b0a8eb506bf</anchor>
      <arglist>(std::pair&lt; std::string, std::string &gt; *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a46534a6cb1a2b3fccad4461b36e16f23</anchor>
      <arglist>(const std::pair&lt; std::string, std::string &gt; *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a417b40b5867ec282c138bd9120c778c5</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6e0382e2f5e9bd21932fc23e6e3898c</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4a03329fd16024a3c66786616cfee6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aaa88e27dfa475c63ac3387ed0925cf1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a803162c8189d5ce30496dd61d515036b</anchor>
      <arglist>(std::pair&lt; std::string, std::string &gt; *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a71c394e0726949e796704f63d62a4a86</anchor>
      <arglist>(const std::pair&lt; std::string, std::string &gt; *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af57bee80926e318df2158dff796f38e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1b66e1595f447c24eba4579068043a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>adf6635159fa9c6d4c47c4f98ef0248af</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aad441eb3bb38a897fc974dbd95440609</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a362b5bd85f0e5938d7f8c8d0cfb6ce1c</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6afac13af92523dcbc27c9ad62a815a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a18b64076ced177a2e249245fc47231a9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1df9e22238f52449f079e23984067e30</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a23d4bc894026561c0aea1ec22d5f6350</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a300375138e0e41448e54cedd9982a485</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt; *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa6256e53419003ba6f434a91f293c92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::pair&lt; std::string, std::string &gt; &gt;</type>
      <name>array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; std::pair&lt; std::string, std::string &gt; &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; std::pair&lt; std::string, std::string &gt;, void(*)(std::pair&lt; std::string, std::string &gt; *, std::size_t) &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; std::pair&lt; std::string, std::string &gt; &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; std::string &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Array.html</filename>
    <member kind="typedef">
      <type>std::string</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab88bec3b842462e9eea5157a4049a094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*)(std::string *, std::size_t)</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6397e3aabed2ca448871a747e19a7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5ab628ed1d689df54ee1e14c9f33e00</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab4c2451e1504971dee5076ad43300be8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aee328791ce2617cb4cbd761522ac4133</anchor>
      <arglist>(Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2d73357c4f1d4847106f08e3433f2ff5</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0411056505395a580b1d8c1c1eec5264</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a254f265dfd10f55861ffe830a706f052</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a5a3992a62430260aa95d039906ad3621</anchor>
      <arglist>(Corrade::InPlaceInitT, std::initializer_list&lt; std::string &gt; list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a913499c6a05cd36964ad56d0eaa1f002</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac5e574bd66bf13c323e9bf8f404201af</anchor>
      <arglist>(std::string *data, std::size_t size, void(*)(std::string *, std::size_t) deleter={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a96d5213dcca0193ecd6c8d67217efde2</anchor>
      <arglist>(const Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ade7103081fcb82b77f40b3a6a0c9bd1f</anchor>
      <arglist>(Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abe3fdda5f09aafcab1a74ca03540ac20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae4fd95d4d6fb93e26fe27daf744fe1f3</anchor>
      <arglist>(const Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6e53420070a5c28fde2922b4688bfced</anchor>
      <arglist>(Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af31e57e0d1e4f2e5d93499c757c8b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aefbd190121eea9f4c4d3ef05ed9f93d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2f5760d29e69b7cd6ed9677d7437dc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::string *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a10f73f2e74201f5c31ea178398844543</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const std::string *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acc671fef58ee49ca4771122488f0802f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>std::string *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0c46890d99721a859619561f719b4e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a33fe38b5e0d633ff71d09ac0680fdb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void(*)(std::string *, std::size_t)</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acb21f4e838440faf1fb27c734faafb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af1e4ac498e1951951729ecab48134a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa0867c93743b6867c4268cc3ca0a400e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad1cee21a514b977d045ae8886f8f8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abaad6108087008802cd894a6679e2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2cf50e3d4736428b83c245135a961044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a51dfe4f115f8ed72485d544ab64cf769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a339172cd6f805a667dfbebdcefa533b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a123d78064aa332f26b476a45ef0e36f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1533ba643c00b3fea2077fbeb39b2afb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af9952bb49bfc14336f8cf74a36972df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5dae33824bfe205b71f15d51a9549f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a09753cc0bf9113ccc38af90b6046885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab36c43874c25c61611ae6b95ae467499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a31ed9632bbdf1612906867854df485bd</anchor>
      <arglist>(std::string *begin, std::string *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a9ca17fbe62f246a0ecddf34c2f7bdda6</anchor>
      <arglist>(const std::string *begin, const std::string *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa73a1d7ad0ac1447d8d88bf4528fad53</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa8233e6899d80bdc8b5a29b5d6c06a01</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a579c53eed240bec43484618562965136</anchor>
      <arglist>(std::string *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac491c4ab9c19f54cc097e2ea44087a00</anchor>
      <arglist>(const std::string *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa13615ad681496ae4cdf399b1983e2de</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a026738f8ed85a893eb7c390642a1717c</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4efc7e35b1c6e07f6a0538e70ae74f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const std::string &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a7a7d4aff6c7407560052e6a991ce4270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a24be60e39728f7d05ba83b0a8eb506bf</anchor>
      <arglist>(std::string *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a46534a6cb1a2b3fccad4461b36e16f23</anchor>
      <arglist>(const std::string *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a417b40b5867ec282c138bd9120c778c5</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6e0382e2f5e9bd21932fc23e6e3898c</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::string &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4a03329fd16024a3c66786616cfee6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::string &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aaa88e27dfa475c63ac3387ed0925cf1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a803162c8189d5ce30496dd61d515036b</anchor>
      <arglist>(std::string *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a71c394e0726949e796704f63d62a4a86</anchor>
      <arglist>(const std::string *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, std::string &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af57bee80926e318df2158dff796f38e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const std::string &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1b66e1595f447c24eba4579068043a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>adf6635159fa9c6d4c47c4f98ef0248af</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aad441eb3bb38a897fc974dbd95440609</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a362b5bd85f0e5938d7f8c8d0cfb6ce1c</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6afac13af92523dcbc27c9ad62a815a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a18b64076ced177a2e249245fc47231a9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1df9e22238f52449f079e23984067e30</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a23d4bc894026561c0aea1ec22d5f6350</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a300375138e0e41448e54cedd9982a485</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>std::string *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa6256e53419003ba6f434a91f293c92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::string &gt;</type>
      <name>array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; std::string, void(*)(std::string *, std::size_t) &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; std::string &gt; &amp;view)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Comparator&lt; Corrade::TestSuite::Compare::Around&lt; T &gt; &gt;</name>
    <filename>classCorrade_1_1TestSuite_1_1Comparator.html</filename>
    <member kind="function">
      <type>ComparisonStatusFlags</type>
      <name>operator()</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>a26b5498f872db93256cfd6002bf1a925</anchor>
      <arglist>(const Corrade::TestSuite::Compare::Around&lt; T &gt; &amp;actual, const Corrade::TestSuite::Compare::Around&lt; T &gt; &amp;expected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMessage</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>adee45e00d15c7ea1207692cc1bd3248c</anchor>
      <arglist>(ComparisonStatusFlags status, Utility::Debug &amp;out, const char *actual, const char *expected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveDiagnostic</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>af8eebdf248d164913f62ae23b61aa0a7</anchor>
      <arglist>(ComparisonStatusFlags status, Utility::Debug &amp;out, Containers::StringView path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Comparator&lt; Corrade::TestSuite::Compare::File &gt;</name>
    <filename>classCorrade_1_1TestSuite_1_1Comparator.html</filename>
    <member kind="function">
      <type>ComparisonStatusFlags</type>
      <name>operator()</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>a26b5498f872db93256cfd6002bf1a925</anchor>
      <arglist>(const Corrade::TestSuite::Compare::File &amp;actual, const Corrade::TestSuite::Compare::File &amp;expected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMessage</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>adee45e00d15c7ea1207692cc1bd3248c</anchor>
      <arglist>(ComparisonStatusFlags status, Utility::Debug &amp;out, const char *actual, const char *expected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveDiagnostic</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>af8eebdf248d164913f62ae23b61aa0a7</anchor>
      <arglist>(ComparisonStatusFlags status, Utility::Debug &amp;out, Containers::StringView path)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Container&lt; T &gt;</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Container.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Containers::AllocatedInitT</name>
    <filename>structCorrade_1_1Containers_1_1AllocatedInitT.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::AnyReference</name>
    <filename>classCorrade_1_1Containers_1_1AnyReference.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a6e1d1ccf4a35ab9736dee7b673b44223</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyReference</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>ac34dfdf9724a4b0d4d5b82de93f45dd8</anchor>
      <arglist>(T &amp;reference) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyReference</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a4bdeef4fdc12839c552503c372c5bbec</anchor>
      <arglist>(T &amp;&amp;reference) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyReference</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a53ebf1c3a2c411e7adbf31453ffc18a7</anchor>
      <arglist>(AnyReference&lt; U &gt; other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T&amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a9b0e402430ab963902e4b19f94b819b6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator AnyReference&lt; const T &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a6f3d36eac35ed9876fcd06388b1931ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a7da306595aa4f6727985a573ca8f3fe0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRvalue</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>ac8a5eeeed3d28c2ed6e81123a7a0d600</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>abb1b54763ef57717ed45486232d808ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>aa9896ea6aae5797860fc17af2a961bfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1AnyReference.html</anchorfile>
      <anchor>a631f4de171213bcdba39facbe5ca75d2</anchor>
      <arglist>(Utility::Debug &amp;debug, AnyReference&lt; T &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::Array</name>
    <filename>classCorrade_1_1Containers_1_1Array.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab88bec3b842462e9eea5157a4049a094</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>D</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6397e3aabed2ca448871a747e19a7ee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5ab628ed1d689df54ee1e14c9f33e00</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab4c2451e1504971dee5076ad43300be8</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aee328791ce2617cb4cbd761522ac4133</anchor>
      <arglist>(Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2d73357c4f1d4847106f08e3433f2ff5</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0411056505395a580b1d8c1c1eec5264</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a254f265dfd10f55861ffe830a706f052</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a5a3992a62430260aa95d039906ad3621</anchor>
      <arglist>(Corrade::InPlaceInitT, std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a913499c6a05cd36964ad56d0eaa1f002</anchor>
      <arglist>(std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac5e574bd66bf13c323e9bf8f404201af</anchor>
      <arglist>(T *data, std::size_t size, D deleter={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a96d5213dcca0193ecd6c8d67217efde2</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ade7103081fcb82b77f40b3a6a0c9bd1f</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abe3fdda5f09aafcab1a74ca03540ac20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T, D &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae4fd95d4d6fb93e26fe27daf744fe1f3</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T, D &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a6e53420070a5c28fde2922b4688bfced</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af31e57e0d1e4f2e5d93499c757c8b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aefbd190121eea9f4c4d3ef05ed9f93d6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2f5760d29e69b7cd6ed9677d7437dc55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a10f73f2e74201f5c31ea178398844543</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T *</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acc671fef58ee49ca4771122488f0802f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a0c46890d99721a859619561f719b4e31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a33fe38b5e0d633ff71d09ac0680fdb45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>D</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>acb21f4e838440faf1fb27c734faafb41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af1e4ac498e1951951729ecab48134a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa0867c93743b6867c4268cc3ca0a400e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad1cee21a514b977d045ae8886f8f8b75</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>abaad6108087008802cd894a6679e2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a2cf50e3d4736428b83c245135a961044</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a51dfe4f115f8ed72485d544ab64cf769</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a339172cd6f805a667dfbebdcefa533b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a123d78064aa332f26b476a45ef0e36f4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1533ba643c00b3fea2077fbeb39b2afb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af9952bb49bfc14336f8cf74a36972df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ae5dae33824bfe205b71f15d51a9549f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a09753cc0bf9113ccc38af90b6046885b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab36c43874c25c61611ae6b95ae467499</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a31ed9632bbdf1612906867854df485bd</anchor>
      <arglist>(T *begin, T *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a9ca17fbe62f246a0ecddf34c2f7bdda6</anchor>
      <arglist>(const T *begin, const T *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa73a1d7ad0ac1447d8d88bf4528fad53</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa8233e6899d80bdc8b5a29b5d6c06a01</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a579c53eed240bec43484618562965136</anchor>
      <arglist>(T *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ac491c4ab9c19f54cc097e2ea44087a00</anchor>
      <arglist>(const T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa13615ad681496ae4cdf399b1983e2de</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a026738f8ed85a893eb7c390642a1717c</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4efc7e35b1c6e07f6a0538e70ae74f48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a7a7d4aff6c7407560052e6a991ce4270</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a24be60e39728f7d05ba83b0a8eb506bf</anchor>
      <arglist>(T *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a46534a6cb1a2b3fccad4461b36e16f23</anchor>
      <arglist>(const T *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a803162c8189d5ce30496dd61d515036b</anchor>
      <arglist>(T *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a71c394e0726949e796704f63d62a4a86</anchor>
      <arglist>(const T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a417b40b5867ec282c138bd9120c778c5</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6e0382e2f5e9bd21932fc23e6e3898c</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a4a03329fd16024a3c66786616cfee6d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aaa88e27dfa475c63ac3387ed0925cf1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af57bee80926e318df2158dff796f38e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1b66e1595f447c24eba4579068043a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a362b5bd85f0e5938d7f8c8d0cfb6ce1c</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ab6afac13af92523dcbc27c9ad62a815a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>adf6635159fa9c6d4c47c4f98ef0248af</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aad441eb3bb38a897fc974dbd95440609</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a18b64076ced177a2e249245fc47231a9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a1df9e22238f52449f079e23984067e30</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a23d4bc894026561c0aea1ec22d5f6350</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a300375138e0e41448e54cedd9982a485</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>aa6256e53419003ba6f434a91f293c92e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T &gt;</type>
      <name>array</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1Array.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; T &gt; &amp;view)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="Usage">Containers-Array-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="Array initialization">Containers-Array-usage-initialization</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="Wrapping externally allocated arrays">Containers-Array-usage-wrapping</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="Growable arrays">Containers-Array-growable</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="Growable allocators">Containers-Array-growable-allocators</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="AddressSanitizer container annotations">Containers-Array-growable-sanitizer</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="Conversion to array views">Containers-Array-views</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html" title="STL compatibility">Containers-Array-stl</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1Array.html">Containers-Array-initializer-list</docanchor>
  </compound>
  <compound kind="struct">
    <name>Corrade::Containers::ArrayAllocator</name>
    <filename>structCorrade_1_1Containers_1_1ArrayAllocator.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>afc65cf0459fb2f33c7de5e0db8bf164f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>allocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>a914031d871dcdf46666983fa0f4491ff</anchor>
      <arglist>(std::size_t capacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reallocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>a49b084d4522726ba76b59530913289be</anchor>
      <arglist>(T *&amp;array, std::size_t prevSize, std::size_t newCapacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deallocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>aff4fbeceacc26f4c1f00fbd251022f52</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>grow</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>affbb44c590b9f4d3b2fb84606ac56ef2</anchor>
      <arglist>(T *array, std::size_t desired)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>capacity</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>a503ef8deb4c6a11f3355dbc2509bb910</anchor>
      <arglist>(T *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>base</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>a1990ce21901edcfd0829cc834d1d8c92</anchor>
      <arglist>(T *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleter</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayAllocator.html</anchorfile>
      <anchor>a33c24cfc31ff71e0c35b78f731756890</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Containers::ArrayMallocAllocator</name>
    <filename>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</filename>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>AllocationOffset</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a4e9cad8f3e7c6b9fb7e1798bdc29fd53a46671b3202b8fbbdf609b4e0f652fd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a542d3b300dbde451d7f7872f59f9415a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllocationOffset</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a4e9cad8f3e7c6b9fb7e1798bdc29fd53a46671b3202b8fbbdf609b4e0f652fd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>allocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a0a401cb214c11acf8777200ba3845a8d</anchor>
      <arglist>(std::size_t capacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reallocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a2bdd86ab729165d51aa0f6c467171a97</anchor>
      <arglist>(T *&amp;array, std::size_t prevSize, std::size_t newCapacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deallocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a175d7e6751fa085e3da8ad26368392bc</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>grow</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a6009afa251c7e8b1ec3bf41a43e11e48</anchor>
      <arglist>(T *array, std::size_t desired)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>capacity</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a39575a8250233bad6ae5f6694215d248</anchor>
      <arglist>(T *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>base</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>a29879f8ef5ed6e0465fbc18f347df602</anchor>
      <arglist>(T *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleter</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayMallocAllocator.html</anchorfile>
      <anchor>acee9a14fe3f257c9ac7e0a89ac6ec355</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Containers::ArrayNewAllocator</name>
    <filename>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</filename>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>AllocationOffset</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>ae3ce827bc29589ac3a0fb2cd2219d659a6ced72a17160d17b27c476b91b0a7db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>af3143792e9ca40e36d208db2a375a3d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllocationOffset</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>ae3ce827bc29589ac3a0fb2cd2219d659a6ced72a17160d17b27c476b91b0a7db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>allocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>a180b7321a5b26fc065ed933befc040b4</anchor>
      <arglist>(std::size_t capacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>reallocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>a280f97523826cdeab9d71a4d7f9ecf6f</anchor>
      <arglist>(T *&amp;array, std::size_t prevSize, std::size_t newCapacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deallocate</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>a7a7753a88816950dc76aed12db442ebc</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>grow</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>a06349fcedab5a5cab89ca650573b4281</anchor>
      <arglist>(T *array, std::size_t desired)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::size_t</type>
      <name>capacity</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>ad91b5082acb9e63eb228e74e564ba473</anchor>
      <arglist>(T *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>base</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>acc647efecaa6302036e495ac0fbdb7d7</anchor>
      <arglist>(T *array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deleter</name>
      <anchorfile>structCorrade_1_1Containers_1_1ArrayNewAllocator.html</anchorfile>
      <anchor>a1f1228f9ea2db0d0e1d1811b75379103</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::ArrayTuple</name>
    <filename>classCorrade_1_1Containers_1_1ArrayTuple.html</filename>
    <class kind="class">Corrade::Containers::ArrayTuple::Item</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a21d064d56af45a6e1c2a9ab71652d2c7</anchor>
      <arglist>)(char *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a898908080fbbf8dc795d902f1cf3f1ca</anchor>
      <arglist>(const ArrayView&lt; const Item &gt; &amp;items={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a486e037e1cc6283ea26f430557a415a7</anchor>
      <arglist>(std::initializer_list&lt; Item &gt; items)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a166166b84e968ff0d76feecfd0ae7c22</anchor>
      <arglist>(const ArrayView&lt; const Item &gt; &amp;items, A allocator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a9087dc37bfd2ad26b4a4b4da49badc4c</anchor>
      <arglist>(std::initializer_list&lt; Item &gt; items, A allocator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>aa116cecf3ad43942759a36abe858fdd9</anchor>
      <arglist>(const ArrayTuple &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a517ca4db8faed3fe9c3decc57b282c69</anchor>
      <arglist>(ArrayTuple &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayTuple</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>aa22b8c132e9862a9b5f9b95bf1fbc2fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayTuple &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a263e9b417df0b25370960017241a8f56</anchor>
      <arglist>(const ArrayTuple &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ArrayTuple &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a6d094d631248ce66f9fa2079736666cc</anchor>
      <arglist>(ArrayTuple &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Array&lt; char &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>ae3b06b9edfda8b6c3c50cd1edfd94444</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a46e5b8212d89742f045142c7dac53e7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a7039a03365ab6a3bc96a37a498c8133b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a1d188b3d99d3e9af5e9307ea4d21b778</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deleter</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>aa7fdb2beb42b83c381960293bedcc005</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple.html</anchorfile>
      <anchor>a2a7d56da6857a5f795c08a7317cdf28d</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayTuple.html" title="Storing non-trivial types">Containers-ArrayTuple-nontrivial</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayTuple.html" title="Custom allocations and deleters">Containers-ArrayTuple-allocators-deleters</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::ArrayTuple::Item</name>
    <filename>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</filename>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a3c72a4821ac0553255cc37fc96a81158</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size, ArrayView&lt; T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a2b56983ca9b02d08d5ec10850b68834e</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size, StridedArrayView1D&lt; T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>ae37b7db62c08cbcbad752af7d232f870</anchor>
      <arglist>(Corrade::ValueInitT, const StridedDimensions&lt; dimensions, std::size_t &gt; &amp;size, StridedArrayView&lt; dimensions, T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a8068576df20a2f9ebb3e28e123456613</anchor>
      <arglist>(std::size_t size, ArrayView&lt; T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a4cd1f0fbe156f0297ccbd04412fbc184</anchor>
      <arglist>(std::size_t size, StridedArrayView1D&lt; T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>af422a3372a127c18d9273b413934e30f</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, std::size_t &gt; &amp;size, StridedArrayView&lt; dimensions, T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>af15c43bf709a51d05f56c094832c9820</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size, ArrayView&lt; T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a0364f4db57d98fceab4b67679b2f9b93</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size, StridedArrayView1D&lt; T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a1adc25bdf63153c108b7726689f7de0f</anchor>
      <arglist>(Corrade::NoInitT, const StridedDimensions&lt; dimensions, std::size_t &gt; &amp;size, StridedArrayView&lt; dimensions, T &gt; &amp;outputView)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Item</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayTuple_1_1Item.html</anchorfile>
      <anchor>a8e20ee908afdeca3164d67d46c69564b</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size, std::size_t elementSize, std::size_t elementAlignment, StridedArrayView2D&lt; char &gt; &amp;outputView)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::ArrayView</name>
    <filename>classCorrade_1_1Containers_1_1ArrayView.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>acffca460a3bea7a4721e765f069587b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a832bfa9a5d0aa6791d995a80e60621b6</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>aa5b6bedc075e0698b30846770d50d312</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a67f28104cc25005a20a4e1501f264336</anchor>
      <arglist>(T *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a4318ae04782dfafbdbbe764bc3e5f15b</anchor>
      <arglist>(U(&amp;data)[size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a983523ac9454f971954d89363bf044c8</anchor>
      <arglist>(ArrayView&lt; U &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a8c3a0e9e3639eb47f6c99b9d72556bf2</anchor>
      <arglist>(StaticArrayView&lt; size, U &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>af9b5913220fc5e7a42c5fa3b7ad561a5</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a230261d1b1f375d09aa74c5f308a09a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>adf0edfab81a28ba75f8d0baee9116310</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T*</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a4a1ebdba39607ff1957d99ba48677db9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>ad94873c712a5e8e46698936fb8f47b71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a878a1f4c48b49f36fbc4922951d60b5c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a2817724052ace2b86e4ec8c9a27fde5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a6759e541efd29f1bd590240aede6c9f7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a0b8ab5ab09f103c21276d14618a5d6bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>acb1197d09b279ded50ce6187e04d0c31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>ae5982c4c3b93bf0ea82544b772bdf460</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a13ec5077592c88962836e169226160db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a3f2bd3d70fac3c81cee0939d1dd57b2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a75587117ee3c4bb94dc06a09f8642679</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>aa0af13696fd7aa2d0199eea76789e809</anchor>
      <arglist>(T *begin, T *end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>addc4457d3b4ad1457e7bf3b89fd63850</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a5ac728b9126cc497c06a7dbb3f6b3324</anchor>
      <arglist>(T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a5c1e2aae9b90bf0513eaf1d27b4791fe</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; end_ - begin_, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a4d991bb99fef30b7cfa8c027c8c0385e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a90dac489ab8d3b34aeb4a4073ff7471e</anchor>
      <arglist>(T *end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a259cb9a3a4cc1ba4d68cd92a3debcb4b</anchor>
      <arglist>(T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>abdc1720d076798357b630bb520943605</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a311bf20ce6ec9c48934eb3c380bf47af</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a07f1934d6848039d8793ee6d6eb06a1d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a2c5222d836b7d36e8932a9453e3f6144</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a7afdfccf156f9471b9282c38fee2b5b6</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a5595984e64540ff4647cc9fda65bb682</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a0f293b9e5484a13e7b3a36911d2b97da</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a57f8d4e0a25951f539461539c90d4e25</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a4258433529f847d3e6ed10442f6b9b8b</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a32ef8daa386aee742e5f39fc5b1516fd</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>ac8edb9cd0a74f5a0da2ef9c6d03f9ef2</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a95ac37a82ede3b7b4aae3fb20e552c99</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>ac450a49515ff20058552c732542b1b13</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a3a43320e58651eafa9774e04c68545e5</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>ade5f07807e9559c80c45e3c314299b91</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a8e6435208f2cda38505084a930a3e9ec</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a2b0383474d8ce57fbd53da5b5a428939</anchor>
      <arglist>(ArrayView&lt; const void &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a1c745e8ded82f6f653f8aebd7d78514f</anchor>
      <arglist>(ArrayView&lt; void &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView.html</anchorfile>
      <anchor>a19e087600ec3a4f81931386ee28e39ef</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html" title="Usage">Containers-ArrayView-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html" title="Data access">Containers-ArrayView-usage-access</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html" title="View slicing">Containers-ArrayView-usage-slicing</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html" title="Convenience functions and type conversion">Containers-ArrayView-usage-convenience</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html" title="STL compatibility">Containers-ArrayView-stl</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html">Containers-ArrayView-initializer-list</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1ArrayView.html">Containers-ArrayView-single-header</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::ArrayView&lt; const void &gt;</name>
    <filename>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a0a6b855a35b55a914ceb39bee62bdb39</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a2dff420240c3c957e066de9d446ab0d4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a4b52d12c269029373ae89057494cac6a</anchor>
      <arglist>(const void *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a6d3439e67990086c4602766e98da45fc</anchor>
      <arglist>(const T *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a706d201f881c928c380395efe8828c77</anchor>
      <arglist>(T(&amp;data)[size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>aab2edb4e41225dad203a21a7489576b4</anchor>
      <arglist>(ArrayView&lt; void &gt; array) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a2078e2ccd1d07bd2f8c66a66dd49271d</anchor>
      <arglist>(ArrayView&lt; T &gt; array) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a37da08f38dda6d06dc36196dbbc6f29a</anchor>
      <arglist>(const StaticArrayView&lt; size, T &gt; &amp;array) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a11641a8979025a73077d6cf0701287ef</anchor>
      <arglist>(const T &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a83fadb475e0c0bca590cc6098288b512</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator const void *</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>aff5f471896d60a1fa63b4fbf2f0b6d9a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const void *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a4a05731e484156c3653acef2fdce6a55</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>aa385ac9159aacb6f282836948973e6ff</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a33bc1319e0fbf613dfe224e094380ea2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>a2a88a10860c9e7378fb84a26585dcc6d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const typedef void</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01const_01void_01_4.html</anchorfile>
      <anchor>ae7386a61f295baa1583d3f8d5fcb2fc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::ArrayView&lt; void &gt;</name>
    <filename>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</filename>
    <member kind="typedef">
      <type>void</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a61c8369af2a1d2924ebae76047bf93d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>ae5a218a2756550266a54f311f80d0390</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a3210a7c7f4b419168456d5b071edb71b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a2f097505b8bc62c505aac35d4aec9adf</anchor>
      <arglist>(void *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a40f06893bab6163d456d4fad299b31f1</anchor>
      <arglist>(T *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>aa72b415bd3e3eb08c2f2f71fc59db5e6</anchor>
      <arglist>(T(&amp;data)[size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a9bde953c2ffd96fd5c375def79de7e24</anchor>
      <arglist>(ArrayView&lt; T &gt; array) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a5b32b675a9ccce45dab24774ddf4e0fd</anchor>
      <arglist>(const StaticArrayView&lt; size, T &gt; &amp;array) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>ArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>ab1ac331a6b5cdbac3591180e2767194d</anchor>
      <arglist>(T &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>ab4bff475c4a9d866713d115787930e6e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator void *</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>acc694d35d5824f50afbc95af46ae352c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr void *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a4d3154b3ee3c69e37248a0c4fca3d795</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>ac83590a71b13ab29ff1dfe3d94cbbe7c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a176725f0c02524fe9f58b16cfba3481e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1ArrayView_3_01void_01_4.html</anchorfile>
      <anchor>a1ea23bc214a69c4b18fb44fdc80d0352</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::BasicBitArrayView</name>
    <filename>classCorrade_1_1Containers_1_1BasicBitArrayView.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicBitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a269a257699ae06c1563a6c4b755bdc97</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicBitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a40b3d1beb3c50484cfafc0f1ed805284</anchor>
      <arglist>(typename std::conditional&lt; std::is_const&lt; T &gt;::value, const void, void &gt;::type *data, std::size_t offset, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicBitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>aa0d2539a20bd3899dbdc88d210350207</anchor>
      <arglist>(T *data, std::size_t offset, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicBitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>aa098a18334de8fb5984b9f1aa248fcbc</anchor>
      <arglist>(std::nullptr_t, std::size_t offset, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicBitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a03b940930c1b0ea63a0f65cae330ea45</anchor>
      <arglist>(BasicBitArrayView&lt; U &gt; mutable_) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a8ffaf28b29e8a5e98cf3bc5ca2d042a0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>offset</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>ab66ab9f3549bda5d656814c91d4df8cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>ab398581c81541a1f900b55d25fcab1e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a4369cb2dcdd84a9b1e2a6d3447893228</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>aeb29759e726181b168d12370ea734bcd</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a042ab701a021c5e54ea90ee09ec00ffe</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>adf4722c9e9ecd6b07781388a05345fb2</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>ad4a8112920f625ee1a232d375720ff5d</anchor>
      <arglist>(std::size_t i, bool value) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicBitArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>ab99356b5374d41ecbe587caed3bed9a7</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicBitArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a360c26156de7f4ff4ae5a47a38b2ff19</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicBitArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>a39110950ff9c487ca164a94558082301</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicBitArrayView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>af28f84a5a5925e7dbfbb39fe367488c0</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicBitArrayView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>ac1ff9a2a4052f14cc4786322e368377d</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicBitArrayView.html</anchorfile>
      <anchor>afa704f5e7a3ecbb0397f7249892b25eb</anchor>
      <arglist>(Utility::Debug &amp;debug, BitArrayView value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1BasicBitArrayView.html" title="Usage">Containers-BasicBitArrayView-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BasicBitArrayView.html" title="Data access">Containers-BasicBitArrayView-usage-access</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BasicBitArrayView.html" title="View slicing">Containers-BasicBitArrayView-usage-slicing</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::BasicStringView</name>
    <filename>classCorrade_1_1Containers_1_1BasicStringView.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a79352f688ea3abef2934ac9b8258c02f</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a70192a3c1ac91026093bbcf731b29fd6</anchor>
      <arglist>(T *data, std::size_t size, StringViewFlags flags={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ab74f5de4011c7e04a3af2085fac4a037</anchor>
      <arglist>(String &amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a994344462b3598bc53ed1e75b3e76858</anchor>
      <arglist>(const String &amp;data) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ae29589ac27f950803d5bc0c4a62730fd</anchor>
      <arglist>(ArrayView&lt; T &gt; data, StringViewFlags flags={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a1959b52ef467dc5a48ef78d2e90ab984</anchor>
      <arglist>(BasicStringView&lt; U &gt; mutable_) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>aaa16b3bfd9b9fc3bb8aee90cffede33f</anchor>
      <arglist>(T *data, StringViewFlags extraFlags={}) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BasicStringView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a8816f36371ca1e8ddb8b9f40f8fe082f</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; T &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a1aad8852004d78a3588cbe08cd3e1e7a</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; typename std::conditional&lt; std::is_const&lt; T &gt;::value, const void, void &gt;::type &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a964d057d2222cc99480ed6354f30d475</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a2aa943b474b1242c85a2d1299b5d0fbe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a9bee36c14586a93d2a76492682e9310b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StringViewFlags</type>
      <name>flags</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a613b1bca6f17e66cf186445ccb57ebba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a4b373a1040ae19e0bc8bbab6c86bc621</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a5c55bb647d2a86cdfc930764115a5896</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ad11edda00135c844a18a38dbccc51a33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a770ae1d3997e0a57e2763d7323a33734</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a704ddeecee68652b9c7bcb2e9b93c81f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a51db397880fe588866f41f4c772bb029</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ab57107451e3e18d3649b4d18d27653fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a5577212691bbd15d623a343f4dcdf1e4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a12bd99af167dd548040852eb7d80f049</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a1a453a06eee16f94063c0c0f30baac8c</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a87c127d855cc6e8651f01acb759dd1c8</anchor>
      <arglist>(T *begin, T *end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ad9079afc3bb142a37cb8838b415fad47</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a2107724f44c826306185e73c0b9985ff</anchor>
      <arglist>(T *end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a0af6e1682bb1ef61ed8841fffa402ef7</anchor>
      <arglist>(T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ac47ff75176d35a2a5d8994d773578142</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>adc3c7f75b9c6dee255a76a442235c9d1</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>affccccc183f7fd00180984247747e8f1</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ade6a4dc7e9aa263a888ee7896de9c1d7</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BasicStringView&lt; T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a074ff7fad83e2dd8e19c298869757eda</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>split</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a17d94dd0bd4c3673011c4849361304f0</anchor>
      <arglist>(char delimiter) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a7b4d00652b1ca26c77dadd3fddffe819</anchor>
      <arglist>(char delimiter) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>splitOnAnyWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a4be085196f770547f45b8f4637496e1e</anchor>
      <arglist>(StringView delimiters) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a6bd8dcdaec9dd8a1312dabdebba149b8</anchor>
      <arglist>(StringView delimiters) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>splitOnWhitespaceWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ab5761daa1e5db7e45a02befefde88503</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a5f36b10ffceb8f163c8f1637b53d31db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array3&lt; BasicStringView&lt; T &gt; &gt;</type>
      <name>partition</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a92edcd8ace3ecdc78c53f94e0aa3ecea</anchor>
      <arglist>(char separator) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>join</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>af8c95707144ab0a9166ade8de24b2c04</anchor>
      <arglist>(ArrayView&lt; const StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>join</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ac56f4f885cb45db1f75a9aeb9847773b</anchor>
      <arglist>(std::initializer_list&lt; StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a50b141353d81ffb7d00ad4a2fcd0d105</anchor>
      <arglist>(ArrayView&lt; const StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ac9cf0438d023333174e0928481213c5e</anchor>
      <arglist>(std::initializer_list&lt; StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a66752221241bfec7b777ab09602fc7bc</anchor>
      <arglist>(StringView prefix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>af2b3c502b866802f5b31964eec7d1621</anchor>
      <arglist>(char prefix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a403edf0edbe56aa02add16ee25df91f1</anchor>
      <arglist>(StringView suffix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>aae6fccdf0958af3cc6b66eba240287d4</anchor>
      <arglist>(char suffix) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ab64b291f0700a99bf90a733fd49e5862</anchor>
      <arglist>(StringView prefix) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a2f704672d1fc2f266ebdf01c9b098f74</anchor>
      <arglist>(char prefix) const =delete</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>stripPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a7de6c21e12aa326c84a819c7b181a29d</anchor>
      <arglist>(StringView prefix) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a99aa0cfeda87c821fa7b01c85184cf89</anchor>
      <arglist>(StringView suffix) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ae261f4d99deb585c6fd4b785dc17a4b1</anchor>
      <arglist>(char suffix) const =delete</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>stripSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a367b7003a2a6292e993af7b8a05c296d</anchor>
      <arglist>(StringView suffix) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>trimmed</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>af6473fc87b3c0127773950073eb48c4e</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>trimmed</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ae619b3e106d116d825e59973dcad0c2e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>trimmedPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a8b3e1053cc0c64323ede25007da3a200</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>trimmedPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a3c8e998dad62225a9afeadbcb544bdcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>trimmedSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a87627622961820dbc18b130f3a039a51</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>trimmedSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a9dc6f992eabcd87d11ceb2bf0d6255fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a4dd118ac93d9bb7fef15cbf2c00a616b</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>aaa0df864a8b8dc423addf136c41fe0c3</anchor>
      <arglist>(char character) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a3cffa3acba796c00d1ce585bf370b96f</anchor>
      <arglist>(StringView substring, T *fail) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a77e3619403bf8a53682724c42fda0aa9</anchor>
      <arglist>(char character, T *fail) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findLast</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a21cf04442f16e57c0b57c66cbcc4964b</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findLast</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a7452416cc951afb77eefea87cfb8a1c0</anchor>
      <arglist>(char character) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findLastOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a7be608bffa6b50e27fe4069422e311e0</anchor>
      <arglist>(StringView substring, T *fail) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findLastOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>af5711f95eb718e932fd84f2f39acd26d</anchor>
      <arglist>(char character, T *fail) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a7a8201c6d1d819ff1be2b9407234cc00</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ada5a0e1d6ebe8d74420fde3777f24940</anchor>
      <arglist>(char character) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a6dbc69fd3d602f24dfe2b755e631bb93</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findAnyOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a679a7422e84e770a6735e1e5d1a00c59</anchor>
      <arglist>(StringView characters, T *fail) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findLastAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a306bd593c02092205fb92adecf832a32</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>BasicStringView&lt; T &gt;</type>
      <name>findLastAnyOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a27776612c8fe6d5e07df03903cd2c101</anchor>
      <arglist>(StringView characters, T *fail) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a29448a90b65bd1bded0e9b9eae723cf0</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a815d6a62571644602e36e5cb75873d30</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a1d0c9919a189cad91d5e947e469fe750</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>operator&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>aa8704893d969df4c4d260aaab795f5de</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>aac3f4de53b5dbe7cc2cf8a137696d749</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a0fa83ad0b3910ede015470d0698f51f8</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend bool</type>
      <name>operator&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>abb00d76d38db917572497383e2fabd37</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend String</type>
      <name>operator+</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a28d9c1ff2b26546a68579991a2cd56f3</anchor>
      <arglist>(StringView, StringView)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend String</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a80394daafef574dcd2155e850d3ac9cf</anchor>
      <arglist>(StringView, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a7ca22b5bda1e2b25140da52c4021870d</anchor>
      <arglist>(Utility::Debug &amp;debug, StringViewFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>a53285dae247b4d4e7110fcea9991c206</anchor>
      <arglist>(Utility::Debug &amp;debug, StringViewFlags value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StringView</type>
      <name>operator&quot;&quot;_s</name>
      <anchorfile>classCorrade_1_1Containers_1_1BasicStringView.html</anchorfile>
      <anchor>ad01be3d69a30fd3489892c9c39f49cd1</anchor>
      <arglist>(const char *data, std::size_t size)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1BasicStringView.html" title="Usage">Containers-BasicStringView-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BasicStringView.html" title="String view slicing">Containers-BasicStringView-usage-slicing</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BasicStringView.html" title="Character and substring lookup">Containers-BasicStringView-usage-find</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BasicStringView.html" title="Converting StringView instances to null-terminated C strings">Containers-BasicStringView-usage-c-string-conversion</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BasicStringView.html" title="STL compatibility">Containers-BasicStringView-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::BigEnumSet</name>
    <filename>classCorrade_1_1Containers_1_1BigEnumSet.html</filename>
    <templarg></templarg>
    <templarg>size</templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a4fcc0d2adefad21a384a916cc1be29e6ac1bf4b92f901f8c6e111e2464cf9a2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>acdacd7f6e53f2b43cd15ea415892c707</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a4fcc0d2adefad21a384a916cc1be29e6ac1bf4b92f901f8c6e111e2464cf9a2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BigEnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a8c27170b3a08055e96159cb5d5718dcd</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>BigEnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>ab4207faa0ef8f49d3f6bdf90ae086335</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BigEnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a5c0d081c4c0263b4a90edff16bc417b2</anchor>
      <arglist>(Corrade::NoInitT)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a7110a31413052f04831a1ea2ebf6ae23</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a6ba3b1ffb6f3419d7314e42a543449a5</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::uint64_t *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a0e87d26ce80ef460bc531dd41457e01e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>ac1e72152cf8d3a745df51bf86c321d2b</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>ab090e5472eb44da7bc239e0f4c8ccc58</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr BigEnumSet&lt; T, size &gt;</type>
      <name>operator|</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a506c04dd49ea2192c2503916922b307f</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BigEnumSet&lt; T, size &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>aa2ce9d55ae74440d5347b0a7cf16bc1e</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr BigEnumSet&lt; T, size &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>abee746d40ebab38dff2af432530b93dd</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BigEnumSet&lt; T, size &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>aad002aa594a2ae6319016aa1c8095ce4</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr BigEnumSet&lt; T, size &gt;</type>
      <name>operator^</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>ada70ac4e0acb0ef4f28115d3374cf957</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BigEnumSet&lt; T, size &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>adab94bcd876460ac7edb6eac7ed602b6</anchor>
      <arglist>(const BigEnumSet&lt; T, size &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr BigEnumSet&lt; T, size &gt;</type>
      <name>operator~</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a5b0168d97391087a83b87212c758b562</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a20d44a7b5a166eefebe2446a1b6f8627</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>bigEnumSetDebugOutput</name>
      <anchorfile>classCorrade_1_1Containers_1_1BigEnumSet.html</anchorfile>
      <anchor>a43181898a295599ab45af395bce0bbbd</anchor>
      <arglist>(Utility::Debug &amp;debug, BigEnumSet&lt; T, size &gt; value, const char *empty)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::BitArray</name>
    <filename>classCorrade_1_1Containers_1_1BitArray.html</filename>
    <member kind="typedef">
      <type>void(*</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ab90f95ef815ee3ce8ad3ec0eda55399f</anchor>
      <arglist>)(char *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ae6fcf040e968e48a5b864b13d08da4a5</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a68fcd68e2d39848bbacc2bebb9f7301c</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ac7937fd6ba40d8130a7a11026d23b5f3</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a611b5257aa975d76bb9b3fd28ac7103e</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, bool value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ae642b2eeeec65f788f5fdd58d055e2b6</anchor>
      <arglist>(void *data, std::size_t offset, std::size_t size, Deleter deleter) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a177e9a4bd801785e47f03298a00888de</anchor>
      <arglist>(const BitArray &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a4afa9c63845570006a64d1ea3770e546</anchor>
      <arglist>(BitArray &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BitArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>aa08aaf4a75b862f232bbc230ec7fa322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BitArray &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>aae7857719eac5da5f63819ac2bb68a60</anchor>
      <arglist>(const BitArray &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>BitArray &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a3f0f937237dcd4cabb58757e39487b2d</anchor>
      <arglist>(BitArray &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator MutableBitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a245c1eeb0184457f180179b6b5191f5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator BitArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ae468a296bdcb9855da8f086678b541f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a0f6d33100e5a06c5cf43ac30269f6cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a2badc78d61e8be101b681dd8d0ee56dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deleter</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a02a7004a71f8e6c3ddc6294fb39aba2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>offset</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a25dc28dd7db02e59a839920668abe9b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a52a408e3861578a7d70549124b4ccfe3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>af8da902ee7928064939a2e7a8a371a67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>abb77e10ca25e205c3ea07f4d62c78bda</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ad68b67f99cbfe7896612864242170329</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a986868b93651dfe8ef9692542f9a2e95</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ae2440bc88dc3e42a59cc7f6eb3be0a43</anchor>
      <arglist>(std::size_t i, bool value)</arglist>
    </member>
    <member kind="function">
      <type>MutableBitArrayView</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a5e0159688e35109a01ef7c4c18e20002</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>BitArrayView</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a3f84372a7f96f1b488062665b2d545f0</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>MutableBitArrayView</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>af74448ca68377f11b8b2ec75269dc811</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>BitArrayView</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a26979e3ba24808ec5c166aa7d892c60d</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>MutableBitArrayView</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a3dc4341baea6f5f629919761af83e09e</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>BitArrayView</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a52bde1544c6c340249a97bec87dbb44b</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>MutableBitArrayView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>ab176e27deaa4bddb025af62cc71f945f</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>BitArrayView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a9cad8ffa9d2f5af9947cd30acdfe5352</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>MutableBitArrayView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a6b2375326a4804a792628c5bba54f4c0</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>BitArrayView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>a20634d13d393e103429d7b0d0a940158</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>add32072bc7f23d36c428f83082046f96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1BitArray.html</anchorfile>
      <anchor>afb3453189e96b206694100da52c4f5fa</anchor>
      <arglist>(Utility::Debug &amp;debug, const BitArray &amp;value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1BitArray.html" title="Usage">Containers-BitArray-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BitArray.html" title="Bit array initialization">Containers-BitArray-usage-initialization</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1BitArray.html" title="Wrapping externally allocated bit arrays">Containers-BitArray-usage-wrapping</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::EnumSet</name>
    <filename>classCorrade_1_1Containers_1_1EnumSet.html</filename>
    <templarg></templarg>
    <templarg>fullValue</templarg>
    <member kind="enumvalue">
      <name>FullValue</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a6f5b36b75bf349ec1f8f32cc07826039a9e456595199d05472bf7927d329639b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>af79d534425b3439095c579944858bb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::underlying_type&lt; T &gt;::type</type>
      <name>UnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>ae98013f13d62ca0bac69d632905846c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullValue</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a6f5b36b75bf349ec1f8f32cc07826039a9e456595199d05472bf7927d329639b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>EnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aa960627a42a60a832d193cd6b9a1d9a5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>EnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a0c96c4d21532c6e3d4b314af039902e7</anchor>
      <arglist>(T value) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aa91c2985f687a1ef398e7c06d7c3bb93</anchor>
      <arglist>(Corrade::NoInitT)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a73828ac4e6d6125500733a71eccd0d94</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a8ae1892b96c6e781165475388e4cbc53</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aeb270daa9a8afb3a80e57ef2cb2f8314</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a3ac067add1634645e3d64803e5751459</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; T, fullValue &gt;</type>
      <name>operator|</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a89503e71c491ed8fe7bb9f86f48309c4</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>EnumSet&lt; T, fullValue &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a0570b5800f24317a1b52b27d878b9bfa</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; T, fullValue &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a90a8b6b6dad28a4f4dcc69ee1a761def</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>EnumSet&lt; T, fullValue &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a882bec7925638c92d8491ce07108f398</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; T, fullValue &gt;</type>
      <name>operator^</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a8b8c4ac2173541eb7572d66b64931512</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>EnumSet&lt; T, fullValue &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>afc5caf6f9260aedc01b5d532e4143e36</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; T, fullValue &gt;</type>
      <name>operator~</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>ae9d66612bd81553d5e9cab2dd00235ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aaa72f9d5d7ab6e51d66d3698206e7cc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator UnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a49d01415abacaea3fd08be0a18accc54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a74e7890c172dce7a2a5b95c037d55996</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a9ac3a9dbe8d6b8bc0422aaeaf11bfdf8</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>enumSetDebugOutput</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a12c4ea794fa62c56969b1311e2b5c21b</anchor>
      <arglist>(Utility::Debug &amp;debug, EnumSet&lt; T, fullValue &gt; value, const char *empty, std::initializer_list&lt; T &gt; enums)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1EnumSet.html">EnumSet-out-of-class-operators</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1EnumSet.html">EnumSet-friend-operators</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::LinkedList</name>
    <filename>classCorrade_1_1Containers_1_1LinkedList.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>aef8b2c6fac22b76d6510b030de0bd7ff</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ae30e2ad2d45ed813d5b6517da99c2c45</anchor>
      <arglist>(const LinkedList&lt; T &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a20a700a56461d5b8a6892ca147384609</anchor>
      <arglist>(LinkedList&lt; T &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ab9bdae1a80b28b53f4b70edd139c2741</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LinkedList&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a93fe27abbdca0a2bdfffbb0c1c9e52b2</anchor>
      <arglist>(const LinkedList&lt; T &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LinkedList&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a77a0c2633a85000db72a6acf84cfde45</anchor>
      <arglist>(LinkedList&lt; T &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a9d49452ca29d53f6313285e8426ec13a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ae7f1f5924bd7c08a2533a00c05c4276e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>last</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>abdb5e04bfec6bde39d8a20dd8d4d4674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>last</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a3223de2b9ad136253a00b0c3707d3194</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a15cb52dca5c7c77b7a33096b0da57280</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ab85682283d7ef74f20a2c59a3153f9a1</anchor>
      <arglist>(T *item, T *before=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a43d45cf92d3f88f450047b773e5fe157</anchor>
      <arglist>(T *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a39ec134725e0b19f1d9bdfcd5e807973</anchor>
      <arglist>(T *item, T *before)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a5d42a873dd83fbc0cc0084209536f9be</anchor>
      <arglist>(T *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a83550122caae33c90d11d45d0b747184</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1LinkedList.html" title="Basic usage">Containers-LinkedList-basic-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1LinkedList.html" title="Making advantage of pointer to the list">Containers-LinkedList-list-pointer</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1LinkedList.html" title="Using private inheritance">Containers-LinkedList-private-inheritance</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1LinkedList.html" title="Memory management">Containers-LinkedList-memory-management</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::LinkedListItem</name>
    <filename>classCorrade_1_1Containers_1_1LinkedListItem.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LinkedListItem</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a61ce16db8160e1d80e881d5761f4752b</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkedListItem</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>abe1d3f91dd60c7f44e177f6b4c06c016</anchor>
      <arglist>(const LinkedListItem&lt; Derived, List &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkedListItem</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a5a9b570f0fe78f27598febccdae1ddde</anchor>
      <arglist>(LinkedListItem&lt; Derived, List &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>LinkedListItem&lt; Derived, List &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a90bcc82eb9c28daf4648d7ae3f820a49</anchor>
      <arglist>(const LinkedListItem&lt; Derived, List &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LinkedListItem&lt; Derived, List &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>af9f41d1506c9ef6ef4e4f0bb8f3882ef</anchor>
      <arglist>(LinkedListItem&lt; Derived, List &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~LinkedListItem</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a0863b9d8b2ea61e35ff0aac3780870cb</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>List *</type>
      <name>list</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>ab607f167b90d2b00e42b238240afb36d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const List *</type>
      <name>list</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a43c52dbbec0606b5b9d76bb7fa80e427</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Derived *</type>
      <name>previous</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a600d8bd1ebea7689159d9c37e1302fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Derived *</type>
      <name>previous</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>af9bb37285e909fb65e623c3ae3308445</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Derived *</type>
      <name>next</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>ac878e7e23048b57e2e577f73ff2d4870</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Derived *</type>
      <name>next</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>a49a7456d1edcc292eb7e0c8a0ea8e3f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>acb954b145234f6ff5ae43f9f2a951b0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>doErase</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedListItem.html</anchorfile>
      <anchor>ad08311da29e0b1bad4ffeaeaa5699c2b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::MoveReference</name>
    <filename>classCorrade_1_1Containers_1_1MoveReference.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a725f31b60c9863f2fb5403ebcba55460</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MoveReference</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a0af31fa595fefba19310891620ce6434</anchor>
      <arglist>(T &amp;&amp;reference) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MoveReference</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a15d1473709f790c123d85f227651d1a8</anchor>
      <arglist>(T &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MoveReference</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a5f0849cb4bd7570615ce3dbaae95a9fc</anchor>
      <arglist>(MoveReference&lt; U &gt; other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T&amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a5fef4c6bdf1c9d963501aadf15db2662</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a2d7c5c1ee5a373bdeba383c8572fb714</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a8ecc3878c8f514b52420f0ea29a60ee4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a0202b732fdc22eb4441a66c2d2393bf1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1MoveReference.html</anchorfile>
      <anchor>a3fd4ae2c4d0ed70ca1ad48e89421d830</anchor>
      <arglist>(Utility::Debug &amp;debug, MoveReference&lt; T &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Containers::NullOptT</name>
    <filename>structCorrade_1_1Containers_1_1NullOptT.html</filename>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>structCorrade_1_1Containers_1_1NullOptT.html</anchorfile>
      <anchor>aa6b2e93a65009b7ac7278b36bcd760c9</anchor>
      <arglist>(Utility::Debug &amp;debug, NullOptT)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::Optional</name>
    <filename>classCorrade_1_1Containers_1_1Optional.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>ae6793b9a71ea9f1ea8df118c51e29d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a8e6f9f4c19abb7a88932b06d150d80b7</anchor>
      <arglist>(NullOptT=NullOpt) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a229eaf8f609ecb1f0548734cd975676d</anchor>
      <arglist>(const T &amp;value) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>ae7e155789f51cfdff1b06f3800249a5e</anchor>
      <arglist>(T &amp;&amp;value) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a99e8910effb09790dc014c052efa4110</anchor>
      <arglist>(Corrade::InPlaceInitT, Args &amp;&amp;... args) noexcept(std::is_nothrow_constructible&lt; T, Args &amp;&amp;... &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a0b40ee5091561043f7b3db2105df0521</anchor>
      <arglist>(const U &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a3b40412d5eabf3aef81e871a1d8800dd</anchor>
      <arglist>(U &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>aa9d04a3b7e025d6428552ee7a7b572af</anchor>
      <arglist>(const Optional&lt; T &gt; &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a89c8a0260c48815b8938484ae455c592</anchor>
      <arglist>(Optional&lt; T &gt; &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a2dcb464863ceb583033a012f53c3a7ad</anchor>
      <arglist>(const Optional&lt; T &gt; &amp;other) noexcept(std::is_nothrow_copy_assignable&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a6946a7975796cd2c4e6472e33ee679c6</anchor>
      <arglist>(Optional&lt; T &gt; &amp;&amp;other) noexcept(std::is_nothrow_move_assignable&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a1bdc77d731bcc50845234e56450117e9</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>af1d5a8614a3d524db3263cc18494c9c5</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a36e2f775d6c9e4a209b24d1dda3f19b6</anchor>
      <arglist>(NullOptT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>aca99a8049370de23ee82834babab94ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a389cd0c17eac32b9194f922fccc91934</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a5845d1d681735a657392eb2b9bdd7e4b</anchor>
      <arglist>(const Optional&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>afd0801e25b3bf275106b816bb43e27f4</anchor>
      <arglist>(const Optional&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a54979ab51051dfd5827c7cd59ef9595b</anchor>
      <arglist>(NullOptT) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>aace07343ad31c9b87fa8e18f77c1c629</anchor>
      <arglist>(NullOptT) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a73e7c08fd5a5dfe4c88ada7f145bc3fe</anchor>
      <arglist>(const T &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>ad95905fb8f63ad6a56d75aa82c4ad53f</anchor>
      <arglist>(const T &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a000cfe22c91613c0acfb0816d06a3f5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a0816ce03c981b5cf64644973619bc861</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>abb165741359d8a8e0b6825d8795ffe68</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a9a21d334791c398dffc45ebf54331463</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a36fe962ed14ab96a2ba603c233d08d81</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a28d3d69d7026de71a44797101d29f2ab</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a8404f64fbb8bf4965462b97179e4ebaa</anchor>
      <arglist>(NullOptT, const Optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a1c553d2af62a154653128d1d9ce46a7f</anchor>
      <arglist>(NullOptT, const Optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>aba65d386a0b9f9cfd54919c48bbd87e8</anchor>
      <arglist>(const T &amp;a, const Optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a19c44b59df82dbebce8c720ec88717f5</anchor>
      <arglist>(const T &amp;a, const Optional&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; typename std::decay&lt; T &gt;::type &gt;</type>
      <name>optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a71e22f3640eb28dd7b2f7b8339931224</anchor>
      <arglist>(T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; T &gt;</type>
      <name>optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>a828d28109eb44c02f39b554a392606e9</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>optional</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>ab28ec333a1a0bfbfe1f0e93b200fe1a1</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedOptionalConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Optional.html</anchorfile>
      <anchor>abb61d1d1f8de79a08d22cef7ef99cb36</anchor>
      <arglist>(Utility::Debug &amp;debug, const Optional&lt; T &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1Optional.html" title="STL compatibility">Containers-Optional-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::Pair</name>
    <filename>classCorrade_1_1Containers_1_1Pair.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>F</type>
      <name>FirstType</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a79165cc19bf14cca13f30c1d3cfbeea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>S</type>
      <name>SecondType</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>afc541352de128bc5bfedda330d32349d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>aea24020d2923373c9c7e4482f91ab3d7</anchor>
      <arglist>(Corrade::DefaultInitT) noexcept(std::is_nothrow_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a49dccbe7ae7c685b4092d39e2cdec8e8</anchor>
      <arglist>(Corrade::ValueInitT) noexcept(std::is_nothrow_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>aaced1ee137d62c888b4fdd25afa47287</anchor>
      <arglist>(Corrade::NoInitT) noexcept(std::is_nothrow_constructible&lt; F, Corrade::NoInitT &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S, Corrade::NoInitT &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a8e31a2b4d8e068b7789a32e64d6430d3</anchor>
      <arglist>() noexcept(std::is_nothrow_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a8fa80b4a414bed664742161c75664011</anchor>
      <arglist>(const F &amp;first, const S &amp;second) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a829bb28455b1731aff6707a30970f6f4</anchor>
      <arglist>(const F &amp;first, S &amp;&amp;second) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>ac4c209ac4ca3928300c15343106ae48a</anchor>
      <arglist>(F &amp;&amp;first, const S &amp;second) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a0a0c9e2b11d97d1243fb29b2ebfa904f</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>ab000a4c1c3d3ee842dd3b448a0d6e476</anchor>
      <arglist>(const T &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a5d1e90fd846d4bb556a350156bae9e2f</anchor>
      <arglist>(T &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a81cf22e025b1a26b2fe2a26d813ad43f</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a4abc181d7c897da96cac761bdfef574b</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a76c2c55127a162c328fdbc3b94f9aa29</anchor>
      <arglist>(const Pair&lt; F, S &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>ac7b1571e572e71513b985d39f52f8eae</anchor>
      <arglist>(const Pair&lt; F, S &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>F &amp;</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a001dba7496c1b661093bd47238db225d</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>F</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>aa2a9d3e254b285b649bf7a22884b1860</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr const F &amp;</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a81421f5df18c1c3e9a766505c2712d5e</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>S &amp;</type>
      <name>second</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a014fa4f56e62300f546d2b147520e989</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>S</type>
      <name>second</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a7248ef0a25a2cf27aa47e11b0de3aa80</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr const S &amp;</type>
      <name>second</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a7836682b84a5c11d28d0b44bcc4122ae</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr Pair&lt; typename std::decay&lt; F &gt;::type, typename std::decay&lt; S &gt;::type &gt;</type>
      <name>pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a2b7783627dcc6a1de27b18a1b91474db</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pair</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>a299657ac36033cc6c615ca68b983ec6d</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedPairConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pair.html</anchorfile>
      <anchor>aa79db538d184d2734aceb7cb4a77105c</anchor>
      <arglist>(Utility::Debug &amp;debug, const Pair&lt; F, S &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1Pair.html" title="STL compatibility">Containers-Pair-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::Pointer</name>
    <filename>classCorrade_1_1Containers_1_1Pointer.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1ac189c3d3b9c29eb10a2b41063d9cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>adfca41b457c65ad6f7a20e4da25a551d</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6961c1d838ce004acce16785ec434c91</anchor>
      <arglist>(T *pointer) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6cf6dc2d19c4f8fbfea21e3cace0015d</anchor>
      <arglist>(Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a30e35c7e582758f8814c2f6b6801dce8</anchor>
      <arglist>(Pointer&lt; U &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a4e598da5a54d78e0f6e3802a3678ccde</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab3fc3f6972074b386bf623601dfcbebd</anchor>
      <arglist>(const Pointer&lt; T &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a7cf60434462a0199b5bda1ecf4f80c01</anchor>
      <arglist>(Pointer&lt; T &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af50cfd42d6d0cbdd0909f66b7d99c8db</anchor>
      <arglist>(const Pointer&lt; T &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac18ee6f61f98e309e478725c61079a75</anchor>
      <arglist>(Pointer&lt; T &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a26d98d69b279f2618edf0785882e01e5</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a5b3089b6c7e3e57b3ebc712b3a1b65a5</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aded8d11d6271891c1fa62572e59bc6dd</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a3e4509891d92dde6088f5a73b0881a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6f4df0db94fe387105c56d0691a25ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a341521cc065c95861ed82d85e26a33d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a98b642e46b44b5a4d10a36e216470783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a52a73243270252c6f91851b377958e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae225b88b0d07991e9fff931bfab2f5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1bd4dcdbb9ad21123d874c69b0b49314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a291813c6366b015f9b5736bae9d6d4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac4150a4c7336f33d3e0bdbec832154ab</anchor>
      <arglist>(T *pointer=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>emplace</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76f18ffe7324c11f56cf073ca2737717</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aaa8b2ed64ca7afb46c614e7aea7893a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af9b9640eac6d17650d0cc5111c4a19b6</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a141814794f6072316c8fa72afc8c7f76</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; T &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76b1a48222910763fdc5046b6625090e</anchor>
      <arglist>(T *pointer)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9fe9dd514c016cdbff0fddf90ae1250f</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedPointerConverter&lt; T &gt;::from(Utility::move(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; U &gt;</type>
      <name>pointerCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae1b70d106c3a13b76188c0f7f956cb0c</anchor>
      <arglist>(Pointer&lt; T &gt; &amp;&amp;pointer)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab287dc10fa2591e662d9a9ea611a3dad</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9c784a034b942686ae70ce8f5b237e26</anchor>
      <arglist>(Utility::Debug &amp;debug, const Pointer&lt; T &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1Pointer.html" title="STL compatibility">Containers-Pointer-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::Reference</name>
    <filename>classCorrade_1_1Containers_1_1Reference.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>aca4f1cdecedd512e56c231861603a4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a0421d566b189294de33306844e96d9f7</anchor>
      <arglist>(T &amp;reference) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a4e6818b1ac252c831d5198b8e8e115a4</anchor>
      <arglist>(U other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>abf5b9c0a0a35bdf6328b3658081d40ae</anchor>
      <arglist>(T &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>af8d23ae013554277f6b59ff891df756d</anchor>
      <arglist>(Reference&lt; U &gt; other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a752abdaca2a9f9e76bf884aad6703b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T&amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a4d0a1c40a15d30c915b7062daac42c3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Reference&lt; const T &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>ac2fd386035105f40e6db5ef640f28e5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a8891dbfbf35e37be7cd08432dd5bb2a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>aeb149ea11dc647219e66f4facf98acae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>ae1d1f00f31487a26fc01505832373006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>aa892af89bfa655998bd63bcbf394691c</anchor>
      <arglist>(Utility::Debug &amp;debug, Reference&lt; T &gt; value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1Reference.html" title="STL compatibility">Containers-Reference-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::ScopeGuard</name>
    <filename>classCorrade_1_1Containers_1_1ScopeGuard.html</filename>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>a1b7d59f95a7b156639c2671102dd8f7f</anchor>
      <arglist>(T handle, Deleter deleter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>a00c3d0bd42409200a280127687bd0580</anchor>
      <arglist>(Deleter deleter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>aecd96f83f9ecd1778fbf9a1f112b50f3</anchor>
      <arglist>(Corrade::NoCreateT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>af181b4a883075a31cdf935f13beb0ba4</anchor>
      <arglist>(const ScopeGuard &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScopeGuard</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>a7d9337644488ee1086912f655768e43d</anchor>
      <arglist>(ScopeGuard &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>ScopeGuard &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>ad300789a640b1dda8c16091721ff7842</anchor>
      <arglist>(const ScopeGuard &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>ScopeGuard &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>a7a276296f80518dd547195fb828cd00b</anchor>
      <arglist>(ScopeGuard &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>a03fd2918f7b6d050298107592d6c09ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopeGuard</name>
      <anchorfile>classCorrade_1_1Containers_1_1ScopeGuard.html</anchorfile>
      <anchor>ae4ed8751135f11348d2a6790ee88b661</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1ScopeGuard.html" title="Deferred guard creation">Containers-ScopeGuard-deferred</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StaticArray</name>
    <filename>classCorrade_1_1Containers_1_1StaticArray.html</filename>
    <templarg>size_</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a51237c3e37082123619e0627f447a047a793db039a8e75b1828c2a507e5838126</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ad9b13acda5c9963c7e36f7d94f225655</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a51237c3e37082123619e0627f447a047a793db039a8e75b1828c2a507e5838126</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a0969e4b4b3308352ecce56fbe41403d7</anchor>
      <arglist>(Corrade::DefaultInitT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>afc4c5e18c82804b5b8d77bc61f5275d2</anchor>
      <arglist>(Corrade::ValueInitT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>af7d7ecd7ef4f5c6c29be3c156d4cb8a7</anchor>
      <arglist>(Corrade::NoInitT)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ae0b06d1be2ebdb24ebecc0dfe9381be6</anchor>
      <arglist>(Corrade::DirectInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a95d38a448c3786cdcafe73796347b176</anchor>
      <arglist>(Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ac41f170965520c13b1b1c9d07c919a7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>aec452637a8ad99dc3874750259743cc1</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a9cdb8192edf5b3912d836dbdebe4ff4c</anchor>
      <arglist>(const StaticArray&lt; size_, T &gt; &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticArray</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a4e7644f14a1957d06b710e74feeb25ca</anchor>
      <arglist>(StaticArray&lt; size_, T &gt; &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>StaticArray&lt; size_, T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a467425e1822900300458402be8ba4714</anchor>
      <arglist>(const StaticArray&lt; size_, T &gt; &amp;) noexcept(std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>StaticArray&lt; size_, T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>adc7416269130f1f20481cec25f5801c1</anchor>
      <arglist>(StaticArray&lt; size_, T &gt; &amp;&amp;) noexcept(std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ae64dcf43e1867da50b75eff9cf4e4c0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a4957164b25fe57fee9e08f7fd5aa30b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T*</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a616c392d21467c3abb20a30bf60a94d2</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const T *</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a9672861f978d238efea9bef3ae9aa8bf</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ad36bd00f178baa6fcb1dfc8f2b2461fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a9472448c92fb04b458d5569dc25ebbd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a41e0261133d4f749f303cd162568dbe4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ad478f798701486ad03a09f95c44cb45d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>adfa4ea7854df8de503dd80cb419884ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a1ae548f4a2509c8c1c4a25a02075e52c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a33edd30d5450681c273fb9826a3d960b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>acbedfc8ef519f591c185c18b6839a8cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a5c5506da630022bfa4a92daaadf5d5d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a7d118529b4c19452906c925a4b5c9374</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a3f3f2b89e36de45614418e1c81827518</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a1491d5812540497153e321aab5769f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a452ad29b355cc37f572dc2f7c31e8a84</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a99b0fe57c62f465b1509a5173adc05b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a63886a151093e8da913fda15704ccf03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a79930f8ca1d65cbe71976589adc5e367</anchor>
      <arglist>(T *begin, T *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>af14314de477a94af46a40bcb87d7f674</anchor>
      <arglist>(const T *begin, const T *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a2f5a20be2e89d05cddc0043e204fd4d2</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ab4ff0fb5b9781dd32a9578d2ec60b524</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a6a079b593ff394a014dc804d8ddb5b09</anchor>
      <arglist>(T *begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ae83058b73c7f44b5f93ed16df591ea0e</anchor>
      <arglist>(const T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a07bdadedfb901f1235d116b29173f25a</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a58ed0b9d5defe32232dd909e6aa19f48</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ae672af9c04935db6384849c6ce0872d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; end_ - begin_, const T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a0a713dee4606401b7ff5ceb832c0a037</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a47fc19252e6719d0d53cb80c70523875</anchor>
      <arglist>(T *end)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ae105eb6e7c7fa72448cbe872a7699289</anchor>
      <arglist>(const T *end) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>aac621f1a78ed76071622d73a584d69a3</anchor>
      <arglist>(T *begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a094c5def39f369b513014eaf11f5002f</anchor>
      <arglist>(const T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ac96f5b1058fa28b878403f9f7e06ccf9</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ac8d334032f7db68db2bf2352949d86ae</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a5405d9c7da867f1d7866a9f6604a7f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; count, const T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>afd1da086934ab65226b3867cebbde531</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ad5d1a0a924542ed29a4feb2edb6094e7</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a05d12be2399b82f4f31e3ad11fac7ed9</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a886b160fc0e823ac4542eb1ad4ca63c6</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a54f923433bebd94efd9baf56ea481651</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - count, T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a6fdd77ce57e3c30093d71cdcdeb05d38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - count, const T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a3f8e16b9e4bd60d62da07608a3a8a1b4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - begin_, T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a690d98451f7cd306a157bf987e7dd212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - begin_, const T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a6cdba11012638927e5917039793a828f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a192894ed2609b3e0dd0784878adc35ec</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ad515205165b783e3cb5a3d8e0e45d297</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>adb35df6d32598b0731ad92936e06205d</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a4270aef389651ca4555753dd2f69b4c8</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - count, T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>acd38261c5490c08dba078e7a493ecb15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - count, const T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>acd884caed65f8557e358cf779fd79780</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - count, T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a8f8698347ac49d63f388f88fc716ec5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size_ - count, const T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ad9be9048afe4879aa65e02550bd6c41c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>aa8111199cdb6cc30c470e3cc9c54a30e</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a5b40a450ade4927381bf97a165e3621e</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a4f6c86de70a1ab496a1d798648c22f80</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, const T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>ab15dc352f75f85e562eaa85ae058ac9f</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a5ebf447d7f388e81fe6d34910c80cfbe</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArray.html</anchorfile>
      <anchor>a0cad6e09b65666040bb2460df883e4a3</anchor>
      <arglist>(const StaticArray&lt; size_, T &gt; &amp;)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1StaticArray.html" title="Usage">Containers-StaticArray-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StaticArray.html" title="Array initialization">Containers-StaticArray-usage-initialization</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StaticArray.html" title="Conversion to array views">Containers-StaticArray-views</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StaticArray.html" title="STL compatibility">Containers-StaticArray-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StaticArrayView</name>
    <filename>classCorrade_1_1Containers_1_1StaticArrayView.html</filename>
    <templarg>size_</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a7aab92766227d3c4afb7bd51ad75fb7ca50dc475b85658e4e449517955ac6c5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a79d34b8f42168ee332f42fd462dfbbc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a7aab92766227d3c4afb7bd51ad75fb7ca50dc475b85658e4e449517955ac6c5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StaticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>afa86e55be630568e83e24f1ef212ffa7</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StaticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aef1b8c9af2177bf7e0272755ae5cd26f</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StaticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a72c71c4efe6a687e1d0f5165b2100466</anchor>
      <arglist>(T *data) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StaticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a591e233d706fa154872a7eae4d949193</anchor>
      <arglist>(U(&amp;data)[size_]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StaticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a2edead72560a51aa054885027f2b56c7</anchor>
      <arglist>(StaticArrayView&lt; size_, U &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StaticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ae3383f4f7c8841f0579df1186e2b6c84</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a942b26e03674f403d49b75b0c4bd212c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a356e96320af324d7ff63f62e632bf084</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T*</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a6de630dfffba4018980b6971c3da35d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a65f9c2208c10f7b980bfb5f1f62fca37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aaf0791568c7d8b1df06766efa91562df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>afcade31dfdec6765362c45731324d1a2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aab36c893ec4a90b0ddd052479bfe23bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a8295ef9141ccd3abd0b195a2317392a5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ab781fd117ff7d4f6ec133d09529b5cb1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ae1fa7dc33b3a81bc3557895f2524583b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a99840c2227fa085908fcca6dbafe8123</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a662a83592ee536889904461f86161900</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a8324aed3f627df27a755b5e632298fd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a29d45fa202e7cde3ae9652ed21379eb1</anchor>
      <arglist>(T *begin, T *end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aa133dfbb9b1dafedf54e80e872a8dadd</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>af1b7d0addd61aa986340bc971c634d5f</anchor>
      <arglist>(T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a250818239dd47231b434bea44f13d246</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; end_ - begin_, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>afa2366549bf84bb302185806a1f8ff7e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a5db2e47bb1950100ea0455cbdf9d7314</anchor>
      <arglist>(T *end) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a95c4ea6917ad03481da854253685f764</anchor>
      <arglist>(T *begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a16943419410e2df4ba441305285c4347</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; count, T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ad110c37db5198075c373507fe1d0d67e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ad6b2129460caf260fe19f3c188ddce38</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a3f99acca19638ecae55091a8ec358bd3</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size_ - count, T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a9ac5d6456027ec2ac356a2571b4bf1ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size_ - begin_, T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>af0b0dece4b1d9f8599c51b56fbc5ec43</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ade17e5e3f2466bd81b3b28fed08fd1ff</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>ab0689f6537c3c70dc0fdd792d6d81bcd</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size_ - count, T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aa62a642492058a538650f1e8111da37d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size_ - count, T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a06fa5cb162c29b74418b944309d84d68</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a58d7bb8d46f44949b57b226485db4a9b</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a3cf428b256a5ed8941145e4d15ae8b45</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aeb96550df22942b8379e77d3942c88c4</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>staticArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>a2f1123798b8bee4ebadf785646108c98</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aee41b58bdb45963c476ce7554dda2290</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StaticArrayView.html</anchorfile>
      <anchor>aee9c43d476128f05403e638ce539c90d</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1StaticArrayView.html" title="Usage">Containers-StaticArrayView-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StaticArrayView.html" title="STL compatibility">Containers-StaticArrayView-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StridedArrayView</name>
    <filename>classCorrade_1_1Containers_1_1StridedArrayView.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a999c65ed1892b163d81a0aada185b179afe9163bc54c942d382f73916b318e314</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>abb81f83fa1c939c3e752d50269f61e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional&lt; dimensions==1, T &amp;, StridedArrayView&lt; dimensions - 1, T &gt; &gt;::type</type>
      <name>ElementType</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>acca545349b4e2482a87de8db5f942694</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional&lt; std::is_const&lt; T &gt;::value, const void, void &gt;::type</type>
      <name>ErasedType</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a3195af1de409d1632d012511e778c56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedDimensions&lt; dimensions, std::size_t &gt;</type>
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a1b68d4075a2b003c3b7381a1e1d0ef3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedDimensions&lt; dimensions, std::ptrdiff_t &gt;</type>
      <name>Stride</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a06b164d937102e231498d949a23dae94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a999c65ed1892b163d81a0aada185b179afe9163bc54c942d382f73916b318e314</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a8b8a8a898f82ed191cb0e800600d0db2</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af96e5d642a9d8cf88eaa6388a8f55a24</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af0065130b98239eebee75446ab967e61</anchor>
      <arglist>(ArrayView&lt; ErasedType &gt; data, T *member, const Size &amp;size, const Stride &amp;stride) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a70886e3bf34074c88658b6b22b987d34</anchor>
      <arglist>(ArrayView&lt; T &gt; data, const Size &amp;size, const Stride &amp;stride) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a2e6bd22c66381fc321c245100974cb68</anchor>
      <arglist>(ArrayView&lt; T &gt; data, const Size &amp;size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a1b8c0993cdbfb262ee66313c1284f59b</anchor>
      <arglist>(T *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>afd8d0914a7b63621db049c95e67ea20d</anchor>
      <arglist>(U(&amp;data)[size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a2ece0806b1aed72aa07ddbbcb5f84947</anchor>
      <arglist>(StridedArrayView&lt; dimensions, U &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af0b40a344972d6c815a0a62129dca8cc</anchor>
      <arglist>(ArrayView&lt; U &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a747b319ad0808ffb8787c853bae78991</anchor>
      <arglist>(StaticArrayView&lt; size, U &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a59bbfaa3d40c6b78effb42efbdbbe6f0</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a238b21bdb720fdefe5e35b9a0a095093</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr ErasedType *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a871a799cf0170d403286605fb98a8b16</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::conditional&lt; dimensions==1, std::size_t, const Size &amp; &gt;::type</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a5e0efbfda16235973f7e415a11da4aa2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::conditional&lt; dimensions==1, std::ptrdiff_t, const Stride &amp; &gt;::type</type>
      <name>stride</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ab4ebcdd6cf8c77bdbfb3829ef98c7ad5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedDimensions&lt; dimensions, bool &gt;</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af80ac65c5878e3c4b4093697d353d0bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedDimensions&lt; dimensions, bool &gt;</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a2c71260cee808abbdf417f9bf7613348</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a7cde3fb1dc0ae5a35c50fc2a8e5fbac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>asContiguous</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>aedbfa15797ae4668a8a2d28bf15dd0de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimension+1, T &gt;</type>
      <name>asContiguous</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a9b2ff7d55f220df0b1765f5ef36c3745</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a8f9aff96d63b449c09e8d5156f104abb</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a0c79c72d2d67bbd3969d8576e5f479b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a568cc60c418120e288351d16b48ec0bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a0e69750cbb77e23ad2edb68432a9f988</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a4da6f753fb788ad0c8f216bcdf8e99ca</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a83c222828b4d30da20f63acd4bbd2f37</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a0ba52c72c40fbdb6edd242a254f30864</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a82abc341af7a4a4f77d2e1e60b3835d5</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a98e66a61e521a67d0a11057bc46da0f2</anchor>
      <arglist>(const Size &amp;begin, const Size &amp;end) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a66c3b7ae7c67cad7896b68202ebff081</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ababb10360346c92e016188824b54d61d</anchor>
      <arglist>(U T::*member) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a3d573361f3fbe0c9758a8fa86ae4fac3</anchor>
      <arglist>(U &amp;(T::*memberFunction)()) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a07b6dfa08143f506a127b6210cbd55bc</anchor>
      <arglist>(const U &amp;(T::*memberFunction)() const) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a4478e7a8db1d265a3b85a654b745bf68</anchor>
      <arglist>(const U &amp;(T::*memberFunction)() &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ae4002d878f405ca0b8ea6a789d9b06f7</anchor>
      <arglist>(const U &amp;(T::*memberFunction)() const &amp;) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a16335fe1e9800748aada8f3da09674f7</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>affc6e28f93c03d53c4b5c9f591918058</anchor>
      <arglist>(const Size &amp;count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a63bfb7bae0935921c537370b83ab4f0a</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a03c356b4cc5749565168568c22c4a3f9</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ac0fc60587bb6f6774dcb03d873cacccb</anchor>
      <arglist>(const Size &amp;count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ac7666bb10aae562a9eb75d49d822a58b</anchor>
      <arglist>(const Size &amp;begin) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>aac3d5c3899e08f647f8df22d0a3410cd</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a49510614143fda760b023ac256d0997f</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>aa79b0ed61adb6d897715a494a0c3c190</anchor>
      <arglist>(const Size &amp;count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, T &gt;</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>adc8a054874882bd2bb46ffa91774923d</anchor>
      <arglist>(const Size &amp;count) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>every</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>aec4bf169e413c9f8f0686a2a46292dfa</anchor>
      <arglist>(std::ptrdiff_t skip) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>every</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a74437f3e7373c65b4f61eb4f36ebb149</anchor>
      <arglist>(const Stride &amp;skip) const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>transposed</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a5feb202064d3836491a5e903c27b4163</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>flipped</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a8d85b2b71d3310253795de3dc874adaf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, T &gt;</type>
      <name>broadcasted</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ad05cfd4ea7c841ca59948a03ac342795</anchor>
      <arglist>(std::size_t size) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a6c404d07d7621b49edc810ad76a7c6f0</anchor>
      <arglist>(ArrayView&lt; typename StridedArrayView1D&lt; T &gt;::ErasedType &gt; data, T *member, std::size_t size, std::ptrdiff_t stride)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>adc752d45dc49d4d9d2903cb23e127fac</anchor>
      <arglist>(ArrayView&lt; T &gt; data, std::size_t size, std::ptrdiff_t stride)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ae1d5fefb507d00ef2f0df7c76b2c6c80</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a28f0f3e4514d0a6d4d463f7bd2884f16</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView1D&lt; const T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af01162b5a464cae22ae51d39a6baf5cd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a8a18ea77b75e5838af7828f4b681de1d</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a5687e5c332876211a23a2202ea89231b</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView&lt; dimensions, T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>ab15f7dff3df81f6529c2b9e401f813dc</anchor>
      <arglist>(StridedArrayView&lt; dimensions, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>stridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af0b91e302ea8ee6b0c76fe99fe6af1f8</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a529bc0bc79d6272d1e53c85c5ecd7005</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a70b1b0045d3523446c65ef79416c6d99</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, const void &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>af6b32c425934efbd48dbb3d18839b9ad</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, void &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>abb1caf4042587dc306fc92204c441feb</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a8834b18f663b21057e77c4f33b725d9c</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, const void &gt; &amp;view, std::size_t lastDimensionSize)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView.html</anchorfile>
      <anchor>a6d49244b843135197647e98f13a171c2</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, void &gt; &amp;view, std::size_t lastDimensionSize)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1StridedArrayView.html" title="Multi-dimensional views">Containers-StridedArrayView-multidimensional</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StridedArrayView.html" title="Zero and negative stride">Containers-StridedArrayView-zero-stride</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StridedArrayView.html" title="STL compatibility">Containers-StridedArrayView-stl</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1StridedArrayView.html">Containers-StridedArrayView-single-header</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StridedArrayView&lt; dimensions, const void &gt;</name>
    <filename>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a50d5c90d4404596234bdadef309d7253a470b1fa18d9fd0bea1b344b0e9671065</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedDimensions&lt; dimensions, std::size_t &gt;</type>
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a72e724c94d00b2d64943e014ea018d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedDimensions&lt; dimensions, std::ptrdiff_t &gt;</type>
      <name>Stride</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>afcadd6c7caab4e05fe4efa7ac04b03d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a50d5c90d4404596234bdadef309d7253a470b1fa18d9fd0bea1b344b0e9671065</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a0611ae69de55f119dd20167a76f6076a</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a4ac2ec6f39e19b0879f5269b39ef4d12</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a326a22299c68995d519fb13ba65b3833</anchor>
      <arglist>(ArrayView&lt; const void &gt; data, const void *member, const Size &amp;size, const Stride &amp;stride) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a36dd50a9358c3346e54040ce08ec7ac2</anchor>
      <arglist>(ArrayView&lt; const void &gt; data, const Size &amp;size, const Stride &amp;stride) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a1375af0f37bfe2b6061c1e4370a39acd</anchor>
      <arglist>(T *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a211c7ae88b2d859494fb83601e024491</anchor>
      <arglist>(T(&amp;data)[size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>ac97b4bb5b6377c1f2225c8873b9a9a31</anchor>
      <arglist>(StridedArrayView&lt; dimensions, T &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a6564ccaaf6c3d56def8915cc55bb278b</anchor>
      <arglist>(ArrayView&lt; T &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a3fd792b91c38e600ca823d30695c0206</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a63d6951825827bbe59411174366c7274</anchor>
      <arglist>(const T &amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a609f8e3f1bc0734996d665febe914403</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const void *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a83e11c2f6352efcf31517ed968956490</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::conditional&lt; dimensions==1, std::size_t, const Size &amp; &gt;::type</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>ab197480c8344d7dca880bd9f82362880</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::conditional&lt; dimensions==1, std::ptrdiff_t, const Stride &amp; &gt;::type</type>
      <name>stride</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a7abed28ce66ee081d298bd1860e9a32f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedDimensions&lt; dimensions, bool &gt;</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a401fc857ca3052137cd88eb67ad61a42</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedDimensions&lt; dimensions, bool &gt;</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>ae4921a5646d1379207fa6ed828892238</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable">
      <type>const typedef void</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>ad03654930337b6dba7ec6f4544d1cfa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const typedef void</type>
      <name>ErasedType</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01const_01void_01_4.html</anchorfile>
      <anchor>a63b521b59e1682eb817dfb643d910d3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StridedArrayView&lt; dimensions, void &gt;</name>
    <filename>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</filename>
    <templarg>dimensions</templarg>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a71f56d0d9ae5d752e0a3f51da39c4bb4a731431b6fcf61d60ffe025db77b91173</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a47fc865c7829f9827e475e36eeedbe56</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>ErasedType</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a18ba7724f196910b729af26c8522a66d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedDimensions&lt; dimensions, std::size_t &gt;</type>
      <name>Size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a127e40386a8975ebceee5ac832d0a3ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedDimensions&lt; dimensions, std::ptrdiff_t &gt;</type>
      <name>Stride</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>af201ebc920347aea390cf95ecf942e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Dimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a71f56d0d9ae5d752e0a3f51da39c4bb4a731431b6fcf61d60ffe025db77b91173</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a9fabfd0d8264f64b0d62bbd28a7e0a85</anchor>
      <arglist>(std::nullptr_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>aded337fe981c4e6f4ef353e7cd166c7c</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a5d07606676e7feaeebcdecfdae74fcd3</anchor>
      <arglist>(ArrayView&lt; void &gt; data, void *member, const Size &amp;size, const Stride &amp;stride) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>ade3f78efa9e551d81872d6fa59b89b6d</anchor>
      <arglist>(ArrayView&lt; void &gt; data, const Size &amp;size, const Stride &amp;stride) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>af4b035b94994a8d82c589b20542820e9</anchor>
      <arglist>(T *data, std::size_t size) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a4daa3219be15393f8098d3764643c31f</anchor>
      <arglist>(T(&amp;data)[size]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a0d66365c24afcc0c659411fa3bb644eb</anchor>
      <arglist>(StridedArrayView&lt; dimensions, T &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>ac13b37f2e1fcd610b944acf2ec27ceb1</anchor>
      <arglist>(ArrayView&lt; T &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>adf24ddc4e5d87bc68336534dbab57ac4</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedArrayView</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>ac84a432b069c6589efe1355b358e3519</anchor>
      <arglist>(T &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>ab821ea57547ef566023195b5ad630a0d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr void *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>af6bbe33a8856977e0454a0d002d59c89</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::conditional&lt; dimensions==1, std::size_t, const Size &amp; &gt;::type</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>ad7c331b7d179a4afedcdc821a851bff9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::conditional&lt; dimensions==1, std::ptrdiff_t, const Stride &amp; &gt;::type</type>
      <name>stride</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a53bcf0a5b497245c33b5daa8cb5a4122</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedDimensions&lt; dimensions, bool &gt;</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>aa0ad15f69366e9ef69caffdfb1ea533d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedDimensions&lt; dimensions, bool &gt;</type>
      <name>empty</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedArrayView_3_01dimensions_00_01void_01_4.html</anchorfile>
      <anchor>a8c03c9fbadfc1c935085fb38819ab167</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StridedDimensions</name>
    <filename>classCorrade_1_1Containers_1_1StridedDimensions.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a96cb09a101b6639009bfe79cdd9204b4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a7891e78e027670de1eb9cd01e0f4fcad</anchor>
      <arglist>(Corrade::ValueInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a40a9cf6b7740d80051a4f88b94dcaae1</anchor>
      <arglist>(Corrade::NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a50802cad6c511e2cf76e00b0189afab8</anchor>
      <arglist>(T first, Args... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a484f60e4b07ae0e51e8c5856c6118322</anchor>
      <arglist>(StaticArrayView&lt; dimensions, const T &gt; values) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a19e3e994e96fe16d0853dcf7453495c6</anchor>
      <arglist>(const T(&amp;values)[dimensions]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator StaticArrayView&lt; dimensions, const T &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a25ca4a3bc4108137283474e5a1b2b67c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator T</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a2451492c97bd37ae9a76ef14a986eb14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a7e5c4ebf3c1b92f7e30db2c2a596579b</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a09d527e5798d5e827ac8b7ca3b5def82</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a4187e63cd7612bb4dfe370ae7cafda68</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a8345d58bb4e8920650421d8de4e7935a</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a77e180080ac98fb6c4d0aeac6b761740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a4a517253fa3136144eb9de7ab49e4278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a59f36423a9202d3f5936ab3fc68fa6be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>affd1f29d9b32d43101e22dad972d2250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>acdaf28ed3bcbc4b04b4277e457f3464a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a8d5d726c6aa1574a3798787879944a72</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::StridedIterator</name>
    <filename>classCorrade_1_1Containers_1_1StridedIterator.html</filename>
    <templarg>dimensions</templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a3dc843c3144a91ad8dbcf8cf2abc2e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::conditional&lt; dimensions==1, T &amp;, StridedArrayView&lt; dimensions - 1, T &gt; &gt;::type</type>
      <name>ElementType</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a0c2c01bb27b80f274e35272ae684ffb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a23bb71e857fe4724d0a75bb856f75820</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>ad9352908b288147395f860e34af2cc60</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a72d8dd82242fa305375661a176125507</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>aac96457d1a5a829e778e157593fd1764</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a66f6d51fe4f90bb9daeb1536292dcbb6</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a4f693826f8918aff0b29bea78126efe5</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a478ed40890d7cdfbb4b52adf5d6caf17</anchor>
      <arglist>(std::ptrdiff_t i) const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a0d2784b5ce00ff5fb070f989810203ff</anchor>
      <arglist>(std::ptrdiff_t i)</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>operator-</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a5d8f0faa9fb192c84128ddd33eebefe4</anchor>
      <arglist>(std::ptrdiff_t i) const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>ad64b4e80e4311ae98a812e2fc9960c91</anchor>
      <arglist>(std::ptrdiff_t i)</arglist>
    </member>
    <member kind="function">
      <type>std::ptrdiff_t</type>
      <name>operator-</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a9bbee3977f8d04e5bfaf8d2b633d398f</anchor>
      <arglist>(const StridedIterator&lt; dimensions, T &gt; &amp;it) const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt; &amp;</type>
      <name>operator--</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a2762205d1577ffd3b1374df821256b69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a3fd5f4ceec7a36fdc247a76383a9ee6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ElementType</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a11f27becaebf04018285208789e8d7d7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>StridedIterator&lt; dimensions, T &gt;</type>
      <name>operator+</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedIterator.html</anchorfile>
      <anchor>a0b1f639c3f71b9beda5e4f1c3d6511dd</anchor>
      <arglist>(std::ptrdiff_t i, StridedIterator&lt; dimensions, T &gt; it)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::String</name>
    <filename>classCorrade_1_1Containers_1_1String.html</filename>
    <member kind="typedef">
      <type>void(*</type>
      <name>Deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a3ca2286aad41206cb6de0a0616b6a475</anchor>
      <arglist>)(char *, std::size_t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a4410a7fd3cb82a0bd4fbef6e9a181c13</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa542362d3acd6529df2437540ef08d1d</anchor>
      <arglist>(StringView view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>afa61eb4b62cbb92ea35637ad372953ec</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a2d9297c7b412829c6e3af197b6eb63f3</anchor>
      <arglist>(MutableStringView view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a59cebaf93a3347cfff74f27d03d71bcc</anchor>
      <arglist>(Containers::ArrayView&lt; char &gt; view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a12830609bdfe08828d9ddc50778e8b3b</anchor>
      <arglist>(const char *data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a07e45f3e2b574e486df77e905af9f197</anchor>
      <arglist>(const char *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ac4208b239953d447aa0e44f0fcffcfce</anchor>
      <arglist>(AllocatedInitT, StringView view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ae43e3fcb5929ddb037d5511c7c8bf1c6</anchor>
      <arglist>(AllocatedInitT, Containers::ArrayView&lt; const char &gt; view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a705f983ff1937b3ff5f9f41bdde47dab</anchor>
      <arglist>(AllocatedInitT, MutableStringView view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a18ce405a94ace77d7f3b9d900a011756</anchor>
      <arglist>(AllocatedInitT, Containers::ArrayView&lt; char &gt; view)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9755350b5ce33b8973d4873a1434cf1b</anchor>
      <arglist>(AllocatedInitT, String &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a214f501d56f4308526ce6b72532e10bb</anchor>
      <arglist>(AllocatedInitT, const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ad48d93256e592e37b738e816d0be22db</anchor>
      <arglist>(AllocatedInitT, const char *data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a131f5d45604d78f34d94483c29ec09e0</anchor>
      <arglist>(AllocatedInitT, const char *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5d4814ca1697390fc78b16f55901b637</anchor>
      <arglist>(char *data, std::size_t size, Deleter deleter) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a943915e9a97c6c29453cd27fa39be783</anchor>
      <arglist>(char *data, Deleter deleter) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5eb78fd3ea34999f02caecdf305bda79</anchor>
      <arglist>(const char *data, std::size_t size, Deleter deleter) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ab798d6904b55d0bfdc8a9dd7d242faea</anchor>
      <arglist>(const char *data, Deleter deleter) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af964d143dd4db41a56513ec6165a9143</anchor>
      <arglist>(std::nullptr_t, std::size_t size, Deleter deleter)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a490cf4901074c4bd7db1c8288578d597</anchor>
      <arglist>(std::nullptr_t, Deleter deleter)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a905e0bac1f42b67ef49856b7a27e2415</anchor>
      <arglist>(Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ae0ea62c5352fd68201822f673a953920</anchor>
      <arglist>(Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a16cf39adcc5b5695b2f30bc588e072c5</anchor>
      <arglist>(Corrade::DirectInitT, std::size_t size, char c)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aaa3444762bfd4a3117ae3cc52404090a</anchor>
      <arglist>(T &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a18ddc68242530be09ddcc241aeff27d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ae52884ec07586de7fed7bf9799909451</anchor>
      <arglist>(const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a548ea73123f96b26fbb4469e1bc80a47</anchor>
      <arglist>(String &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>String &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a1ba9ae52349a4f02af24f01d1a809bbf</anchor>
      <arglist>(const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>String &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a233e29143658fe1b416015eb67f98f9b</anchor>
      <arglist>(String &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const char &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a116b2d4500b1408bc1e99c04df1eea3e</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const void &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a02339a6da8b26308a22d2afb65912536</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; char &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a51e79a8bae26292688e395f764f68685</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; void &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a8ffba9ad3c7a9848340c021cfa786f76</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Array&lt; char &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a304c703b711226d0120a06cc2d718df2</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a065be3a029625e57b67a3aa1246bbdb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>afc566e78d970ccae23c3971a37b661bc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSmall</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9b7d4627f7551263d35757c10044059e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>acde2f887f05a6b7b5ff893c0d1a48225</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a26b834b3ce86844fbc349fb142a7f651</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Deleter</type>
      <name>deleter</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>adc601edd4318cee0909d4676a5a50bba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a6fd7cd823555f815456201a389860d2d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a2fca1669fb770771c582f8c85223add9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ab6243d574d3fe818681339d15a84dc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a6f252e16b6af606cebc55384c9583ebf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a8c7a798b7cce032b2578be8de8d6a546</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a6227e2b6c2cbef0d38af4faa41be4065</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af002e07d274b12f663c2f010d2a4fef2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ae0693d73c626b401efe28a76b39b0212</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>abd371fabdfb32acb464a9a95193a8b72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>front</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ac9ba3c3f3b2336b599e977bb5b27e393</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ad81233bfd5174a134ebd2ae2ad04e860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>back</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ad770f9785cda182d6c0ee27883daae58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a66f4874532c1852a270aa476bee09974</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a87200744fe1c838a67db9247b530fbfd</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ada68d66309abbc05da9d8c77d65efa62</anchor>
      <arglist>(char *begin, char *end)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a96442abaa6aa99de54787794db3b8343</anchor>
      <arglist>(const char *begin, const char *end) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>add0762aa4538315643ba06a7e7e4113c</anchor>
      <arglist>(std::size_t begin, std::size_t end)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>slice</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa0e3cf2ed48ec565f6bfd11068662096</anchor>
      <arglist>(std::size_t begin, std::size_t end) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a7d9a3a78ffc29739cfbaf7619adfd52e</anchor>
      <arglist>(char *end)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a2cada5ac297500a10d18d3511ba41c93</anchor>
      <arglist>(const char *end) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9fecd907416d45f3737e04d217f7393e</anchor>
      <arglist>(char *begin)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a4bcb2cc6cf75565d90bf1d5bf0a5f0e8</anchor>
      <arglist>(const char *begin) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a0f63d36c83d263dfb8f91fd08e5537bf</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a467e6cdac24e5223ed11e3f9685bb233</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>adda2fc6deefb9ff93ea13fb486e58922</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ad600bfa1fb930ea197b60ada27604cdc</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5f9dc68c81776819fc557c27842e0b91</anchor>
      <arglist>(std::size_t begin)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>suffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a0691a503f06a2a3bd2f78e28d9e4a7ad</anchor>
      <arglist>(std::size_t begin) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a807fa841c4b5451f02aa89a3f88b0c36</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af75b3a290c46b30d3d213819d3588037</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a7b437210d68e1056058e2bc15a768c6e</anchor>
      <arglist>(std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>except</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa6d11d0792eeae411e29b43c49ec1a0e</anchor>
      <arglist>(std::size_t count) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; MutableStringView &gt;</type>
      <name>split</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a6b87209bc1a1f42976b891b97b760b56</anchor>
      <arglist>(char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; StringView &gt;</type>
      <name>split</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af86059e9d763a6e43c0cb7bd449cff3a</anchor>
      <arglist>(char delimiter) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; MutableStringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a0856df35b2189e7435b071938b5171a3</anchor>
      <arglist>(char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a252eb79e8802879e0eb4303a00e2c7d5</anchor>
      <arglist>(char delimiter) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; MutableStringView &gt;</type>
      <name>splitOnAnyWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a175d18da25180013f34f3984d11b84cd</anchor>
      <arglist>(StringView delimiters)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; StringView &gt;</type>
      <name>splitOnAnyWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ab06341988f1d04e1ccd71ac34c80082a</anchor>
      <arglist>(StringView delimiters) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; MutableStringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a1b5b4f8006ad24fcc31a104fe2a20aa7</anchor>
      <arglist>(StringView delimiters)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af21f0a24e60bb0e93a577170983093a9</anchor>
      <arglist>(StringView delimiters) const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; MutableStringView &gt;</type>
      <name>splitOnWhitespaceWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aca03bb238d23c8dc78cd6ef6bb30341a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; StringView &gt;</type>
      <name>splitOnWhitespaceWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af674606c8080e1d6864487a811cff0ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; MutableStringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a0ea5b15730cce711f48f407406a7b578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>adeeb4b8274fc6ed7ebe63b533e28a7fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array3&lt; MutableStringView &gt;</type>
      <name>partition</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a1ccc6cd10bb658fc1f86b4f30b218cfc</anchor>
      <arglist>(char separator)</arglist>
    </member>
    <member kind="function">
      <type>Array3&lt; StringView &gt;</type>
      <name>partition</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9378c62c9950dce0970b20f07da0e6d4</anchor>
      <arglist>(char separator) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>join</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ac536228d3d82e1206d082a78be838c5f</anchor>
      <arglist>(ArrayView&lt; const StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>join</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9bea1bb68d791942c75181a8db5ff72b</anchor>
      <arglist>(std::initializer_list&lt; StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af6aece630ce7c30294d3acd22ca6e885</anchor>
      <arglist>(ArrayView&lt; const StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a38dc39d082fd843ac69f270815d06097</anchor>
      <arglist>(std::initializer_list&lt; StringView &gt; strings) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ac2dbcc191126cf0406a01b3574cf1698</anchor>
      <arglist>(StringView prefix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5b4c191e80d4bcdba01cb99bf8a53c66</anchor>
      <arglist>(char prefix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ae19dc02f49ee3be03edecd1f37b6530f</anchor>
      <arglist>(StringView suffix) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5cc97a15fa1fbeadd8f3b5dfa5377d70</anchor>
      <arglist>(char suffix) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a247b64188bdbf50b62582b4374097870</anchor>
      <arglist>(StringView prefix)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a2b506a4504c7e3da522a5ed55652e5be</anchor>
      <arglist>(StringView prefix) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ac25e84c936077498e41242cab1df9023</anchor>
      <arglist>(char prefix)=delete</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>exceptPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a0cda10b958ebeaaff8063ce9c3c30594</anchor>
      <arglist>(char prefix) const =delete</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>stripPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aac6f45090a7162a6f0c208045b6ce8de</anchor>
      <arglist>(StringView prefix)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>stripPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a80bd1652e6cd7edd4641db4b281bf1f8</anchor>
      <arglist>(StringView prefix) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa5e32a3a2f6afafa356bfba487f0aa09</anchor>
      <arglist>(StringView suffix)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aeedff8771d8f4ecd7298902fd3c1752e</anchor>
      <arglist>(StringView suffix) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5ed4351d43bd566461d2d66ac086aa25</anchor>
      <arglist>(char suffix)=delete</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>exceptSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a7fb74ad421148a178721d944831d6db3</anchor>
      <arglist>(char suffix) const =delete</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>stripSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5f0a16ad5dfb3748b8502cfe771bee8d</anchor>
      <arglist>(StringView suffix)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>stripSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ab8073712f251a1756e03d7565ab6fea1</anchor>
      <arglist>(StringView suffix) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>trimmed</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a49f0e625675d2b13f99241b05e2bf4a8</anchor>
      <arglist>(StringView characters)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>trimmed</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa69580c05798009ea2ba8a24cfc8d5f2</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>trimmed</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>afb91c9821a04ee497404a282b430849a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>trimmed</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ab7ea23d6b0431ba519b5f46c9bf59c5b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>trimmedPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a797b6b4d1e6771de7f19b705a221fe6e</anchor>
      <arglist>(StringView characters)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>trimmedPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9e584db9d2cb7a6bb2662eba18a95361</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>trimmedPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a8c2b19eda0e965188306ad770047e1e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>trimmedPrefix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a86561600c151c6d9fe2f51c90ea0026c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>trimmedSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a1dd96bc8c8c8e1f20397b28a291a485d</anchor>
      <arglist>(StringView characters)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>trimmedSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa4bf6cd1a24436ef7197b6a9c041d3c2</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>trimmedSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a6d1636336e45cb601c665f3b51c8c6a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>trimmedSuffix</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>afc97d70c10248b42a7ecf7293f8aff34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a54440226bbbeaad4b5460396c113693e</anchor>
      <arglist>(StringView substring)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a1d4199dbf279b1c2b984b527f8b5ce93</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a7c7ea352ec0fe54363fe4ab437d603dc</anchor>
      <arglist>(char character)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a9bb3991732dc06dccc4bb78c7f540d23</anchor>
      <arglist>(char character) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a46e9c4d8bfc70365536b9b4ec0cd5a3c</anchor>
      <arglist>(StringView substring, char *fail)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a600bd307066bc3d7fbac45dc471ea8d3</anchor>
      <arglist>(StringView substring, const char *fail) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a922cb3f75592622c5576cdbfadba0552</anchor>
      <arglist>(char character, char *fail)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a65f1f8157aca88cb79d4d91602fd1db7</anchor>
      <arglist>(char character, const char *fail) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findLast</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>af640db112ea687551409f4e439604ba2</anchor>
      <arglist>(StringView substring)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findLast</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5fb5f3b750ce792dfa851da2d7aebe7d</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findLast</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aa40b2da29e15d79acdce22f79716e016</anchor>
      <arglist>(char character)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findLast</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a85be7dc6c0c9154838a157c16dfd552a</anchor>
      <arglist>(char character) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findLastOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a4e0473b8cb67c5594389f159795f5525</anchor>
      <arglist>(StringView substring, char *fail)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findLastOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ae25cc867e0316fb3773cb62d5b456a6a</anchor>
      <arglist>(StringView substring, const char *fail) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findLastOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ab5ad8bfc7020a3686717adf871c4ee96</anchor>
      <arglist>(char character, char *fail)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findLastOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aca86b966e03e08a072d16066252f60b8</anchor>
      <arglist>(char character, const char *fail) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a8488bd7ffd548c558ddcea5f2e7fdaf4</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a67fee36361f50885496fcd8afeda61f5</anchor>
      <arglist>(char character) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a7f4c9febdc5f5ae5592c4a0117f47f01</anchor>
      <arglist>(StringView characters)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>acae1ad5d9dbbf35c2198228cc605b827</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findAnyOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a375e3a4706d44953d40f2ddd1e1951e0</anchor>
      <arglist>(StringView characters, char *fail)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findAnyOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a4323745a870a2c30ef1a8e6dca59ed55</anchor>
      <arglist>(StringView characters, const char *fail) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findLastAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a5ce4f35f3ada8a51ef653ddf37515083</anchor>
      <arglist>(StringView characters)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findLastAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a543040daf550e58f543a6913fc098477</anchor>
      <arglist>(StringView characters) const</arglist>
    </member>
    <member kind="function">
      <type>MutableStringView</type>
      <name>findLastAnyOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a4ab52626bf0b37f987de1cb053190065</anchor>
      <arglist>(StringView characters, char *fail)</arglist>
    </member>
    <member kind="function">
      <type>StringView</type>
      <name>findLastAnyOr</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a2c71feea920666db910c31f720e34624</anchor>
      <arglist>(StringView characters, const char *fail) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAny</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>ac17a7c64f2f41581563bb8a5fbafff9a</anchor>
      <arglist>(StringView substring) const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>abc3a6f63b6d502978f26ec5d53b8fd1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nullTerminatedView</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a475002c01101de5b6603d953cd5b7679</anchor>
      <arglist>(StringView view)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nullTerminatedView</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a8d4c5b1315eb4fce9553d0ee3fe927a3</anchor>
      <arglist>(AllocatedInitT, StringView view)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nullTerminatedGlobalView</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>aae077031f0f6f72d53c206aeaba598e6</anchor>
      <arglist>(StringView view)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>nullTerminatedGlobalView</name>
      <anchorfile>classCorrade_1_1Containers_1_1String.html</anchorfile>
      <anchor>a65219317d546e9b924cae03b6b528fbd</anchor>
      <arglist>(AllocatedInitT, StringView view)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1String.html" title="Usage">Containers-String-usage</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1String.html" title="Small string optimization">Containers-String-usage-sso</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1String.html" title="String initialization">Containers-String-usage-initialization</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1String.html" title="Wrapping externally allocated strings">Containers-String-usage-wrapping</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1String.html" title="Converting String instances to null-terminated C strings">Containers-String-usage-c-string-conversion</docanchor>
    <docanchor file="classCorrade_1_1Containers_1_1String.html" title="STL compatibility">Containers-String-stl</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Containers::Triple</name>
    <filename>classCorrade_1_1Containers_1_1Triple.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>F</type>
      <name>FirstType</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a63c3843aa8e88be046e5dcf9cd75d5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>S</type>
      <name>SecondType</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>aaca98373e636201324ce776c326581ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>ThirdType</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>aec8c2b37af66edd9b0a86d558b8e9f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a9c77b7e595e7e5e5e7cb9dd6c4a4e3dd</anchor>
      <arglist>(Corrade::DefaultInitT) noexcept(std::is_nothrow_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ad24589108e8c510bc48cdb7a4171ca81</anchor>
      <arglist>(Corrade::ValueInitT) noexcept(std::is_nothrow_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a71966b36febe37b2278ebf8087598329</anchor>
      <arglist>(Corrade::NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a3a8f0af6fe011ecd6fd6e265e05c8e9d</anchor>
      <arglist>() noexcept(std::is_nothrow_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>afdec8788a234bd93aba4701e98a440a9</anchor>
      <arglist>(const F &amp;first, const S &amp;second, const T &amp;third) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a04b422d46f30f4da3cd428708ce077fb</anchor>
      <arglist>(const F &amp;first, const S &amp;second, T &amp;&amp;third) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ac28fbd1fa0d28a022297dc6132f00454</anchor>
      <arglist>(const F &amp;first, S &amp;&amp;second, const T &amp;third) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ab060097009c9f3a1917f2cb6a9049889</anchor>
      <arglist>(F &amp;&amp;first, const S &amp;second, const T &amp;third) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a3e35c41b95c44dd2e06adda7f7da2291</anchor>
      <arglist>(const F &amp;first, S &amp;&amp;second, T &amp;&amp;third) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ae233d46aa4fba44f797a6d9986c8a6c7</anchor>
      <arglist>(F &amp;&amp;first, const S &amp;second, T &amp;&amp;third) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>aae719f0ae7f39339fe2b0f3139ca97af</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second, const T &amp;third) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ab304af7ab00b183c5b91a9a8855c59c2</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second, T &amp;&amp;third) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>aafcb2129310e9448e5e2bf62eb807a53</anchor>
      <arglist>(const U &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_copy_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ae094775e935fa5ac32561ffed74d8b4b</anchor>
      <arglist>(U &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; F &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; S &gt;::value &amp;&amp;std::is_nothrow_move_constructible&lt; T &gt;::value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a5b2df0dadef6bc44f9b6c0790af438a8</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a15ea7dc2e3e581bf852a85a5c7b2560c</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a4f9fdc943af2deaa75023f71f51d16e7</anchor>
      <arglist>(const Triple&lt; F, S, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a77accbfdcec7bb4f895ba761bed277b4</anchor>
      <arglist>(const Triple&lt; F, S, T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>F &amp;</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>afce1338046a50447700519d16b294120</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>F</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a7ea165343b2060ff7f5a574482a0840d</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr const F &amp;</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a1a34d76f4c44e6f02fd4aba3dc8f24a5</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>S &amp;</type>
      <name>second</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a199f708f3e449b05812a841f832556ee</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>S</type>
      <name>second</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>abc4fba698c0fc382e1897a51540ded54</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr const S &amp;</type>
      <name>second</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ac2bbcaee42d34cbcdc346988b71dad7e</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>third</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a4f2833bdc2b40db7e220110e6b891d5f</anchor>
      <arglist>() &amp;</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>third</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ad4e37c78479dad261522006a76e46288</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr const T &amp;</type>
      <name>third</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>ab653597771cc3b634c621a4e7c21ae82</anchor>
      <arglist>() const &amp;</arglist>
    </member>
    <member kind="function">
      <type>constexpr Triple&lt; typename std::decay&lt; F &gt;::type, typename std::decay&lt; S &gt;::type, typename std::decay&lt; T &gt;::type &gt;</type>
      <name>triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a6acd55864ee53360e153820f2348496d</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second, T &amp;&amp;third)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>triple</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a1748277cb24f2a03b286c1d741349696</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedTripleConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Triple.html</anchorfile>
      <anchor>a90016dc78666bdd158c311e8bf41159e</anchor>
      <arglist>(Utility::Debug &amp;debug, const Triple&lt; F, S, T &gt; &amp;value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Containers_1_1Triple.html" title="STL compatibility">Containers-Triple-stl</docanchor>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Avx2T</name>
    <filename>structCorrade_1_1Cpu_1_1Avx2T.html</filename>
    <base>Corrade::Cpu::AvxT</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Avx512fT</name>
    <filename>structCorrade_1_1Cpu_1_1Avx512fT.html</filename>
    <base>Corrade::Cpu::Avx2T</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::AvxF16cT</name>
    <filename>structCorrade_1_1Cpu_1_1AvxF16cT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::AvxFmaT</name>
    <filename>structCorrade_1_1Cpu_1_1AvxFmaT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::AvxT</name>
    <filename>structCorrade_1_1Cpu_1_1AvxT.html</filename>
    <base>Corrade::Cpu::Sse42T</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Bmi1T</name>
    <filename>structCorrade_1_1Cpu_1_1Bmi1T.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::Cpu::Features</name>
    <filename>classCorrade_1_1Cpu_1_1Features.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>Features</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a64ba0f2772011868ca75e97041bd2a5d</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Features</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ad591d218cc4d159911c0aaa112de95f2</anchor>
      <arglist>(T) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>af68c9555e1edd94a7500524ea93d377b</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a1c757e79f320fc487e239adbe3539519</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ab53ed4df6bd0e0614d389b9b09cca1f7</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>adc1c23b42be9cb45ab19ba120be0adba</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator|</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>aba526dd61dabba4ae3315024d9fb9704</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>Features &amp;</type>
      <name>operator|=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>adc7c088058282edf4ef331259e439004</anchor>
      <arglist>(Features other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator&amp;</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>aedd1b943cc1ac1ae09effbc733e7e466</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>Features &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a809889e34a4142c63f419f98e28ddb0a</anchor>
      <arglist>(Features other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator^</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a4900fe8c8c25845f9a33fd17572494ae</anchor>
      <arglist>(Features other) const</arglist>
    </member>
    <member kind="function">
      <type>Features &amp;</type>
      <name>operator^=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ae060c1231530c5be1a9005f135de6e07</anchor>
      <arglist>(Features other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator~</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ae8da87dade98cd19f3afa8d823dff55d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ac0193355fa056ec591e63bf7d03ab04d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator unsigned int</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>aec21c4be3002d13748ba8756bc5fc984</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>constexpr friend Features</type>
      <name>features</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a7c99d223b32ef89dc066c376b6d4eaa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>constexpr friend Features</type>
      <name>compiledFeatures</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ae18e4f9a309f71da695709ff16af67ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>ae98b1caf2f9508d1da6ce652f753f339</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>aa872b4f5a4ac1bc7fd14f0f16eee7ddb</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a7cff98630de803977797cb065174681c</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a42dbba12131b3280629a034da3475b78</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator|</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a61d197c4c818a547903e8f52c4f11492</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator&amp;</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a753579a3d6e0571f66587d4794cd7f80</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator^</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a3fbfb724c3eb9ed898f84486dbcfa8ca</anchor>
      <arglist>(T a, Features b)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>operator~</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>af86c5d33c0b48144815a3de430fc90d3</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>acb7d0c5904fc3866debce3c055548b59</anchor>
      <arglist>(Utility::Debug &amp;debug, Features value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Cpu_1_1Features.html</anchorfile>
      <anchor>a4dcec515598e17618e0f3ede79725c80</anchor>
      <arglist>(Utility::Debug &amp;debug, T value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::LzcntT</name>
    <filename>structCorrade_1_1Cpu_1_1LzcntT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::NeonFmaT</name>
    <filename>structCorrade_1_1Cpu_1_1NeonFmaT.html</filename>
    <base>Corrade::Cpu::NeonT</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::NeonFp16T</name>
    <filename>structCorrade_1_1Cpu_1_1NeonFp16T.html</filename>
    <base>Corrade::Cpu::NeonFmaT</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::NeonT</name>
    <filename>structCorrade_1_1Cpu_1_1NeonT.html</filename>
    <base>Corrade::Cpu::ScalarT</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::PopcntT</name>
    <filename>structCorrade_1_1Cpu_1_1PopcntT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::ScalarT</name>
    <filename>structCorrade_1_1Cpu_1_1ScalarT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Simd128T</name>
    <filename>structCorrade_1_1Cpu_1_1Simd128T.html</filename>
    <base>Corrade::Cpu::ScalarT</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Sse2T</name>
    <filename>structCorrade_1_1Cpu_1_1Sse2T.html</filename>
    <base>Corrade::Cpu::ScalarT</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Sse3T</name>
    <filename>structCorrade_1_1Cpu_1_1Sse3T.html</filename>
    <base>Corrade::Cpu::Sse2T</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Sse41T</name>
    <filename>structCorrade_1_1Cpu_1_1Sse41T.html</filename>
    <base>Corrade::Cpu::Ssse3T</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Sse42T</name>
    <filename>structCorrade_1_1Cpu_1_1Sse42T.html</filename>
    <base>Corrade::Cpu::Sse41T</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::Ssse3T</name>
    <filename>structCorrade_1_1Cpu_1_1Ssse3T.html</filename>
    <base>Corrade::Cpu::Sse3T</base>
  </compound>
  <compound kind="struct">
    <name>Corrade::Cpu::TypeTraits</name>
    <filename>structCorrade_1_1Cpu_1_1TypeTraits.html</filename>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Index</name>
      <anchorfile>structCorrade_1_1Cpu_1_1TypeTraits.html</anchorfile>
      <anchor>a08acceb22ebb2e7169e7d0d905885198a7216ae8b431dafda22aea932651867af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Index</name>
      <anchorfile>structCorrade_1_1Cpu_1_1TypeTraits.html</anchorfile>
      <anchor>a08acceb22ebb2e7169e7d0d905885198a7216ae8b431dafda22aea932651867af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>name</name>
      <anchorfile>structCorrade_1_1Cpu_1_1TypeTraits.html</anchorfile>
      <anchor>a15c7cd9d5c595b0476363257fa6a51cf</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::DefaultInitT</name>
    <filename>structCorrade_1_1DefaultInitT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::DirectInitT</name>
    <filename>structCorrade_1_1DirectInitT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::InPlaceInitT</name>
    <filename>structCorrade_1_1InPlaceInitT.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::Interconnect::Connection</name>
    <filename>classCorrade_1_1Interconnect_1_1Connection.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Connection.html</anchorfile>
      <anchor>a80c77c8ea15c6e9d1ca5a4061a69f1c0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnect</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Connection.html</anchorfile>
      <anchor>aaf5525583e6564580dcec30122470f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnectionPossible</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Connection.html</anchorfile>
      <anchor>a95318caf850ff96897a9ddc089ed5596</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>connect</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Connection.html</anchorfile>
      <anchor>a2da3a80eb849dfd30148aa643efc6b70</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Interconnect::Emitter</name>
    <filename>classCorrade_1_1Interconnect_1_1Emitter.html</filename>
    <class kind="class">Corrade::Interconnect::Emitter::Signal</class>
    <member kind="function">
      <type></type>
      <name>Emitter</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>acb307bb054059a1b4faff4ced7df8b14</anchor>
      <arglist>(const Emitter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Emitter</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a65e30e6dc9875908864c42fbebe31ecc</anchor>
      <arglist>(Emitter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Emitter &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a5da79d646791d792941ad516b0fd3205</anchor>
      <arglist>(const Emitter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Emitter &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a722e415daa51bdba50cf73a8e00838fb</anchor>
      <arglist>(Emitter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSignalConnections</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a917f10ba95ce7bfe454dd089e24ab135</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSignalConnections</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a8c0decced44c2678189fca7131809b53</anchor>
      <arglist>(Signal(Emitter::*signal)(Args...)) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConnected</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a5b6364da9f46c887f76ef1a23afab0b9</anchor>
      <arglist>(const Connection &amp;connection) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>signalConnectionCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a6dd51ebfee0918df0d2818388597a123</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>signalConnectionCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>ad6d834e5338780aa3dcd1173b9f35a5c</anchor>
      <arglist>(Signal(Emitter::*signal)(Args...)) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectSignal</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a5139e1e243d19690de8412be122ce37a</anchor>
      <arglist>(Signal(Emitter::*signal)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectAllSignals</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>afff8419f54c355125c47f631373b9b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Signal</type>
      <name>emit</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a43d05dc134cd9a7e7d5847b2b190171d</anchor>
      <arglist>(Signal(Emitter::*signal)(Args...), typename Implementation::Identity&lt; Args &gt;::Type... args)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>afe6ec8e2281aa5a2804094419d135005</anchor>
      <arglist>(EmitterObject &amp;emitter, Interconnect::Emitter::Signal(Emitter::*signal)(Args...), Functor &amp;&amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a52f95755ab08bad47be07955f641f2cc</anchor>
      <arglist>(EmitterObject &amp;emitter, Interconnect::Emitter::Signal(Emitter::*signal)(Args...), ReceiverObject &amp;receiver, void(Receiver::*slot)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Emitter.html</anchorfile>
      <anchor>a08518bbf1547ae48fbd32afeba6fc787</anchor>
      <arglist>(Emitter &amp;emitter, const Connection &amp;connection)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Interconnect_1_1Emitter.html" title="Implementing signals">Interconnect-Emitter-signals</docanchor>
    <docanchor file="classCorrade_1_1Interconnect_1_1Emitter.html">Interconnect-Emitter-msvc-icf</docanchor>
    <docanchor file="classCorrade_1_1Interconnect_1_1Emitter.html" title="Connecting signals to slots">Interconnect-Emitter-connections</docanchor>
    <docanchor file="classCorrade_1_1Interconnect_1_1Emitter.html" title="Free function, lambda and function object slots">Interconnect-Emitter-free-slots</docanchor>
    <docanchor file="classCorrade_1_1Interconnect_1_1Emitter.html" title="Member function slots">Interconnect-Emitter-member-slots</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Interconnect::Emitter::Signal</name>
    <filename>classCorrade_1_1Interconnect_1_1Emitter_1_1Signal.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::Interconnect::Receiver</name>
    <filename>classCorrade_1_1Interconnect_1_1Receiver.html</filename>
    <member kind="function">
      <type></type>
      <name>Receiver</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>a57b82b81813abb257b3c31dc7dd461f3</anchor>
      <arglist>(const Receiver &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Receiver</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>adbe214ae7135e06e2dfdcffa5a5702e4</anchor>
      <arglist>(Receiver &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Receiver &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>aa0a89c026f6d28aa81158697cf949fb0</anchor>
      <arglist>(const Receiver &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Receiver &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>a4d8747f9488cf8d87e31f4e4b64c436e</anchor>
      <arglist>(Receiver &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSlotConnections</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>a3eb58493905333fd122e1da38f6ce772</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>slotConnectionCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>a0bc5a5b466fae1e8a2dce456970c952c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disconnectAllSlots</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1Receiver.html</anchorfile>
      <anchor>aa16eeb8b069f5008586b8f68ccc6dd7f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Interconnect::StateMachine</name>
    <filename>classCorrade_1_1Interconnect_1_1StateMachine.html</filename>
    <templarg>states</templarg>
    <templarg>inputs</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>StateCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a36963bc6dd59d3af46da9eea665561fcad07f6229f97a406202285d31f475db70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InputCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a36963bc6dd59d3af46da9eea665561fca269ea6d765c72e02fd88ac70c3067847</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StateCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a36963bc6dd59d3af46da9eea665561fcad07f6229f97a406202285d31f475db70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InputCount</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a36963bc6dd59d3af46da9eea665561fca269ea6d765c72e02fd88ac70c3067847</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StateMachine</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a1632034558adf149fe2cdee82d44af65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>State</type>
      <name>current</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a13eded19d718fac8c7573c7c66a5f5ac</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTransitions</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>ab331b1128a353a33a58420f68392d417</anchor>
      <arglist>(std::initializer_list&lt; StateTransition&lt; State, Input &gt;&gt; transitions)</arglist>
    </member>
    <member kind="function">
      <type>StateMachine&lt; states, inputs, State, Input &gt; &amp;</type>
      <name>step</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a659a4bc7dc0220dafe101cc9314543b8</anchor>
      <arglist>(Input input)</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>stepped</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>aad2ec34f5cfc02298bf7591fdb2cf2e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>entered</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a2d038d607bcaddc5777c08c655244b51</anchor>
      <arglist>(State previous)</arglist>
    </member>
    <member kind="function">
      <type>Signal</type>
      <name>exited</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateMachine.html</anchorfile>
      <anchor>a8439d25865bb82eeb0ff38ae8c27c82e</anchor>
      <arglist>(State next)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Interconnect_1_1StateMachine.html" title="Basic usage">Interconnect-StateMachine-usage</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Interconnect::StateTransition</name>
    <filename>classCorrade_1_1Interconnect_1_1StateTransition.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>StateTransition</name>
      <anchorfile>classCorrade_1_1Interconnect_1_1StateTransition.html</anchorfile>
      <anchor>a2e1b5ba516ad502534fd93dcc716fefe</anchor>
      <arglist>(State from, Input input, State to)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::NoCreateT</name>
    <filename>structCorrade_1_1NoCreateT.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::NoInitT</name>
    <filename>structCorrade_1_1NoInitT.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::PluginManager::AbstractManager</name>
    <filename>classCorrade_1_1PluginManager_1_1AbstractManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractManager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a15c48240332b27b1066308f2e08e2857</anchor>
      <arglist>(const AbstractManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractManager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ac897a1c0583f0f251b69c47ced65a960</anchor>
      <arglist>(AbstractManager &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ad1e9417feb5fd524d9f59daaf3c6e1cf</anchor>
      <arglist>(const AbstractManager &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractManager &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a498d594eb9f1e99325a1ac2c3c372859</anchor>
      <arglist>(AbstractManager &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>pluginInterface</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a7c5b59dc9d74984f9d66ef5027309ed5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>pluginDirectory</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ac9f288b60ecadfbe28cda0a9a1a5e656</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPluginDirectory</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ac403b8c43ba1ae0c591f8eeb75b7d6cf</anchor>
      <arglist>(Containers::StringView directory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reloadPluginDirectory</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>afbcdc551e12ded49ee9f709d1f55ddeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreferredPlugins</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a012936a46a722e727b9c7c47e25d4648</anchor>
      <arglist>(Containers::StringView alias, std::initializer_list&lt; Containers::StringView &gt; plugins)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>pluginList</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a9f71323de6d14e1052d528f44791e836</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>aliasList</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a47ad424d38de4817219d27bd956c98ec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>PluginMetadata *</type>
      <name>metadata</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ac7e6c4e47719a638355e3db8a6cba9b0</anchor>
      <arglist>(Containers::StringView plugin)</arglist>
    </member>
    <member kind="function">
      <type>const PluginMetadata *</type>
      <name>metadata</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ac492428f83823ba8a3f12a15c7590262</anchor>
      <arglist>(Containers::StringView plugin) const</arglist>
    </member>
    <member kind="function">
      <type>LoadState</type>
      <name>loadState</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a3b9af40c054a74e7078f8bb6d0855d18</anchor>
      <arglist>(Containers::StringView plugin) const</arglist>
    </member>
    <member kind="function">
      <type>LoadState</type>
      <name>load</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>afcd512e52b53d9be4ee808debf676c45</anchor>
      <arglist>(Containers::StringView plugin)</arglist>
    </member>
    <member kind="function">
      <type>LoadState</type>
      <name>unload</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>ad452c2bbde62213d8934bf4b943e335a</anchor>
      <arglist>(Containers::StringView plugin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerExternalManager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a908c060cdc5310707ae4c3cc778d59c0</anchor>
      <arglist>(AbstractManager &amp;manager)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>Version</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a4d34e4baaa7d38999531ea49ad85cf26</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~AbstractManager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManager.html</anchorfile>
      <anchor>a8ff98135f8b6356a26732fe0c9c34f10</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::PluginManager::AbstractManagingPlugin</name>
    <filename>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</filename>
    <templarg></templarg>
    <base>Corrade::PluginManager::AbstractPlugin</base>
    <member kind="function">
      <type></type>
      <name>AbstractManagingPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>a7126dbd19b67dacdeb12c61f0543ef67</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractManagingPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>a84b7e8c9f0e10112f0b52058abaa99cb</anchor>
      <arglist>(const AbstractManagingPlugin&lt; Interface &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractManagingPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>af3fa1bcfc531c159325b7e85f42130bb</anchor>
      <arglist>(AbstractManagingPlugin&lt; Interface &gt; &amp;&amp;other) noexcept=default</arglist>
    </member>
    <member kind="function">
      <type>AbstractManagingPlugin&lt; Interface &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>a3cba511fe832336e1046019623a4bb91</anchor>
      <arglist>(const AbstractManagingPlugin&lt; Interface &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractManagingPlugin&lt; Interface &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>a93f2316b53514d421b856a4d8e4b588d</anchor>
      <arglist>(AbstractManagingPlugin&lt; Interface &gt; &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractManagingPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>a4e2b38042c06d11a3ae4b6c5e7ac8a30</anchor>
      <arglist>(Manager&lt; Interface &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractManagingPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>ac4479c8926f6a35fae044237ce818d11</anchor>
      <arglist>(AbstractManager &amp;manager, const Containers::StringView &amp;plugin)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Manager&lt; Interface &gt; *</type>
      <name>manager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>afeabe42c12f4e6cdc074d4b83a81d91a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Manager&lt; Interface &gt; *</type>
      <name>manager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractManagingPlugin.html</anchorfile>
      <anchor>a89f5e7d56c788c2065aa367caab5506d</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::PluginManager::AbstractPlugin</name>
    <filename>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a18b88d542a28a5721a708e489a1a6750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>aba8b2a87850499f7a2e53f8de12ba34d</anchor>
      <arglist>(AbstractManager &amp;manager, const Containers::StringView &amp;plugin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>af5a43e817f57f6a2c47cdb38855bce5c</anchor>
      <arglist>(const AbstractPlugin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>aacbaf0bbdae6f8ca84a9a226e7f5bd70</anchor>
      <arglist>(AbstractPlugin &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~AbstractPlugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>afba30938df4098ab9d42b45667333fcc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>AbstractPlugin &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>aa542b4972a06b2cc0a16f5c259687475</anchor>
      <arglist>(const AbstractPlugin &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>AbstractPlugin &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a79f411129d16aeb85cec7b2a757fbdb6</anchor>
      <arglist>(AbstractPlugin &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canBeDeleted</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a958746df11b74743311a91bedd7ac3be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>plugin</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a15b2a4e5e20275e08d4e5ad34b387e8b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PluginMetadata *</type>
      <name>metadata</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a58bb713f5b0327e4c2de87a6c8304643</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::ConfigurationGroup &amp;</type>
      <name>configuration</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a689a0e941a34e9573d17517c147982b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Utility::ConfigurationGroup &amp;</type>
      <name>configuration</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a8d8bd9388b8c1a352e2f6dd06b21f257</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::StringView</type>
      <name>pluginInterface</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>ae0c8fe37cf62177b87c0c39a668ade7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::Array&lt; Containers::String &gt;</type>
      <name>pluginSearchPaths</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>aaf57d570c38fd4be0b6c318befc6ae67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::StringView</type>
      <name>pluginSuffix</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a86db2d7f30dade9b6427447289af0d20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::StringView</type>
      <name>pluginMetadataSuffix</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a8f7709570acbc16a2d8cb64c0f7e9d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>aa6b08ea7e15aafc73eda59bd343e62ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1AbstractPlugin.html</anchorfile>
      <anchor>a6957a92456bf7d3dde9c3af91f87ffb6</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classCorrade_1_1PluginManager_1_1AbstractPlugin.html" title="Subclassing">PluginManager-AbstractPlugin-subclassing</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::PluginManager::Manager</name>
    <filename>classCorrade_1_1PluginManager_1_1Manager.html</filename>
    <templarg></templarg>
    <base>Corrade::PluginManager::AbstractManager</base>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1Manager.html</anchorfile>
      <anchor>a281bdf58de8f72216e15974018ccd813</anchor>
      <arglist>(Containers::StringView pluginDirectory={})</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; T &gt;</type>
      <name>instantiate</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1Manager.html</anchorfile>
      <anchor>ae2c64261bb9090b84a56c1a0cb6042bf</anchor>
      <arglist>(Containers::StringView plugin)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pointer&lt; T &gt;</type>
      <name>loadAndInstantiate</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1Manager.html</anchorfile>
      <anchor>a415fdb259c933cdc7e520efd172c9964</anchor>
      <arglist>(Containers::StringView plugin)</arglist>
    </member>
    <member kind="function">
      <type>Manager&lt; U &gt; *</type>
      <name>externalManager</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1Manager.html</anchorfile>
      <anchor>ae8a1197dcf9eb5de9af2443f2b5ba3e5</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Plugin directories">PluginManager-Manager-paths</docanchor>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Plugin loading, instantiation and unloading">PluginManager-Manager-reload</docanchor>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Plugin-specific data and configuration">PluginManager-Manager-data</docanchor>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Plugin dependencies">PluginManager-Manager-dependencies</docanchor>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Multiple instances of the same manager">PluginManager-Manager-multiple-instances</docanchor>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Custom plugin interfaces and template definitions">PluginManager-Manager-template-definitions</docanchor>
    <docanchor file="classCorrade_1_1PluginManager_1_1Manager.html" title="Thread safety">PluginManager-Manager-multithreading</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::PluginManager::PluginMetadata</name>
    <filename>classCorrade_1_1PluginManager_1_1PluginMetadata.html</filename>
    <member kind="function">
      <type></type>
      <name>PluginMetadata</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a9b02c82173fae3e0355c7af18c8405fa</anchor>
      <arglist>(const PluginMetadata &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PluginMetadata</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>ae16256b78496d9ac115920f316a3f5e9</anchor>
      <arglist>(PluginMetadata &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginMetadata &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a1587b877adb25856dd2d0ce50a267ab4</anchor>
      <arglist>(const PluginMetadata &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>PluginMetadata &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a150130388de0191333820fb98e509b49</anchor>
      <arglist>(PluginMetadata &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>ab62b48fa719ba8577e1bd81be9ef3284</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>depends</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>ae3ae84b54001310e69ba7db70d0b3966</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>usedBy</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>adaffd628089befbb2407a1a7d5e3c2d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>provides</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a55c7d06d32f3c440ee2c94a6e4146bd1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Utility::ConfigurationGroup &amp;</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a916bc503db59fed1028ec4ce235c21db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::ConfigurationGroup &amp;</type>
      <name>configuration</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a8b50e0f370dda93101475937424b35a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Utility::ConfigurationGroup &amp;</type>
      <name>configuration</name>
      <anchorfile>classCorrade_1_1PluginManager_1_1PluginMetadata.html</anchorfile>
      <anchor>a0711d17a1bc901c2f709514bd805f8dd</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Comparator</name>
    <filename>classCorrade_1_1TestSuite_1_1Comparator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>ComparisonStatusFlags</type>
      <name>operator()</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>a26b5498f872db93256cfd6002bf1a925</anchor>
      <arglist>(const T &amp;actual, const T &amp;expected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMessage</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>adee45e00d15c7ea1207692cc1bd3248c</anchor>
      <arglist>(ComparisonStatusFlags status, Utility::Debug &amp;out, const char *actual, const char *expected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>saveDiagnostic</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Comparator.html</anchorfile>
      <anchor>af8eebdf248d164913f62ae23b61aa0a7</anchor>
      <arglist>(ComparisonStatusFlags status, Utility::Debug &amp;out, Containers::StringView path)</arglist>
    </member>
    <docanchor file="classCorrade_1_1TestSuite_1_1Comparator.html" title="Subclassing">TestSuite-Comparator-subclassing</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Comparator.html" title="Comparing with pseudo-types">TestSuite-Comparator-pseudo-types</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Comparator.html" title="Passing parameters to comparators">TestSuite-Comparator-parameters</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Comparator.html" title="Printing additional messages">TestSuite-Comparator-messages</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Comparator.html" title="Saving diagnostic files">TestSuite-Comparator-save-diagnostic</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Comparator&lt; double &gt;</name>
    <filename>classCorrade_1_1TestSuite_1_1Comparator_3_01double_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Comparator&lt; float &gt;</name>
    <filename>classCorrade_1_1TestSuite_1_1Comparator_3_01float_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Comparator&lt; long double &gt;</name>
    <filename>classCorrade_1_1TestSuite_1_1Comparator_3_01long_01double_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::Aligned</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Aligned.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::Around</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Around.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Around</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Compare_1_1Around.html</anchorfile>
      <anchor>a32bc31da967fea727ba4ef4904ee4cf4</anchor>
      <arglist>(T epsilon)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::Container</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Container.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::Divisible</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Divisible.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::File</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1File.html</filename>
    <member kind="function">
      <type></type>
      <name>File</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Compare_1_1File.html</anchorfile>
      <anchor>a4d28e5174daa0f2d5ecae1a7af2b503e</anchor>
      <arglist>(Containers::StringView pathPrefix={})</arglist>
    </member>
    <docanchor file="classCorrade_1_1TestSuite_1_1Compare_1_1File.html" title="Saving files for failed comparisons">TestSuite-Compare-File-save-diagnostic</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::FileToString</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1FileToString.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::Greater</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Greater.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::GreaterOrEqual</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1GreaterOrEqual.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::Less</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1Less.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::LessOrEqual</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1LessOrEqual.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::NotAligned</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1NotAligned.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::NotDivisible</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1NotDivisible.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::NotEqual</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1NotEqual.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::SortedContainer</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1SortedContainer.html</filename>
    <templarg></templarg>
    <base>Container&lt; T &gt;</base>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::StringContains</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1StringContains.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::StringHasPrefix</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1StringHasPrefix.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::StringHasSuffix</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1StringHasSuffix.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::StringNotContains</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1StringNotContains.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Compare::StringToFile</name>
    <filename>classCorrade_1_1TestSuite_1_1Compare_1_1StringToFile.html</filename>
    <docanchor file="classCorrade_1_1TestSuite_1_1Compare_1_1StringToFile.html" title="Saving files for failed comparisons">TestSuite-Compare-StringToFile-save-diagnostic</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Tester</name>
    <filename>classCorrade_1_1TestSuite_1_1Tester.html</filename>
    <class kind="class">Corrade::TestSuite::Tester::TesterConfiguration</class>
    <member kind="enumeration">
      <type></type>
      <name>BenchmarkType</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>aded4a627bc1573996e981425775f637d</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="aded4a627bc1573996e981425775f637da7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="aded4a627bc1573996e981425775f637da75fa4d137ea5adb50f81fb3c26229797">WallTime</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="aded4a627bc1573996e981425775f637da582bcd601669f4956f55cb20feb2614f">CpuTime</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="aded4a627bc1573996e981425775f637daba0d4b831fbcfdb7788fdfb4e8789207">CpuCycles</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BenchmarkUnits</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a37efcdd6ea7a7ec4a8e4b304218308b4</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="a37efcdd6ea7a7ec4a8e4b304218308b4afba00bdab687ce01136a86bac8bac578">Nanoseconds</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="a37efcdd6ea7a7ec4a8e4b304218308b4ad3240659659cbfa93d781d1510717a66">Cycles</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="a37efcdd6ea7a7ec4a8e4b304218308b4a49cc8e6220245b65cd7d20fc6ccc74f5">Instructions</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="a37efcdd6ea7a7ec4a8e4b304218308b4a600e754f49b68aa0fc90a9cd64eb7051">Bytes</enumvalue>
      <enumvalue file="classCorrade_1_1TestSuite_1_1Tester.html" anchor="a37efcdd6ea7a7ec4a8e4b304218308b4ae93f994f01c537c4e2f7d8528c3eb5e9">Count</enumvalue>
    </member>
    <member kind="typedef">
      <type>Corrade::Utility::Debug</type>
      <name>Debug</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a8ef15c8aec41c39215745963a3679199</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::Utility::Warning</type>
      <name>Warning</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a48afcce4f459f33e54da2c3c45f6e54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::Utility::Error</type>
      <name>Error</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a303019d6658462f4b8b365fde8d8c319</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tester</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ae84d406fe1ec5c18fcb782bcb24c9bef</anchor>
      <arglist>(const TesterConfiguration &amp;configuration=TesterConfiguration{})</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; int &amp;, char ** &gt;</type>
      <name>arguments</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ad254f71ecc24a166536a99094d504090</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>aad65989bea7cf70d5579dd65ffa1ce9a</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRepeatedTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a06c40ddf62db02c1575d019b630d7f08</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, std::size_t repeatCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a705b618d2aa631f2695d6c2adaf156ef</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, void(Derived::*setup)(), void(Derived::*teardown)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRepeatedTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>aaa26e0cc2a3431ad8e5ee139079302c1</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, std::size_t repeatCount, void(Derived::*setup)(), void(Derived::*teardown)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>af63e77990b01434052ac1c55fd3bf05a</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, std::size_t instanceCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRepeatedInstancedTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ac0fb10f0917037ac8dba8ca2e7d75ab6</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, std::size_t repeatCount, std::size_t instanceCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>aa8e029e34201b65e661fa677d1f3234e</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, std::size_t instanceCount, void(Derived::*setup)(), void(Derived::*teardown)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRepeatedInstancedTests</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ab56fc0bbd9681c4dddf158c04cc8f836</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; tests, std::size_t repeatCount, std::size_t instanceCount, void(Derived::*setup)(), void(Derived::*teardown)())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a424aeb9a3c2180464c155d982ae08389</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>abd05bfd3a84e9bb0a280451df8e550e1</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, void(Derived::*setup)(), void(Derived::*teardown)(), BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCustomBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>abc2586121a787554a70113a654a5b5c3</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, void(Derived::*benchmarkBegin)(), std::uint64_t(Derived::*benchmarkEnd)(), BenchmarkUnits benchmarkUnits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCustomBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a41a55bef9a39c9672ccfa434ad0f101b</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, void(Derived::*setup)(), void(Derived::*teardown)(), void(Derived::*benchmarkBegin)(), std::uint64_t(Derived::*benchmarkEnd)(), BenchmarkUnits benchmarkUnits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a65cbff7b6714412f59ec842678850d5a</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInstancedBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a5e420c73f8909475bcc4b036a04bb57e</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, void(Derived::*setup)(), void(Derived::*teardown)(), BenchmarkType benchmarkType=BenchmarkType::Default)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCustomInstancedBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ad97e1564731958ec41099b7728cac53e</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, void(Derived::*benchmarkBegin)(), std::uint64_t(Derived::*benchmarkEnd)(), BenchmarkUnits benchmarkUnits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCustomInstancedBenchmarks</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a75eeb5cd700bb72eccd27d7159656236</anchor>
      <arglist>(std::initializer_list&lt; void(Derived::*)()&gt; benchmarks, std::size_t batchCount, std::size_t instanceCount, void(Derived::*setup)(), void(Derived::*teardown)(), void(Derived::*benchmarkBegin)(), std::uint64_t(Derived::*benchmarkEnd)(), BenchmarkUnits benchmarkUnits)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>testCaseId</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a11ead46b910fa99b9cba375f8339c6d3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>testCaseInstanceId</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a6e4e68d5e55bdb862488688c964b7bc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>testCaseRepeatId</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a35501689a22896b7d08e3cb40dceffa4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>testName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a67062eb19881dcfc73fdeee1615bd23f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>afaa6809da051182d2e8e1bd666396b3f</anchor>
      <arglist>(Containers::StringView name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>af5624f0e668567ba6eb98e1e31d8648e</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>testCaseName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ae1d744ae58e534a6e3564d515696fb62</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ade6555e41167043a40a1cb41b340bccf</anchor>
      <arglist>(Containers::StringView name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ab988bb2fbfbb995615b16a4176e3c06e</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>testCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>ac806440480eeba4807b20fd7888fe911</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>abb99349426f93adc59e70830316225ae</anchor>
      <arglist>(Containers::StringView name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>adeef46c36366d169cb69f685837ce4e5</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a88dc7f6bd0e68450b1dc9c41c99e1ba4</anchor>
      <arglist>(Containers::ArrayView&lt; const Containers::StringView &gt; names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a89bac71c7ffb39a835ac92c2fe40756f</anchor>
      <arglist>(std::initializer_list&lt; Containers::StringView &gt; names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>abc1c70edcfdf27883ca02c53f289757d</anchor>
      <arglist>(Containers::ArrayView&lt; const char *const &gt; names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseTemplateName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>acf38eaf61d6f5efaf8b573e9705c1b48</anchor>
      <arglist>(std::initializer_list&lt; const char * &gt; names)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>testCaseDescription</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a7de8aad5477015bd2428046677337024</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseDescription</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a29bf79a093a82c5429d414759d1bfcf0</anchor>
      <arglist>(Containers::StringView description)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTestCaseDescription</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>afe7e87c77910ed3c25c7de2fdd863526</anchor>
      <arglist>(const char *description)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>benchmarkName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>a31c6857600781f87bdb51e915e9c9e69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBenchmarkName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>aa96bf0eaf9f4f033b6febc5f81af74a8</anchor>
      <arglist>(Containers::StringView name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBenchmarkName</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester.html</anchorfile>
      <anchor>abff854b31a3362cb56ebb54c22459a27</anchor>
      <arglist>(const char *name)</arglist>
    </member>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Basic testing workflow">TestSuite-Tester-basic</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Instanced tests">TestSuite-Tester-instanced</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Testing in a loop">TestSuite-Tester-iteration-annotations</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Repeated tests">TestSuite-Tester-repeated</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Advanced comparisons">TestSuite-Tester-advanced-comparisons</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Saving diagnostic files">TestSuite-Tester-save-diagnostic</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Benchmarks">TestSuite-Tester-benchmark</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Custom benchmarks">TestSuite-Tester-benchmark-custom</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Specifying setup/teardown routines">TestSuite-Tester-setup-teardown</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Catching exceptions">TestSuite-Tester-exceptions</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Command-line options">TestSuite-Tester-command-line</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Compiling and running tests">TestSuite-Tester-running</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Using CMake">TestSuite-Tester-running-cmake</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Manually running the tests on Android">TestSuite-Tester-running-android</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Manually running the tests on Emscripten">TestSuite-Tester-running-emscripten</docanchor>
    <docanchor file="classCorrade_1_1TestSuite_1_1Tester.html" title="Running Emscripten tests in a browser">TestSuite-Tester-running-emscripten-browser</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::TestSuite::Tester::TesterConfiguration</name>
    <filename>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</filename>
    <member kind="function">
      <type></type>
      <name>TesterConfiguration</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>aacb587778eaed8e4f47f04808c6a2511</anchor>
      <arglist>(const TesterConfiguration &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TesterConfiguration</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a9dbda656012b28c87b92fe4100751123</anchor>
      <arglist>(TesterConfiguration &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>TesterConfiguration &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a525b08b3a61037ff19a17cfe547aca40</anchor>
      <arglist>(const TesterConfiguration &amp;)</arglist>
    </member>
    <member kind="function">
      <type>TesterConfiguration &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>abe08869180774ace9a523b1106304512</anchor>
      <arglist>(TesterConfiguration &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>skippedArgumentPrefixes</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a15550dd5023ae8b5a28d5fd773e7cfdb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TesterConfiguration &amp;</type>
      <name>setSkippedArgumentPrefixes</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a0f0620c8e0ecd144ba7470c1b1ca6ce9</anchor>
      <arglist>(std::initializer_list&lt; Containers::StringView &gt; prefixes)</arglist>
    </member>
    <member kind="function">
      <type>TesterConfiguration &amp;</type>
      <name>setSkippedArgumentPrefixes</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a34f204e0a7bf5fbe583e95d2b2ef1e8f</anchor>
      <arglist>(std::initializer_list&lt; const char * &gt; prefixes)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>cpuScalingGovernorFile</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a928c677ec4e2a4b74f1714d8cf03d80f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TesterConfiguration &amp;</type>
      <name>setCpuScalingGovernorFile</name>
      <anchorfile>classCorrade_1_1TestSuite_1_1Tester_1_1TesterConfiguration.html</anchorfile>
      <anchor>a8f3231852bf098974adb291b6231a705</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::AbstractHash</name>
    <filename>classCorrade_1_1Utility_1_1AbstractHash.html</filename>
    <templarg>digestSize</templarg>
    <member kind="enumvalue">
      <name>DigestSize</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>aa41c2cba14c058c8fd70492ab23ada04a1845bcbe98f41a624c92ed7e797a14f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>HashDigest&lt; digestSize &gt;</type>
      <name>Digest</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>a44db12441a55b94fdead99c880fd0a4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DigestSize</name>
      <anchorfile>classCorrade_1_1Utility_1_1AbstractHash.html</anchorfile>
      <anchor>aa41c2cba14c058c8fd70492ab23ada04a1845bcbe98f41a624c92ed7e797a14f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::AndroidLogStreamBuffer</name>
    <filename>classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html</filename>
    <base>std::stringbuf</base>
    <member kind="enumeration">
      <type></type>
      <name>LogPriority</name>
      <anchorfile>classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html</anchorfile>
      <anchor>a18ae87be1aa3d05f590a8ea2f26d538b</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html" anchor="a18ae87be1aa3d05f590a8ea2f26d538bad4a9fa383ab700c5bdd6f31cf7df0faf">Verbose</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html" anchor="a18ae87be1aa3d05f590a8ea2f26d538baa603905470e2a5b8c13e96b579ef0dba">Debug</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html" anchor="a18ae87be1aa3d05f590a8ea2f26d538ba4059b0251f66a18cb56f544728796875">Info</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html" anchor="a18ae87be1aa3d05f590a8ea2f26d538ba0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html" anchor="a18ae87be1aa3d05f590a8ea2f26d538ba902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html" anchor="a18ae87be1aa3d05f590a8ea2f26d538ba882384ec38ce8d9582b57e70861730e4">Fatal</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>AndroidLogStreamBuffer</name>
      <anchorfile>classCorrade_1_1Utility_1_1AndroidLogStreamBuffer.html</anchorfile>
      <anchor>ab631a4d21e449fa7fc4ba337f6663b97</anchor>
      <arglist>(LogPriority priority, std::string tag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Arguments</name>
    <filename>classCorrade_1_1Utility_1_1Arguments.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a82f8fcf588caf0b2e41b980ef5fd6481</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="a82f8fcf588caf0b2e41b980ef5fd6481a700850787976272768547cad8f9973af">IgnoreUnknownOptions</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParseError</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>adc4d8a946e6537b94ca5a03055a36f8c</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca2916a009bb0c2ed35d078f507196812d">InvalidShortArgument</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca253ca7dd096ee0956cccee4d376cab8b">InvalidArgument</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca96096fd2cfa138e6f8ec273de371d31c">UnknownShortArgument</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca910d850dc07acbb9bf598bb640855bc7">UnknownArgument</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca9236eb73457e03f6b42654b3e6cbf6f6">SuperfluousArgument</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8cacc990d970611ba7592f78e3498a54114">PositionalArgumentAsNamed</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca1e5e4b43c87e3153f897a9734fbf5b35">MissingValue</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Arguments.html" anchor="adc4d8a946e6537b94ca5a03055a36f8ca9b46c0a30fe33b925438038742999d2e">MissingArgument</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a5b0c6984c66c3ee9d02fce798279dc0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>bool(*</type>
      <name>ParseErrorCallback</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aa8fac08aa73215a775e7440de88dd136</anchor>
      <arglist>)(const Arguments &amp;, ParseError, const std::string &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arguments</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ac83f6669b1b26cf2ba722d2e49a55a7d</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arguments</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a1ac43b5236e3889c49c758da5ed055b7</anchor>
      <arglist>(const std::string &amp;prefix, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arguments</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ae79d16b05e600cb47aba5514351f01c4</anchor>
      <arglist>(const Arguments &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Arguments</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ac1cf07c2e2b675d996170b06e754bbde</anchor>
      <arglist>(Arguments &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a3311137d89812d8b488741d3c63bdcaa</anchor>
      <arglist>(const Arguments &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a4502d37691de122b8434d6a71489e643</anchor>
      <arglist>(Arguments &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a7d708f9420e66d17823221fda9ee7ddf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParsed</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ac2f9fe31a2518370529778d7d652ea5e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addArgument</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a04aff33278cec85149be6ca5fe0ebe50</anchor>
      <arglist>(std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addArrayArgument</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aee5206fc1b01cdbdf89a142fe165a198</anchor>
      <arglist>(std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addNamedArgument</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ad5cee51b358c0e8e0a916a4c2ddbf340</anchor>
      <arglist>(char shortKey, std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addNamedArgument</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a2bf98b4f9617759235e19e5486cc8b0d</anchor>
      <arglist>(std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addOption</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ae816c3bd7a008ccad5a351a9567be5a7</anchor>
      <arglist>(char shortKey, std::string key, std::string defaultValue=std::string())</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addOption</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>abbe0aa87021d58e15fc2bf2fb34e065b</anchor>
      <arglist>(std::string key, std::string defaultValue=std::string())</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addArrayOption</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a596b29cb5a50bde0f05b68a07aecb152</anchor>
      <arglist>(char shortKey, std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addArrayOption</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a6132011b1fd0f3f10f65da456b263bf2</anchor>
      <arglist>(std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addBooleanOption</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a673f36d1884f12d57a286ddb83c8bf5a</anchor>
      <arglist>(char shortKey, std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addBooleanOption</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aa78f024b302dd98f0133113f64029f96</anchor>
      <arglist>(std::string key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addFinalOptionalArgument</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aaa702458b842d1c49e561bcc9560cb6c</anchor>
      <arglist>(std::string key, std::string defaultValue=std::string())</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>addSkippedPrefix</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a8214b0d6eefcc60f9a2efcf8e66293e3</anchor>
      <arglist>(std::string prefix, std::string help={})</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setFromEnvironment</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>acd3a4c1a7d3a7b038117427997cc39e1</anchor>
      <arglist>(const std::string &amp;key, std::string environmentVariable)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setFromEnvironment</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a20f430c16a0d2b4dfa25a0f6f58139ac</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setCommand</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ab074895acefd5df3f4abaf002a38297d</anchor>
      <arglist>(std::string name)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setGlobalHelp</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aa1198f4af1258d4d1b3b96044e5d2db3</anchor>
      <arglist>(std::string help)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setHelp</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a5db80e6f74d8562f021e3eab9e241c9c</anchor>
      <arglist>(std::string help)</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setHelp</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ac4efaabf1409be24f8868ca9352d4c39</anchor>
      <arglist>(const std::string &amp;key, std::string help, std::string helpKey={})</arglist>
    </member>
    <member kind="function">
      <type>ParseErrorCallback</type>
      <name>parseErrorCallback</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a63876878d70b921f28541b0209eba505</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>parseErrorCallbackState</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a19f30644ecc303925c34d4a874fb44ba</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Arguments &amp;</type>
      <name>setParseErrorCallback</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a0fe67d452a0a744d06931032fd4fcd1c</anchor>
      <arglist>(ParseErrorCallback callback, void *state=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parse</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a0e7301be5574666ed5f87c0c07332fba</anchor>
      <arglist>(int argc, const char *const *argv)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>tryParse</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a749fc9598fbd001ba5922eafbcf7a68a</anchor>
      <arglist>(int argc, const char *const *argv)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>usage</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aa0c776cec0bb73620710355b8f9f3a33</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>help</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ab3ae8e4ded6d537b7c2e1c9ffe0b8487</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a52f8a7ecef8af0073c17f82845e9b8d1</anchor>
      <arglist>(const std::string &amp;key, ConfigurationValueFlags flags={}) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayValueCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a8064c0e50d78d99cda8e41962f6ccfd5</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>arrayValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a845ed41db9566f494338e15f64871655</anchor>
      <arglist>(const std::string &amp;key, const std::size_t id, ConfigurationValueFlags flags={}) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSet</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>aeb72baaf9199afec94d43d3a836091ae</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; std::string &gt;</type>
      <name>environment</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>ac9116541282e1ead2fed21e40d64a0a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Arguments.html</anchorfile>
      <anchor>a8368a7e211b06faf0bf3c5a0d13311c6</anchor>
      <arglist>(Debug &amp;debug, Arguments::ParseError value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1Arguments.html" title="Example usage">Utility-Arguments-usage</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Arguments.html" title="Delegating arguments to different parts of the application">Utility-Arguments-delegating</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Arguments.html" title="Advanced parsing logic">Utility-Arguments-parse-error-callback</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Configuration</name>
    <filename>classCorrade_1_1Utility_1_1Configuration.html</filename>
    <base>Corrade::Utility::ConfigurationGroup</base>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a5d368fa6993f223b4c3fa25332921e86</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1Configuration.html" anchor="a5d368fa6993f223b4c3fa25332921e86afaebb611045e49cc0dfa08935d38be89">PreserveBom</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Configuration.html" anchor="a5d368fa6993f223b4c3fa25332921e86a03cf6a68c2fac661330a1ad2cac38b90">ForceUnixEol</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Configuration.html" anchor="a5d368fa6993f223b4c3fa25332921e86a6f417e6c5ec8c6620ad71177b1e4d3aa">ForceWindowsEol</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Configuration.html" anchor="a5d368fa6993f223b4c3fa25332921e86aa8156810bfee2bd2b44765b9e91db3bd">Truncate</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Configuration.html" anchor="a5d368fa6993f223b4c3fa25332921e86ae076500ec82f42a92c1291f3c2ebdb72">SkipComments</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Configuration.html" anchor="a5d368fa6993f223b4c3fa25332921e86a131fb182a881796e7606ed6da27f1197">ReadOnly</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a0b3f492e864ee97228d5170d38a31933</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>abe8c1af9685dc46bce30ee46203f895c</anchor>
      <arglist>(Flags flags=Flags())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a5aa6826a44ae881fdd9a3b7ff4b57535</anchor>
      <arglist>(const std::string &amp;filename, Flags flags=Flags())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>aa9808d44a604e4a455975e3ebfd6bf37</anchor>
      <arglist>(std::istream &amp;in, Flags flags=Flags())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a7ac737721e13c9303696985e2a8672e1</anchor>
      <arglist>(const Configuration &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a1258e56c643add518646e32edaf99892</anchor>
      <arglist>(Configuration &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>ae48021eb27720034fdebaa9dd1adad27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>ab54d47655023263934e52520ba00ba4a</anchor>
      <arglist>(const Configuration &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Configuration &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a8737ede25f287ff66e9601a4934f92a5</anchor>
      <arglist>(Configuration &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a9d3d905aafa6132053c1ed665c323fa8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFilename</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>aa8745aca008e75311acbb3778ba81fd0</anchor>
      <arglist>(std::string filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a339906c024f64b895238bf099b5ed241</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>a4e6f38caab000dd04321001f4445d1ff</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>save</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>abc47d18cdd33e5c928f2aa33dd6b09fd</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>save</name>
      <anchorfile>classCorrade_1_1Utility_1_1Configuration.html</anchorfile>
      <anchor>ae6d938117a8afa18976fc9a481220f2e</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1Configuration.html" title="File syntax and usage">Utility-Configuration-usage</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Configuration.html" title="Whitespace and comments">Utility-Configuration-usage-whitespace</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Configuration.html" title="Key/value pairs">Utility-Configuration-usage-values</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Configuration.html" title="Value groups">Utility-Configuration-usage-groups</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Configuration.html" title="Iteration through groups and values">Utility-Configuration-iteration</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::ConfigurationGroup</name>
    <filename>classCorrade_1_1Utility_1_1ConfigurationGroup.html</filename>
    <class kind="class">Corrade::Utility::ConfigurationGroup::BasicGroupIterator</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::BasicGroups</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::ValueIterator</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup::Values</class>
    <member kind="typedef">
      <type>BasicGroupIterator&lt; ConfigurationGroup &gt;</type>
      <name>MutableGroupIterator</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a8278a667e3379a92aa8a68bbda0ba0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicGroupIterator&lt; const ConfigurationGroup &gt;</type>
      <name>GroupIterator</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a106a631083bb9ecc26e92ce7757c927a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicGroups&lt; ConfigurationGroup &gt;</type>
      <name>MutableGroups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a3c48e8d0ca55c252e06a0a62ff622d27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicGroups&lt; const ConfigurationGroup &gt;</type>
      <name>Groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a91293ec5e76214eeba3209bee0725c15</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigurationGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a500d96ba04e6c01b95d9121cf4934f18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigurationGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ab41d1f58bfcf9d6b7cb5727f87429e1e</anchor>
      <arglist>(const ConfigurationGroup &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConfigurationGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1ae4cecc4e8cf32c7e4d3aaa286bdc59</anchor>
      <arglist>(ConfigurationGroup &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a81854d756573080131dbc9a29c848c08</anchor>
      <arglist>(const ConfigurationGroup &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationGroup &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aedad8168535bcf5a3cb617b211da6e58</anchor>
      <arglist>(ConfigurationGroup &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Configuration *</type>
      <name>configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a6ac83e7385b39cd9a1c08aeb9a7201d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Configuration *</type>
      <name>configuration</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a0e50b5c57375c113cee93fbd4a1b645a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a5f33c8854891aae82b6f102b82744355</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a527a6fb19869f89e99ae052d1d26a5e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MutableGroups</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ad5eee58209925d7514dbb6989c84670f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Groups</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a7112c2793758fd6ef237e8f6446d238c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a650866079ff8f98e317a14f4fd150a45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>groupCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>abdcb04c6c1db224dd7786e638606d8e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ac2f358ab27af981ff68ea9292f59a020</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>groupCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a3eabf45c8bc4cfd9d807648c452f8ec5</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationGroup *</type>
      <name>group</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a63159c4babaa45629b3e4c8ca914a1a8</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0)</arglist>
    </member>
    <member kind="function">
      <type>const ConfigurationGroup *</type>
      <name>group</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a591eb47bc168a050746bb85ac9a19223</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ConfigurationGroup * &gt;</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ad8f450ba99b1e943061170d6a51f9d22</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const ConfigurationGroup * &gt;</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aef4149dcbc166e702604c20a5f76cf8f</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a283661713aa073739663b46f5c468e1c</anchor>
      <arglist>(const std::string &amp;name, ConfigurationGroup *group)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationGroup *</type>
      <name>addGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a2e54288f77dfb90ad24886cb9a06f646</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a6eeed46dd76a629fd2693732c91d0040</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>afe24d64f8c78513293e57e38c7d0727c</anchor>
      <arglist>(ConfigurationGroup *group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllGroups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a84000627f3d7e0e07d0a6ffa09c2c636</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Values</type>
      <name>values</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a71991afabcbc4bbfa9d259ba805b4877</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValues</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a58f76764f03de9b5762456236a8fcdd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>valueCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aad421cdb9c20c0af6edb4fcd74602ac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>adf227126a78b3ff49a7afa93bcff2ad0</anchor>
      <arglist>(const std::string &amp;key, unsigned int index=0) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>valueCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ac1f3413007d0239b9602c49bd998660c</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aa201500e4da6274b621430d4d9aaa7bf</anchor>
      <arglist>(const std::string &amp;key, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags()) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>acd283e52686ac4ed50a397aea968c431</anchor>
      <arglist>(const std::string &amp;key, ConfigurationValueFlags flags) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>values</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>af212fb2c4e59b7a1f1c1027329b5bd67</anchor>
      <arglist>(const std::string &amp;key, ConfigurationValueFlags flags=ConfigurationValueFlags()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aadca4a5b40bcd66d0837193af2c841e2</anchor>
      <arglist>(const std::string &amp;key, std::string value, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a8d881c499196d832b7dd3581df25ab55</anchor>
      <arglist>(const std::string &amp;key, const char *value, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1be7095f3d51a0d6fe324545c62d569e</anchor>
      <arglist>(const std::string &amp;key, std::string value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a025de56172c2b6ff9640053b6a72eb00</anchor>
      <arglist>(const std::string &amp;key, const char *value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aa2988c7a715adb37b3d8938a08b9e006</anchor>
      <arglist>(const std::string &amp;key, const T &amp;value, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>abf56c0ee12977dd024ede9cfcd1fda41</anchor>
      <arglist>(const std::string &amp;key, const T &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>abf66026df64ae2561040aaa75fdfbd31</anchor>
      <arglist>(std::string key, std::string value, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a6ba87151d0821e99d9e5038586ffed71</anchor>
      <arglist>(std::string key, const char *value, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aee6029a57056ff1e3a4400d8da424c48</anchor>
      <arglist>(std::string key, const T &amp;value, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1b7d7d5fbd18eaf10c3aafe4871509ad</anchor>
      <arglist>(const std::string &amp;key, unsigned int index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllValues</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1654bb0a8323a813f380004a6fb57759</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>MutableGroups</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ad5eee58209925d7514dbb6989c84670f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Groups</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a7112c2793758fd6ef237e8f6446d238c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a650866079ff8f98e317a14f4fd150a45</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>groupCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>abdcb04c6c1db224dd7786e638606d8e9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ac2f358ab27af981ff68ea9292f59a020</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>groupCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a3eabf45c8bc4cfd9d807648c452f8ec5</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationGroup *</type>
      <name>group</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a63159c4babaa45629b3e4c8ca914a1a8</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0)</arglist>
    </member>
    <member kind="function">
      <type>const ConfigurationGroup *</type>
      <name>group</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a591eb47bc168a050746bb85ac9a19223</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ConfigurationGroup * &gt;</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ad8f450ba99b1e943061170d6a51f9d22</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; const ConfigurationGroup * &gt;</type>
      <name>groups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aef4149dcbc166e702604c20a5f76cf8f</anchor>
      <arglist>(const std::string &amp;name) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a283661713aa073739663b46f5c468e1c</anchor>
      <arglist>(const std::string &amp;name, ConfigurationGroup *group)</arglist>
    </member>
    <member kind="function">
      <type>ConfigurationGroup *</type>
      <name>addGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a2e54288f77dfb90ad24886cb9a06f646</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a6eeed46dd76a629fd2693732c91d0040</anchor>
      <arglist>(const std::string &amp;name, unsigned int index=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>afe24d64f8c78513293e57e38c7d0727c</anchor>
      <arglist>(ConfigurationGroup *group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllGroups</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a84000627f3d7e0e07d0a6ffa09c2c636</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Values</type>
      <name>values</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a71991afabcbc4bbfa9d259ba805b4877</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValues</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a58f76764f03de9b5762456236a8fcdd2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>valueCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aad421cdb9c20c0af6edb4fcd74602ac8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>adf227126a78b3ff49a7afa93bcff2ad0</anchor>
      <arglist>(const std::string &amp;key, unsigned int index=0) const</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>valueCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>ac1f3413007d0239b9602c49bd998660c</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aa201500e4da6274b621430d4d9aaa7bf</anchor>
      <arglist>(const std::string &amp;key, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags()) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>acd283e52686ac4ed50a397aea968c431</anchor>
      <arglist>(const std::string &amp;key, ConfigurationValueFlags flags) const</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>values</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>af212fb2c4e59b7a1f1c1027329b5bd67</anchor>
      <arglist>(const std::string &amp;key, ConfigurationValueFlags flags=ConfigurationValueFlags()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aadca4a5b40bcd66d0837193af2c841e2</anchor>
      <arglist>(const std::string &amp;key, std::string value, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a8d881c499196d832b7dd3581df25ab55</anchor>
      <arglist>(const std::string &amp;key, const char *value, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1be7095f3d51a0d6fe324545c62d569e</anchor>
      <arglist>(const std::string &amp;key, std::string value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a025de56172c2b6ff9640053b6a72eb00</anchor>
      <arglist>(const std::string &amp;key, const char *value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aa2988c7a715adb37b3d8938a08b9e006</anchor>
      <arglist>(const std::string &amp;key, const T &amp;value, unsigned int index=0, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>abf56c0ee12977dd024ede9cfcd1fda41</anchor>
      <arglist>(const std::string &amp;key, const T &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>abf66026df64ae2561040aaa75fdfbd31</anchor>
      <arglist>(std::string key, std::string value, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a6ba87151d0821e99d9e5038586ffed71</anchor>
      <arglist>(std::string key, const char *value, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>aee6029a57056ff1e3a4400d8da424c48</anchor>
      <arglist>(std::string key, const T &amp;value, ConfigurationValueFlags flags=ConfigurationValueFlags())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>removeValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1b7d7d5fbd18eaf10c3aafe4871509ad</anchor>
      <arglist>(const std::string &amp;key, unsigned int index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllValues</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup.html</anchorfile>
      <anchor>a1654bb0a8323a813f380004a6fb57759</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::ConfigurationGroup::BasicGroupIterator</name>
    <filename>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroupIterator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>Containers::Pair&lt; Containers::StringView, Containers::Reference&lt; T &gt; &gt;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroupIterator.html</anchorfile>
      <anchor>a9f684f6f7b625a85174c58bf73fde13e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroupIterator.html</anchorfile>
      <anchor>a0499cf54ee901da01a1d8da8a30a7297</anchor>
      <arglist>(const BasicGroupIterator&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroupIterator.html</anchorfile>
      <anchor>a5635a48bc7810295354ea8ae675808d7</anchor>
      <arglist>(const BasicGroupIterator&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>BasicGroupIterator&lt; T &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroupIterator.html</anchorfile>
      <anchor>aed6ab2c242c6835ce12bcc65b99219fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BasicGroupIterator&lt; T &gt;</type>
      <name>operator++</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroupIterator.html</anchorfile>
      <anchor>ad89cfb7f7455612c3936c88fdf59d717</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::ConfigurationGroup::BasicGroups</name>
    <filename>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroups.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>BasicGroupIterator&lt; T &gt;</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroups.html</anchorfile>
      <anchor>a6a04e26c1a93c8fbdf35ab74dbb42929</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicGroupIterator&lt; const T &gt;</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroups.html</anchorfile>
      <anchor>a1522ceb95e2e8f6bb87fc8d8df6175ce</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicGroupIterator&lt; T &gt;</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroups.html</anchorfile>
      <anchor>a179cf978ba6f57c1c0be66ba70f9924d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>BasicGroupIterator&lt; const T &gt;</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1BasicGroups.html</anchorfile>
      <anchor>ad50021d8fac40eca9d12445cf56adafa</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::ConfigurationGroup::ValueIterator</name>
    <filename>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1ValueIterator.html</filename>
    <member kind="function">
      <type>Containers::Pair&lt; Containers::StringView, Containers::StringView &gt;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1ValueIterator.html</anchorfile>
      <anchor>a7385fa7d138c3103bdf643d7946d266a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1ValueIterator.html</anchorfile>
      <anchor>acc7afb37463eae872e513566aa892947</anchor>
      <arglist>(const ValueIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1ValueIterator.html</anchorfile>
      <anchor>abc24c30687e02ed9a3e89519e8eeebe0</anchor>
      <arglist>(const ValueIterator &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1ValueIterator.html</anchorfile>
      <anchor>ac4557410a22487258a6e046ba18410a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>operator++</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1ValueIterator.html</anchorfile>
      <anchor>a0be2b5bb1fe20aa26f0a016fda1515da</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::ConfigurationGroup::Values</name>
    <filename>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1Values.html</filename>
    <member kind="function">
      <type>ValueIterator</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1Values.html</anchorfile>
      <anchor>a464889e10a27ec83d66848e1bcdbbf3b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1Values.html</anchorfile>
      <anchor>a187b389bbf0ebedf4402ca4538e49e58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1Values.html</anchorfile>
      <anchor>a29ac8f5c1dbaa1d92aca47b7be7938de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueIterator</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Utility_1_1ConfigurationGroup_1_1Values.html</anchorfile>
      <anchor>a41d0ffe2b5f584ec99214f7c4285042b</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue.html</anchorfile>
      <anchor>ab639d070423f77173baa8ada58975ffa</anchor>
      <arglist>(const T &amp;value, ConfigurationValueFlags flags)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>fromString</name>
      <anchorfile>structCorrade_1_1Utility_1_1ConfigurationValue.html</anchorfile>
      <anchor>a5e3bd19c82a34fb97bfddc94404f932a</anchor>
      <arglist>(const std::string &amp;stringValue, ConfigurationValueFlags flags)</arglist>
    </member>
    <docanchor file="structCorrade_1_1Utility_1_1ConfigurationValue.html" title="Example: custom structure">Utility-ConfigurationValue-example</docanchor>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; bool &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01bool_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; char32_t &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01char32__t_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Containers::String &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Containers_1_1String_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; Containers::StringView &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01Containers_1_1StringView_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; double &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; float &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01float_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; int &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01int_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01long_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; long double &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01long_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; long long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01long_01long_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; short &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01short_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; std::string &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01std_1_1string_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; unsigned int &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01unsigned_01int_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; unsigned long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01unsigned_01long_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; unsigned long long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01unsigned_01long_01long_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::ConfigurationValue&lt; unsigned short &gt;</name>
    <filename>structCorrade_1_1Utility_1_1ConfigurationValue_3_01unsigned_01short_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Debug</name>
    <filename>classCorrade_1_1Utility_1_1Debug.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>aa346e932b5141006c49777ddacfaf600</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="aa346e932b5141006c49777ddacfaf600af29e1bcd00663e0b5d5a74d31baa9e96">NoNewlineAtTheEnd</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="aa346e932b5141006c49777ddacfaf600ada953bf4ea2f8e90228cd77eb880389f">DisableColors</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="aa346e932b5141006c49777ddacfaf600a533ddf198ed1163ad815ad0e4a2445f2">NoSpace</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="aa346e932b5141006c49777ddacfaf600aa1977c3f68d4d3bbfe14d0e51a575482">Packed</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="aa346e932b5141006c49777ddacfaf600acb5feb1b7314637725a2e73bdc9f7295">Color</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>aedc4d6996ab47a86c346c1667794729b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Debug</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a069a145924bd86bfc3f4c6af07508452</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Debug</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a094bd4c780a495f91dbe19776127f4f8</anchor>
      <arglist>(std::ostream *output, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Debug</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a5eb811dee5401f2382acb8476f6d837a</anchor>
      <arglist>(const Debug &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Debug</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a11fa7c20ee652f1da6fe75d475ab0e48</anchor>
      <arglist>(Debug &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Debug</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a4e30b5f23e9d3f56bb54942ef11288e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a621047711b250b30e87cf7143e429f0c</anchor>
      <arglist>(const Debug &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a02b17ddadb7259779431bafdb6dc84a2</anchor>
      <arglist>(Debug &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a44f35193f9261dc48118343b718b0485</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ab931824219ab68b12fec5a5c6aab1a4f</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>immediateFlags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ae481cc30e69f2d21f13802896d999a8e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImmediateFlags</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a9386e633a085278ca874c3aad19a3db1</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ae69cc39e585cecff8f62de8021310625</anchor>
      <arglist>(const char *value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a7b269e3bb075daa95c3f68c9750fd4b4</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a0caee627ac6a49bc3f22d775c7a318c4</anchor>
      <arglist>(Containers::MutableStringView value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>adac4042d0fb1aed2df72b1e578184e0a</anchor>
      <arglist>(const Containers::String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>aff9c6458cd540b05cc8de699fc447612</anchor>
      <arglist>(const void *value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ae63b33ce21e641e09ab40d112478d1cb</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a5ecd51b793080679e1cef374ab3270bd</anchor>
      <arglist>(char value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a2f64ecfdfa525d7983a7e47476054f45</anchor>
      <arglist>(unsigned char value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a5d3eed115b67af8d1ddb7da14203c14f</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>af40a9a017147e636ec26ee908a7e0be3</anchor>
      <arglist>(long value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ab4d2da638e44a82c0f20f296aa3d56aa</anchor>
      <arglist>(long long value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a2d0037d304750a48fbe07529ab8303eb</anchor>
      <arglist>(unsigned value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a891c60f4b971be1f8d2e035003a8d17d</anchor>
      <arglist>(unsigned long value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a0af3dd252d3bff37b7d07251cee8e0d0</anchor>
      <arglist>(unsigned long long value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ad7be067577921c571462029f1ac3aa45</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a01248180f7de121c5dc11048dd8bdcb5</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a6e5de82918664faf6d4cdd0446021e3b</anchor>
      <arglist>(long double value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ae7d1f454108f0afc2ad25fb1add531c8</anchor>
      <arglist>(char32_t value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ae33c76463e8777e886882d6e9789f648</anchor>
      <arglist>(const char32_t *value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a268ead977bf4c7535535165a3e218029</anchor>
      <arglist>(std::nullptr_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream *</type>
      <name>defaultOutput</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a48167e08a57717f0a5e7674acbca3ed5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream *</type>
      <name>output</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a7b1cf2f6c0054b8da9e7690a44d0a57b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTty</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a9a9f259c477b12b162c6a017069f8b23</anchor>
      <arglist>(std::ostream *output)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTty</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a5d77ed61a71281063289b28f63e26928</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a1c2f055fab5c0e4e526e5bcd1c703735</anchor>
      <arglist>(Debug &amp;debug, Debug::Color value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>af0a2845a6cbbbe1962ed74491f261cc8</anchor>
      <arglist>(Debug &amp;debug, Debug::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a9a67da2c7331baec84d75993e576f95d</anchor>
      <arglist>(Debug &amp;debug, Debug::Flags value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator!</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a9dc0b7f07f114111dbad9ab62d92ad8d</anchor>
      <arglist>(Implementation::DebugSourceLocation debug)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ae2cee4795e84d13d29d1d9e1c805ecd2</anchor>
      <arglist>(Debug &amp;debug, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ac103e9217a8710bd03ee4783d3d6ed4b</anchor>
      <arglist>(Debug &amp;debug, const Iterable &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a76d39b67ac31b0abf23b5c5d4bec9f15</anchor>
      <arglist>(Debug &amp;debug, const std::pair&lt; T, U &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a516b71a8f99c9bd0edea7275889ebc7a</anchor>
      <arglist>(Debug &amp;debug, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;!std::is_same&lt; T, char &gt;::value, Debug &amp; &gt;::type</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a9c5697e2ec9a42531dbb3c9dfe1dbd02</anchor>
      <arglist>(Debug &amp;debug, const std::basic_string&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a9f9d27d6f040e6e490f2d73c5a0b8b56</anchor>
      <arglist>(Debug &amp;debug, const std::tuple&lt; Args... &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a93d5d075373cf6340043fbd204d1c6b7</anchor>
      <arglist>(Debug &amp;debug, std::string_view value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ab456ac723e0708a30c48123d4392dfc6</anchor>
      <arglist>(Debug &amp;debug, std::basic_string_view&lt; T &gt; value)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Color</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a40f3e8edbd24f69725130f20202bbc2d</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2dae90dfb84e30edf611e326eeb04d680de">Black</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2daee38e4d5dd68c4e440825018d549cb47">Red</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2dad382816a3cbeed082c9e216e7392eed1">Green</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2da51e6cd92b6c45f9affdc158ecca2b8b8">Yellow</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2da9594eec95be70e7b1710f730fdda33d9">Blue</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2dab91cc2c1416fcca942b61c7ac5b1a9ac">Magenta</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2da023c239d2f2538f140a20e72c7b73f20">Cyan</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2da25a81701fbfa4a1efdf660a950c1d006">White</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Debug.html" anchor="a40f3e8edbd24f69725130f20202bbc2da7a1920d61156abc05a60135aefe8bc67">Default</enumvalue>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Modifier</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>aede8a384033583c6b407e28134fd7c8a</anchor>
      <arglist>)(Debug &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>nospace</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a025728a1744179cbae9b801920098047</anchor>
      <arglist>(Debug &amp;debug)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>newline</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a8a96ee3513ec028eddbc520356293213</anchor>
      <arglist>(Debug &amp;debug)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>space</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a10599daf5a7e05b4c6b800e71b674a1b</anchor>
      <arglist>(Debug &amp;debug)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Modifier</type>
      <name>color</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>adcec277d62ba0330b84e51f7ad7943ab</anchor>
      <arglist>(Color color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Modifier</type>
      <name>boldColor</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a478da3d5c740d5c1fd9f6b1b5a885ef4</anchor>
      <arglist>(Color color)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetColor</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a6f60b92af29843411942a34e7ea6819a</anchor>
      <arglist>(Debug &amp;debug)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>packed</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a7d729e8b4f5722c1026606ec0e5b6a21</anchor>
      <arglist>(Debug &amp;debug)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>color</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>a060a0a66096bfed18616de2540f5f5cd</anchor>
      <arglist>(Debug &amp;debug)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Debug.html</anchorfile>
      <anchor>ac5f5e43d351399cc0dc1e471a753a300</anchor>
      <arglist>(Modifier f)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Printing STL types">Utility-Debug-stl</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Scoped output redirection">Utility-Debug-scoped-output</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Output modifiers">Utility-Debug-modifiers</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Explicit whitespace control">Utility-Debug-modifiers-whitespace</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Colored output">Utility-Debug-modifiers-colors</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Source location">Utility-Debug-source-location</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="ANSI color support and UTF-8 output on Windows">Utility-Debug-windows</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Debug.html" title="Thread safety">Utility-Debug-multithreading</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Error</name>
    <filename>classCorrade_1_1Utility_1_1Error.html</filename>
    <base>Corrade::Utility::Debug</base>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a3fbe9b0f2557ce83055671246dcf7e7e</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a213951517715c247dac75d596c2d13f8</anchor>
      <arglist>(std::ostream *output, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>aabe83634a34265d09ec611d1d9e21914</anchor>
      <arglist>(const Error &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Error</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a792f4425e6734e77e99ae29be4fb9572</anchor>
      <arglist>(Error &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Error</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>aea88b9362728fd3306d67b80b65994a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Error &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a1283baaa3477cbc49d48bfad02d57e5a</anchor>
      <arglist>(const Error &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Error &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a23c200ee5c7044cd25ce4d32a23d5f7a</anchor>
      <arglist>(Error &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream *</type>
      <name>defaultOutput</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>af0c373889e2bba3938cc1acb20ce9109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream *</type>
      <name>output</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a62298361453f8ab0b4fa54129f9de75a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTty</name>
      <anchorfile>classCorrade_1_1Utility_1_1Error.html</anchorfile>
      <anchor>a7a4ea1bcc756c6af798606ca361837f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Fatal</name>
    <filename>classCorrade_1_1Utility_1_1Fatal.html</filename>
    <base>Corrade::Utility::Error</base>
    <member kind="function">
      <type></type>
      <name>Fatal</name>
      <anchorfile>classCorrade_1_1Utility_1_1Fatal.html</anchorfile>
      <anchor>ace9441b319771c44b9407736733d9489</anchor>
      <arglist>(int exitCode=1, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fatal</name>
      <anchorfile>classCorrade_1_1Utility_1_1Fatal.html</anchorfile>
      <anchor>a2b8532632da13ea29fe0aac2f8cc30d5</anchor>
      <arglist>(Flags flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fatal</name>
      <anchorfile>classCorrade_1_1Utility_1_1Fatal.html</anchorfile>
      <anchor>acd4ec7626fa35d43d0d7453d34fe7874</anchor>
      <arglist>(std::ostream *output, int exitCode=1, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Fatal</name>
      <anchorfile>classCorrade_1_1Utility_1_1Fatal.html</anchorfile>
      <anchor>a5960d6dab2e70b5c8244a2d263ee5ab0</anchor>
      <arglist>(std::ostream *output, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Fatal</name>
      <anchorfile>classCorrade_1_1Utility_1_1Fatal.html</anchorfile>
      <anchor>a7a65b11e97ce23312a7c62e9d52cd847</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::FileWatcher</name>
    <filename>classCorrade_1_1Utility_1_1FileWatcher.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Flag</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>aa576b94db5b10b56f68fd3a2804aacf2</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1FileWatcher.html" anchor="aa576b94db5b10b56f68fd3a2804aacf2aa5cef2dc82c773f2ba7e6c30aa1500a5">IgnoreErrors</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1FileWatcher.html" anchor="aa576b94db5b10b56f68fd3a2804aacf2ac0cf3c7dfa4a37da5dad56fe4f9311b7">IgnoreChangeIfEmpty</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Flag &gt;</type>
      <name>Flags</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>ab10e9ec95ad35bcbb414ff1888b1ed39</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileWatcher</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a192754e3dcf10f9f6d5b3db35fac0f65</anchor>
      <arglist>(const std::string &amp;filename, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileWatcher</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a340047f7af7e89e54c3ed55e5aaae479</anchor>
      <arglist>(const FileWatcher &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileWatcher</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a9b793fb93618bf4909373410d1484632</anchor>
      <arglist>(FileWatcher &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>FileWatcher &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a2f7a150a0f6e3db90eb46bbaa9a9fa2f</anchor>
      <arglist>(const FileWatcher &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>FileWatcher &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>af673a37453379168141fe15ab65d9ac3</anchor>
      <arglist>(FileWatcher &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Flags</type>
      <name>flags</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a5eb4ad39135795e81bf963e2c63306f8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a3ed4c9372013ecd8666786ed97efe70d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChanged</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a117f57738edcfc88011cc077a70d60e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>a2f782fd74ce34c2938c8477b456dfbdf</anchor>
      <arglist>(Debug &amp;debug, FileWatcher::Flag value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1FileWatcher.html</anchorfile>
      <anchor>af9ed78fd7c5b24f966e9cf06f3b64a7e</anchor>
      <arglist>(Debug &amp;debug, FileWatcher::Flags value)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1FileWatcher.html" title="Behavior">Utility-FileWatcher-behavior</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::HashDigest</name>
    <filename>classCorrade_1_1Utility_1_1HashDigest.html</filename>
    <templarg>size</templarg>
    <member kind="function">
      <type>constexpr</type>
      <name>HashDigest</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>abb77f485b60ebc66137e58945ed1d27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>HashDigest</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>a3479f9469f58d5042e9b7464c786b5eb</anchor>
      <arglist>(T firstValue, U... nextValues)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>ac5287774e7d16e7666984742b12fbe2c</anchor>
      <arglist>(const HashDigest&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>a0ee8a3c5e1c90eebe4abdc1d1bd143f2</anchor>
      <arglist>(const HashDigest&lt; size &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>hexString</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>a5aa68a903e80ba0af0f67d92c7103121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const char *</type>
      <name>byteArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>a2637d304d04a574d22e7326ecdc688c4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HashDigest&lt; size &gt;</type>
      <name>fromHexString</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>a195da27f46772170af3ef3b647c52361</anchor>
      <arglist>(std::string digest)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const HashDigest&lt; size &gt; &amp;</type>
      <name>fromByteArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>add330139edc8634f4647832bff793b0c</anchor>
      <arglist>(const char *digest)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1HashDigest.html</anchorfile>
      <anchor>a39667d2dab7d417582ae04c76fd8af78</anchor>
      <arglist>(Debug &amp;debug, const HashDigest&lt; size &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Json</name>
    <filename>classCorrade_1_1Utility_1_1Json.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Option</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a7a66494eaea7be4ee66eced39865a4c9</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1Json.html" anchor="a7a66494eaea7be4ee66eced39865a4c9a2c45e663a1fc741b97275d47a7283a19">ParseLiterals</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Json.html" anchor="a7a66494eaea7be4ee66eced39865a4c9a4d203339ebaa5e564467f6533bd1d650">ParseDoubles</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Json.html" anchor="a7a66494eaea7be4ee66eced39865a4c9a77599225cda7e442d11886ca5f2fa416">ParseFloats</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Json.html" anchor="a7a66494eaea7be4ee66eced39865a4c9acdb63966d0543921e9a6888da0352e89">ParseStringKeys</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1Json.html" anchor="a7a66494eaea7be4ee66eced39865a4c9a9a53d49d533d6d0ecdd0b538a7344301">ParseStrings</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Option &gt;</type>
      <name>Options</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>acc8a25e53b452795e87a1fab38b10ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Json</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a1185792e5d71ad802b849c18e0556f71</anchor>
      <arglist>(const Json &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Json</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a2247a49d37b4fd7985a34140036face6</anchor>
      <arglist>(Json &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Json &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ab5db185dd77406ba8c8fc1231e766ce2</anchor>
      <arglist>(const Json &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Json &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ac9d75b0153b8f876553797dd584cecf1</anchor>
      <arglist>(Json &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const JsonToken &gt;</type>
      <name>tokens</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ae2eaea85e6637b3074beebbc4a39bc31</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken &amp;</type>
      <name>root</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a47dd7d8bd4840db78950360323b7de8f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseLiterals</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a8ddd3bdaffe82a5ba03e4ba6cb9d0c5b</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseDoubles</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>adedb52fa3d3ada02ce19e30a59cd01da</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseFloats</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>afb5aa035278e59ba4fa8271ea813f291</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseUnsignedInts</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>acefbf67a87e40a1a92f5be2c7c12f4a8</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseInts</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a320a7415e343450cd7aa614398be1e69</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseUnsignedLongs</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a273e9b1c9f35c8ee77e182abd38844b5</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseLongs</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a4c159cb29a096ae9f349e0b8664b96f9</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseSizes</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a3ff1e9a8ac6b7ef3b1d4b730e84a4235</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseStringKeys</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ac8f20b02f220803b82df9114d3053045</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>parseStrings</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ad72af8e3e01aafcaeafd5bb7d99fd464</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; JsonObjectView &gt;</type>
      <name>parseObject</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a4b35bf7ff815f23e789e98bcb7cc5d69</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; JsonArrayView &gt;</type>
      <name>parseArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>aee70d8eae6765fd5c5751861dbf5eb8c</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::nullptr_t &gt;</type>
      <name>parseNull</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ae5026309ecfdffe69bb9bbcec3403fcd</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; bool &gt;</type>
      <name>parseBool</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a1b591f6c6660f8558228d05b0b7fa629</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; double &gt;</type>
      <name>parseDouble</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a85973f6fd7ab5a03d87e962a8c42446d</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; float &gt;</type>
      <name>parseFloat</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a8d874296d0858b626b9dc7876cf40925</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::uint32_t &gt;</type>
      <name>parseUnsignedInt</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a96d538c8ca9aea99caf2115771fd8365</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::int32_t &gt;</type>
      <name>parseInt</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a6779339c4a672063b5106c5b98e5d32e</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::uint64_t &gt;</type>
      <name>parseUnsignedLong</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ad124022d9346ec33b902974f5193fc9b</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::int64_t &gt;</type>
      <name>parseLong</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a1456083dedd62bab3dc57df54dfadf75</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::size_t &gt;</type>
      <name>parseSize</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>af0931deba73ed3c808c9d44dd96d25ae</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StringView &gt;</type>
      <name>parseString</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a015b9c9f656ba4da493e28fcc1a9d361</anchor>
      <arglist>(const JsonToken &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const bool &gt; &gt;</type>
      <name>parseBoolArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a1a03f68377e2b3128bea507ed1c47fbe</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const double &gt; &gt;</type>
      <name>parseDoubleArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a6000694986a9c26f5de05c4b67adcc56</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const float &gt; &gt;</type>
      <name>parseFloatArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a346741efab8decc6ae581d7233fe630d</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const std::uint32_t &gt; &gt;</type>
      <name>parseUnsignedIntArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>afb2fdba605ac5176ebcbf1b4b3112cec</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const std::int32_t &gt; &gt;</type>
      <name>parseIntArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>ae0286957616247d79cf4ab8d9fa352fe</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const std::uint64_t &gt; &gt;</type>
      <name>parseUnsignedLongArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a388c76aeff5f816bf7f198ee36a397f7</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const std::int64_t &gt; &gt;</type>
      <name>parseLongArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>afaa61d22b29039b2a5248403429e2b2d</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::StridedArrayView1D&lt; const std::size_t &gt; &gt;</type>
      <name>parseSizeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a8730012d1ad47e369e4a78a096fa602a</anchor>
      <arglist>(const JsonToken &amp;token, std::size_t expectedSize=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::Optional&lt; Json &gt;</type>
      <name>fromString</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>aee25c2f360ed1318216414cbd678009f</anchor>
      <arglist>(Containers::StringView string, Options options={}, Containers::StringView filename={}, std::size_t lineOffset=0, std::size_t columnOffset=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::Optional&lt; Json &gt;</type>
      <name>fromString</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a000dd1cb852c54884d66c729c24ca76d</anchor>
      <arglist>(Containers::StringView string, Containers::StringView filename, std::size_t lineOffset=0, std::size_t columnOffset=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Containers::Optional&lt; Json &gt;</type>
      <name>fromFile</name>
      <anchorfile>classCorrade_1_1Utility_1_1Json.html</anchorfile>
      <anchor>a04b1f04f3d296aadb9605072ddcadf3b</anchor>
      <arglist>(Containers::StringView filename, Options options={})</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Usage">Utility-Json-usage</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Selective parsing">Utility-Json-usage-selective-parsing</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Checked selective parsing">Utility-Json-usage-checked-selective-parsing</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Iterating objects and arrays">Utility-Json-usage-iteration</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Direct access to numeric arrays">Utility-Json-usage-direct-array-access</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Tokenization and parsing process">Utility-Json-tokenization</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Json.html" title="Internal representation">Utility-Json-representation</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::JsonArrayItem</name>
    <filename>classCorrade_1_1Utility_1_1JsonArrayItem.html</filename>
    <member kind="typedef">
      <type>std::size_t</type>
      <name>KeyType</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonArrayItem.html</anchorfile>
      <anchor>a132a318c4c4bca46e04edf68340dabe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>index</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonArrayItem.html</anchorfile>
      <anchor>abfc637b90600935a6089cafa466b0d69</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken &amp;</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonArrayItem.html</anchorfile>
      <anchor>a861da4b2e8321aa03a0f11fc2f2d4196</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const JsonToken &amp;</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonArrayItem.html</anchorfile>
      <anchor>af1ceaa84eac68f2da02fffc3600b012f</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::JsonIterator</name>
    <filename>classCorrade_1_1Utility_1_1JsonIterator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonIterator.html</anchorfile>
      <anchor>aa7a12966f9c6d9b53fd479f9ce73e599</anchor>
      <arglist>(const JsonIterator&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonIterator.html</anchorfile>
      <anchor>afca51455b31ea3b88578e9b0041e6767</anchor>
      <arglist>(const JsonIterator&lt; T &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>JsonIterator&lt; T &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonIterator.html</anchorfile>
      <anchor>a4c949c12d2a8f546a2afedda939a1887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonIterator.html</anchorfile>
      <anchor>ab7f7177bee88322d0ca35745277876e5</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::JsonObjectItem</name>
    <filename>classCorrade_1_1Utility_1_1JsonObjectItem.html</filename>
    <member kind="typedef">
      <type>Containers::StringView</type>
      <name>KeyType</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonObjectItem.html</anchorfile>
      <anchor>a066bfaa49720e4a57e0de8b5a05ba950</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>key</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonObjectItem.html</anchorfile>
      <anchor>a72183c2a5d3a351aaf2145414f9633fb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken &amp;</type>
      <name>value</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonObjectItem.html</anchorfile>
      <anchor>a69c68d1bb052e1587c2520dd6d1e27f9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const JsonToken &amp;</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonObjectItem.html</anchorfile>
      <anchor>a7440b337a12a0d4f75b1f35965a7d0f6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::JsonToken</name>
    <filename>classCorrade_1_1Utility_1_1JsonToken.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a69cb2537daae2c3c8187522332f5c75e</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a69cb2537daae2c3c8187522332f5c75ea497031794414a552435f90151ac3b54b">Object</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a69cb2537daae2c3c8187522332f5c75ea4410ec34d9e6c1a68100ca0ce033fb17">Array</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a69cb2537daae2c3c8187522332f5c75eabbb93ef26e3c101ff11cdd21cab08a94">Null</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a69cb2537daae2c3c8187522332f5c75eac26f15e86e3de4c398a8273272aba034">Bool</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a69cb2537daae2c3c8187522332f5c75eab2ee912b91d69b435159c7c3f6df7f5f">Number</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a69cb2537daae2c3c8187522332f5c75ea27118326006d3829667a400ad23d5d98">String</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ParsedType</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a3e2e7686df9c548f18d4ee80633d078d</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da6adf97f83acf6453d4a6a4b1070f3754">None</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078dad909d38d705ce75386dd86e611a82f5b">Double</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da22ae0e2b89e5e3d477f988cc36d3272b">Float</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078dac93cff91b6b9a57fa32bbe1863150070">UnsignedInt</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da1686a6c336b71b36d77354cea19a8b52">Int</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da0c72cf9e88a9782dbad0fde761ae9352">UnsignedLong</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da8394f0347c184cf156ac5924dccb773b">Long</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da6f6cb72d544962fa333e2e34ce64f719">Size</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonToken.html" anchor="a3e2e7686df9c548f18d4ee80633d078da6311ae17c1ee52b36e68aaf4ad066387">Other</enumvalue>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>data</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a21ee40b106019956c1e25884ac2061b9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a49765675e268a5f615d907d92c2a4132</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParsed</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>ad20e8f988ae7035a06ccc3f17a67a390</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ParsedType</type>
      <name>parsedType</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>aa7adee686e1b024d03bd4e784c975399</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>childCount</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>ab63c149eb74df5f5be95102c02b8a776</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const JsonToken &gt;</type>
      <name>children</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a77e0775453548ee31c27369c0b9ec7db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken *</type>
      <name>firstChild</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a32478c8895e9f5660e8a57661c5bd0be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken *</type>
      <name>next</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>aa9ff593bfab4bd436021f3f3df60072e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken *</type>
      <name>parent</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>aa74777fe4264b7d7587ebe4e40569fc0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonObjectView</type>
      <name>asObject</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a55323e78070615900beb9789a950d523</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonArrayView</type>
      <name>asArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a22ffcd4170ec060b8058bfa883fb2364</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken *</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>ad75c1bddfb48babc4031f667502e92d0</anchor>
      <arglist>(Containers::StringView key) const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken *</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>aabe883898f62122497e87554d67431a8</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>afe17c3579de0cb285c92f216884cd28e</anchor>
      <arglist>(Containers::StringView key) const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a8399c1b69737c7ff0992fa3b3bd32a6a</anchor>
      <arglist>(std::size_t index) const</arglist>
    </member>
    <member kind="function">
      <type>std::nullptr_t</type>
      <name>asNull</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a3b9c480b4f1d28666fccde232c92b021</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>asBool</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a8fd55666d7b8cd32d99a95a0db83831b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>asDouble</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a61a160975c99552e4607d3df21ddd0ae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>asFloat</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>ab9fe509985bc99f32e53e103bee8e8e6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint32_t</type>
      <name>asUnsignedInt</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>aaf46e5b0464d44aec2112dab09a2b30d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int32_t</type>
      <name>asInt</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>ae13377880ea5d2301801d1635651824f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::uint64_t</type>
      <name>asUnsignedLong</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a0f6a48a9f1780da4020eb783454e56f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::int64_t</type>
      <name>asLong</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a8a05e538e24ce42492b4c792e257c259</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>asSize</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a99bbdb9bb09e589e10b5fab3890bd1c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>asString</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a77fda35e50b39a05ff74e4f8f8f2f609</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const bool &gt;</type>
      <name>asBoolArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a28ee5bba321bb17bf4655daee21de760</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const double &gt;</type>
      <name>asDoubleArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a52a958fa3f1c84d7a896fea57ff22a05</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const float &gt;</type>
      <name>asFloatArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>ab0aeb26b5fe66652c95f6ab465718651</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const std::uint32_t &gt;</type>
      <name>asUnsignedIntArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a9c8f3f87136f79b7e2195c6fdfba9a48</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const std::int32_t &gt;</type>
      <name>asIntArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a183a5b18a191b6a28640f12a34f9de67</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const std::uint64_t &gt;</type>
      <name>asUnsignedLongArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a2cf66d589d938d186bd9eb5a988d5e09</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const std::int64_t &gt;</type>
      <name>asLongArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a26ca60872be40b311a0c36d7a8c8cb37</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StridedArrayView1D&lt; const std::size_t &gt;</type>
      <name>asSizeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a77f599c3969c852db607dcb575656871</anchor>
      <arglist>(std::size_t expectedSize=0) const</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a33e6619c89a68641833a2b03bbe48c77</anchor>
      <arglist>(Debug &amp;debug, JsonToken::Type value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonToken.html</anchorfile>
      <anchor>a97e98af8165713008d697b84053284d5</anchor>
      <arglist>(Debug &amp;debug, JsonToken::ParsedType value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::JsonView</name>
    <filename>classCorrade_1_1Utility_1_1JsonView.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>JsonIterator&lt; T &gt;</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonView.html</anchorfile>
      <anchor>ab0dcf03a46aa4eee8c43118fbb048be5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonIterator&lt; T &gt;</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonView.html</anchorfile>
      <anchor>a3fd1186d9ce10a0455ca0b0078fd5cfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonIterator&lt; T &gt;</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonView.html</anchorfile>
      <anchor>a62d658c378328087c9d296e400612148</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonIterator&lt; T &gt;</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonView.html</anchorfile>
      <anchor>a2556020b97702f25973ed940471cbf4e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken *</type>
      <name>find</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonView.html</anchorfile>
      <anchor>a73cbe2133e71c8c8f12efe94f1fd9a1a</anchor>
      <arglist>(typename T::KeyType key) const</arglist>
    </member>
    <member kind="function">
      <type>const JsonToken &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonView.html</anchorfile>
      <anchor>abff442dc973746a3508b30cadea61255</anchor>
      <arglist>(typename T::KeyType key) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::JsonWriter</name>
    <filename>classCorrade_1_1Utility_1_1JsonWriter.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Option</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a9be93c1471b473fbc35837f7a838ec20</anchor>
      <arglist></arglist>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonWriter.html" anchor="a9be93c1471b473fbc35837f7a838ec20aa212b19ef5f2fb30acf92e6cbccc1f2d">Wrap</enumvalue>
      <enumvalue file="classCorrade_1_1Utility_1_1JsonWriter.html" anchor="a9be93c1471b473fbc35837f7a838ec20a4913d902408d9956f85442cd731863d6">TypographicalSpace</enumvalue>
    </member>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; Option &gt;</type>
      <name>Options</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>aa76b8debc8be8578f8e8687e1008472c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonWriter</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a624a1d0a87da823cb9cb137f7ba0982a</anchor>
      <arglist>(Options options, std::uint32_t indentation, std::uint32_t initialIndentation=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonWriter</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>ae17044986ed3b99ca7a60e6602f078a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonWriter</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a76a7db77f7406b70914c2a77cb1d99bf</anchor>
      <arglist>(const JsonWriter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JsonWriter</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>aa843d9613aabd5a382bb972b1758d819</anchor>
      <arglist>(JsonWriter &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JsonWriter</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a345ef1eb9402eb440049a6f0a3734ef1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>ae037a4946e325db2dfc68e35e3918b07</anchor>
      <arglist>(const JsonWriter &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>ab3007c3ab534fdc49911b017a9fdee95</anchor>
      <arglist>(JsonWriter &amp;&amp;) noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a6c8829d121a685db0f80cb8ff2a602f2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>size</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a66ce85e42633924c38479a80f15206db</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>beginObject</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a2a8009053c8b31f512213035a446c55d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>endObject</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>af27e09a74185d7f2b71015506b4017a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>beginArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a1904ef19ad8f4d329b21686a486cbe06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>endArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>ad35f5e37ab0ac4df3cf25fe18334a54f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::ScopeGuard</type>
      <name>beginObjectScope</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a0e4b34280600eca46e8e48d22688a31e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::ScopeGuard</type>
      <name>beginArrayScope</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>ad21629814f2c12fd962112ebf561407c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>currentArraySize</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a0a346e31dcb08253a4ea4f3def76ab94</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeKey</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>adb45a29f86b2811f617cd4a5bef99695</anchor>
      <arglist>(Containers::StringView key)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>ad39e54778f11b3539fea14087b1e0288</anchor>
      <arglist>(std::nullptr_t)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeValue</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a895c48c814cf8bf04a77a0fb415bf7e6</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a5083eda39ecf9c7e85fd6a00cb3e9ee1</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a31557c013f2278f49dcb69da30d6e27e</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a4b54963ffb70a98505f655c98bf6df46</anchor>
      <arglist>(std::uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>aa2c66e2b6f433cd7ca142aa46e270a96</anchor>
      <arglist>(std::int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a6c9519e2ede572c0174d4ff7c37f87d0</anchor>
      <arglist>(std::uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a9a4d34c16a04a004e72a5d9a5cb1cccc</anchor>
      <arglist>(std::int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>write</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a83e454aaf3b898d961b720c4aed4b63e</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a53b9e02d5a4e50e12b99bcf607640233</anchor>
      <arglist>(Containers::StridedArrayView1D&lt; const float &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a7f783366d73062d35e5a8059e8f01a0b</anchor>
      <arglist>(std::initializer_list&lt; float &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a4370c478540e6a07b51fa4d33b3523b9</anchor>
      <arglist>(Containers::StridedArrayView1D&lt; const double &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a6b39aa65a42697f5dc5cad2ef464e13d</anchor>
      <arglist>(std::initializer_list&lt; double &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a1a12c3ce854e2a1b1815dfc7914bab87</anchor>
      <arglist>(Containers::StridedArrayView1D&lt; const std::uint32_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a3042fa7f8203aa5a0ebe890afa955c43</anchor>
      <arglist>(std::initializer_list&lt; std::uint32_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a4c05f2a2d169c0baaec46ce463625562</anchor>
      <arglist>(Containers::StridedArrayView1D&lt; const std::int32_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>aa3e750d4229450daa4732ccb470e7a26</anchor>
      <arglist>(std::initializer_list&lt; std::int32_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a59a1a77d4d3cc1511904eb9ea198936f</anchor>
      <arglist>(Containers::StridedArrayView1D&lt; const std::uint64_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>afae48ff8230f6a747d4e1ace42f043eb</anchor>
      <arglist>(std::initializer_list&lt; std::uint64_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>adb8cb66215550226adb19ef8170a3a27</anchor>
      <arglist>(Containers::StridedArrayView1D&lt; const std::int64_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeArray</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>af4da2b243d41cc6b3ca054b4050f405c</anchor>
      <arglist>(std::initializer_list&lt; std::int64_t &gt; values, std::uint32_t wrapAfter=0)</arglist>
    </member>
    <member kind="function">
      <type>JsonWriter &amp;</type>
      <name>writeJson</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>aeb16aafc2eca350d81eab379981460d6</anchor>
      <arglist>(Containers::StringView json)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>toString</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a8b2486b2256c023483e2a8da00f3e3d5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toFile</name>
      <anchorfile>classCorrade_1_1Utility_1_1JsonWriter.html</anchorfile>
      <anchor>a43e11dcd39e46c0dc2836463b2545c93</anchor>
      <arglist>(Containers::StringView filename) const</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1JsonWriter.html" title="Usage">Utility-JsonWriter-usage</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1JsonWriter.html" title="Array and object scopes">Utility-JsonWriter-usage-object-array-scope</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1JsonWriter.html" title="Writing numeric arrays">Utility-JsonWriter-usage-write-array</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1JsonWriter.html" title="Combining multiple writers together">Utility-JsonWriter-usage-combining-writers</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::MurmurHash2</name>
    <filename>classCorrade_1_1Utility_1_1MurmurHash2.html</filename>
    <base>AbstractHash&lt; sizeof(std::size_t)&gt;</base>
    <member kind="function">
      <type>constexpr</type>
      <name>MurmurHash2</name>
      <anchorfile>classCorrade_1_1Utility_1_1MurmurHash2.html</anchorfile>
      <anchor>a7b512789e9557ebc5d04429af1b29c85</anchor>
      <arglist>(std::size_t seed=0)</arglist>
    </member>
    <member kind="function">
      <type>Digest</type>
      <name>operator()</name>
      <anchorfile>classCorrade_1_1Utility_1_1MurmurHash2.html</anchorfile>
      <anchor>a44f686e3054c52d362958e540279331b</anchor>
      <arglist>(const std::string &amp;data) const</arglist>
    </member>
    <member kind="function">
      <type>Digest</type>
      <name>operator()</name>
      <anchorfile>classCorrade_1_1Utility_1_1MurmurHash2.html</anchorfile>
      <anchor>a32b959a6e787dacceb02df824ed8925c</anchor>
      <arglist>(const char(&amp;data)[size]) const</arglist>
    </member>
    <member kind="function">
      <type>Digest</type>
      <name>operator()</name>
      <anchorfile>classCorrade_1_1Utility_1_1MurmurHash2.html</anchorfile>
      <anchor>a2519c23d08fc9f961a16b91ad84df152</anchor>
      <arglist>(const char *data, std::size_t size) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Digest</type>
      <name>digest</name>
      <anchorfile>classCorrade_1_1Utility_1_1MurmurHash2.html</anchorfile>
      <anchor>abca6f6111dc7e38921fc15ba22ff885b</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Path::MapDeleter</name>
    <filename>classCorrade_1_1Utility_1_1Path_1_1MapDeleter.html</filename>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Resource</name>
    <filename>classCorrade_1_1Utility_1_1Resource.html</filename>
    <member kind="function">
      <type></type>
      <name>Resource</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>ae07c4dde61a59639036a337cd521985d</anchor>
      <arglist>(Containers::StringView group)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>list</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>ae2bed3ef39bbb64038608927cf2bff1e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Containers::ArrayView&lt; const char &gt;</type>
      <name>getRaw</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>a7964b6ffb97011dc58d202f475974192</anchor>
      <arglist>(Containers::StringView filename) const</arglist>
    </member>
    <member kind="function">
      <type>Containers::StringView</type>
      <name>getString</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>a79875f3d15df8eb721c453f43a148c2d</anchor>
      <arglist>(Containers::StringView filename) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>a5896c83252c7311ffccc4c6b49991fcf</anchor>
      <arglist>(const std::string &amp;filename) const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>overrideGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>a1d5f653cd767fe9a7ed213d2f5f3c31a</anchor>
      <arglist>(Containers::StringView group, Containers::StringView configurationFile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasGroup</name>
      <anchorfile>classCorrade_1_1Utility_1_1Resource.html</anchorfile>
      <anchor>a29d52226c09cd0b9f1dc4b8e16b22a23</anchor>
      <arglist>(Containers::StringView group)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Resource compilation">Utility-Resource-compilation</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Using CMake">Utility-Resource-compilation-cmake</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Compiling the resources manually">Utility-Resource-compilation-manual</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Accessing the resources">Utility-Resource-usage</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Resources in static libraries">Utility-Resource-usage-static</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Overriding compiled-in resources">Utility-Resource-usage-override</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Memory access and operation complexity">Utility-Resource-access</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Resource.html" title="Thread safety">Utility-Resource-multithreading</docanchor>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Sha1</name>
    <filename>classCorrade_1_1Utility_1_1Sha1.html</filename>
    <base>AbstractHash&lt; 20 &gt;</base>
    <member kind="function">
      <type>Sha1 &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Sha1.html</anchorfile>
      <anchor>a6f4e8b675e65afebfcb4b6efe1abe032</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>Sha1 &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Sha1.html</anchorfile>
      <anchor>a81870d5141f8001cf9f66d7fc719aabe</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>Sha1 &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Utility_1_1Sha1.html</anchorfile>
      <anchor>aaebfbbb725725bab2f2274ae7cf61bc1</anchor>
      <arglist>(const char *)=delete</arglist>
    </member>
    <member kind="function">
      <type>Digest</type>
      <name>digest</name>
      <anchorfile>classCorrade_1_1Utility_1_1Sha1.html</anchorfile>
      <anchor>a5d45fce92a6b2e3394c8a5531150a401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Digest</type>
      <name>digest</name>
      <anchorfile>classCorrade_1_1Utility_1_1Sha1.html</anchorfile>
      <anchor>a58ae2de7f39775cb7fb3594b80e98be5</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Tweakable</name>
    <filename>classCorrade_1_1Utility_1_1Tweakable.html</filename>
    <member kind="function">
      <type></type>
      <name>Tweakable</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a584fb174e821bb3abc138a6303f65c54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tweakable</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a634be6f49473281bcbf832dbe3fa3f02</anchor>
      <arglist>(const Tweakable &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tweakable</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a762069362097d5d23ff4fdbe5d5044ed</anchor>
      <arglist>(Tweakable &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Tweakable &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>aaf42ad7adaa13aad54ca521edf5b9f0b</anchor>
      <arglist>(const Tweakable &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Tweakable &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a37116ed525e0ba6f63b2f55dcd1f5432</anchor>
      <arglist>(Tweakable &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tweakable</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>add3ffd194ca3b491617c70f87554d21f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a3bc8cadf88a529a1c4068d9588977551</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>afd49c21bb2004744da97f93dfd5fdb05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>ae5d1ab55b5ecb61fbb534e25ef780e7f</anchor>
      <arglist>(const std::string &amp;prefix, const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>TweakableState</type>
      <name>update</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a7fb3f46459272592d8d8c1e22b9d5a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scope</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>ab169345f695835b7dd3c8d97892d7528</anchor>
      <arglist>(void(*lambda)(T &amp;), T &amp;userData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scope</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a5472dd6f31194bc3a422b2b73f38f9be</anchor>
      <arglist>(void(*lambda)(void *), void *userData=nullptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Tweakable &amp;</type>
      <name>instance</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a296853600068d0d9b836d007e6155e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CORRADE_TWEAKABLE</name>
      <anchorfile>classCorrade_1_1Utility_1_1Tweakable.html</anchorfile>
      <anchor>a1db8193e4bf2fd84d96b54832ec55b64</anchor>
      <arglist>(...)</arglist>
    </member>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="Basic usage">Utility-Tweakable-usage</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="Using scopes">Utility-Tweakable-usage-scope</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="Disabling tweakable values">Utility-Tweakable-usage-disabling</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="Limitations">Utility-Tweakable-limitations</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="How it works">Utility-Tweakable-how-it-works</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="Extending for custom types">Utility-Tweakable-extending</docanchor>
    <docanchor file="classCorrade_1_1Utility_1_1Tweakable.html" title="References">Utility-Tweakable-references</docanchor>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser.html</filename>
    <templarg></templarg>
    <docanchor file="structCorrade_1_1Utility_1_1TweakableParser.html" title="Implementing support for custom literals">TweakableParser-subclassing</docanchor>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; bool &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, bool &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01bool_01_4.html</anchorfile>
      <anchor>ab680c85448247291127a3dd1f25b174a</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; char &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01char_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, char &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01char_01_4.html</anchorfile>
      <anchor>a979b39ec0edab899b79636c3d4ac43a0</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; double &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, double &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01double_01_4.html</anchorfile>
      <anchor>af390977724e4090d70cea46bb67983a5</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; float &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, float &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01float_01_4.html</anchorfile>
      <anchor>a1e473a91f25ba9c70e328879a3ec8d57</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; int &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, int &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01int_01_4.html</anchorfile>
      <anchor>afc601bf7e71cd7c2ca13f7426f5b77bd</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, long &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01long_01_4.html</anchorfile>
      <anchor>a5d2b6f9bd459a01f94ec75ec969c239b</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; long double &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01long_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, long double &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01long_01double_01_4.html</anchorfile>
      <anchor>a9a6c6d7cb187970f89cd7e3bfff59a24</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; long long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01long_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, long long &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01long_01long_01_4.html</anchorfile>
      <anchor>a260473a117208403b2ded65b5910851b</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; unsigned int &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, unsigned int &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>adba1ca775c7c02ec184bbde754de30c9</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; unsigned long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01unsigned_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, unsigned long &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a9632c0f8c506fe6c1c972df0a6c7e497</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::Utility::TweakableParser&lt; unsigned long long &gt;</name>
    <filename>structCorrade_1_1Utility_1_1TweakableParser_3_01unsigned_01long_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::pair&lt; TweakableState, unsigned long long &gt;</type>
      <name>parse</name>
      <anchorfile>structCorrade_1_1Utility_1_1TweakableParser_3_01unsigned_01long_01long_01_4.html</anchorfile>
      <anchor>ae6edad6362556ab54fadedb5e63cf6e5</anchor>
      <arglist>(Containers::StringView value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Corrade::Utility::Warning</name>
    <filename>classCorrade_1_1Utility_1_1Warning.html</filename>
    <base>Corrade::Utility::Debug</base>
    <member kind="function">
      <type></type>
      <name>Warning</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a6afe64c565a1ebae35228b840e63c428</anchor>
      <arglist>(Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Warning</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a92f3ddd2c7e6caed6b6967d0f72c001b</anchor>
      <arglist>(std::ostream *output, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Warning</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a742946b1583b9e147a1b502c647fc1ec</anchor>
      <arglist>(const Warning &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Warning</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>accd8b00e770a072a122c4ffbc7b2373c</anchor>
      <arglist>(Warning &amp;&amp;)=default</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Warning</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a66833257bc5b0d126add892b19091c56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Warning &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a10bd7464c247b4df94adb4ec6ab26c6e</anchor>
      <arglist>(const Warning &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Warning &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>adf0d29c428d7f4a094debd445a5a1516</anchor>
      <arglist>(Warning &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream *</type>
      <name>defaultOutput</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a8c7b35fb475eb97145b829cb004f04b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream *</type>
      <name>output</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>addb50954675d97ee3c7139aa5c77e285</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTty</name>
      <anchorfile>classCorrade_1_1Utility_1_1Warning.html</anchorfile>
      <anchor>a8fe1ea71e4609d35f88345f1d411401a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Corrade::ValueInitT</name>
    <filename>structCorrade_1_1ValueInitT.html</filename>
  </compound>
  <compound kind="class">
    <name>EnumSet&lt; InternalFlag &gt;</name>
    <filename>classCorrade_1_1Containers_1_1EnumSet.html</filename>
    <member kind="typedef">
      <type>InternalFlag</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>af79d534425b3439095c579944858bb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::underlying_type&lt; InternalFlag &gt;::type</type>
      <name>UnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>ae98013f13d62ca0bac69d632905846c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FullValue</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a6f5b36b75bf349ec1f8f32cc07826039a9e456595199d05472bf7927d329639b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>EnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aa960627a42a60a832d193cd6b9a1d9a5</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>EnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a0c96c4d21532c6e3d4b314af039902e7</anchor>
      <arglist>(InternalFlag value) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnumSet</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aa91c2985f687a1ef398e7c06d7c3bb93</anchor>
      <arglist>(Corrade::NoInitT)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a73828ac4e6d6125500733a71eccd0d94</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a8ae1892b96c6e781165475388e4cbc53</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aeb270daa9a8afb3a80e57ef2cb2f8314</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a3ac067add1634645e3d64803e5751459</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt;</type>
      <name>operator|</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a89503e71c491ed8fe7bb9f86f48309c4</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; &amp;</type>
      <name>operator|=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a0570b5800f24317a1b52b27d878b9bfa</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt;</type>
      <name>operator&amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a90a8b6b6dad28a4f4dcc69ee1a761def</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a882bec7925638c92d8491ce07108f398</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt;</type>
      <name>operator^</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a8b8c4ac2173541eb7572d66b64931512</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other) const</arglist>
    </member>
    <member kind="function">
      <type>EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; &amp;</type>
      <name>operator^=</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>afc5caf6f9260aedc01b5d532e4143e36</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>constexpr EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt;</type>
      <name>operator~</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>ae9d66612bd81553d5e9cab2dd00235ea</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>aaa72f9d5d7ab6e51d66d3698206e7cc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator UnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a49d01415abacaea3fd08be0a18accc54</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; InternalFlag &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a74e7890c172dce7a2a5b95c037d55996</anchor>
      <arglist>(InternalFlag value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; InternalFlag &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a9ac3a9dbe8d6b8bc0422aaeaf11bfdf8</anchor>
      <arglist>(EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>enumSetDebugOutput</name>
      <anchorfile>classCorrade_1_1Containers_1_1EnumSet.html</anchorfile>
      <anchor>a12c4ea794fa62c56969b1311e2b5c21b</anchor>
      <arglist>(Utility::Debug &amp;debug, EnumSet&lt; InternalFlag, typename std::underlying_type&lt; InternalFlag &gt;::type(~0) &gt; value, const char *empty, std::initializer_list&lt; InternalFlag &gt; enums)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LinkedList&lt; Derived &gt;</name>
    <filename>classCorrade_1_1Containers_1_1LinkedList.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>aef8b2c6fac22b76d6510b030de0bd7ff</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ae30e2ad2d45ed813d5b6517da99c2c45</anchor>
      <arglist>(const LinkedList&lt; Derived &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a20a700a56461d5b8a6892ca147384609</anchor>
      <arglist>(LinkedList&lt; Derived &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinkedList</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ab9bdae1a80b28b53f4b70edd139c2741</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LinkedList&lt; Derived &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a93fe27abbdca0a2bdfffbb0c1c9e52b2</anchor>
      <arglist>(const LinkedList&lt; Derived &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>LinkedList&lt; Derived &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a77a0c2633a85000db72a6acf84cfde45</anchor>
      <arglist>(LinkedList&lt; Derived &gt; &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Derived *</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a9d49452ca29d53f6313285e8426ec13a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Derived *</type>
      <name>first</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ae7f1f5924bd7c08a2533a00c05c4276e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Derived *</type>
      <name>last</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>abdb5e04bfec6bde39d8a20dd8d4d4674</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const Derived *</type>
      <name>last</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a3223de2b9ad136253a00b0c3707d3194</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isEmpty</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a15cb52dca5c7c77b7a33096b0da57280</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>ab85682283d7ef74f20a2c59a3153f9a1</anchor>
      <arglist>(Derived *item, Derived *before=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cut</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a43d45cf92d3f88f450047b773e5fe157</anchor>
      <arglist>(Derived *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>move</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a39ec134725e0b19f1d9bdfcd5e807973</anchor>
      <arglist>(Derived *item, Derived *before)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a5d42a873dd83fbc0cc0084209536f9be</anchor>
      <arglist>(Derived *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classCorrade_1_1Containers_1_1LinkedList.html</anchorfile>
      <anchor>a83550122caae33c90d11d45d0b747184</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Pointer&lt; Data &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Pointer.html</filename>
    <member kind="typedef">
      <type>Data</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1ac189c3d3b9c29eb10a2b41063d9cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>adfca41b457c65ad6f7a20e4da25a551d</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6961c1d838ce004acce16785ec434c91</anchor>
      <arglist>(Data *pointer) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6cf6dc2d19c4f8fbfea21e3cace0015d</anchor>
      <arglist>(Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a30e35c7e582758f8814c2f6b6801dce8</anchor>
      <arglist>(Pointer&lt; U &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a4e598da5a54d78e0f6e3802a3678ccde</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab3fc3f6972074b386bf623601dfcbebd</anchor>
      <arglist>(const Pointer&lt; Data &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a7cf60434462a0199b5bda1ecf4f80c01</anchor>
      <arglist>(Pointer&lt; Data &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Data &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af50cfd42d6d0cbdd0909f66b7d99c8db</anchor>
      <arglist>(const Pointer&lt; Data &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Data &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac18ee6f61f98e309e478725c61079a75</anchor>
      <arglist>(Pointer&lt; Data &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a26d98d69b279f2618edf0785882e01e5</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a5b3089b6c7e3e57b3ebc712b3a1b65a5</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aded8d11d6271891c1fa62572e59bc6dd</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a3e4509891d92dde6088f5a73b0881a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6f4df0db94fe387105c56d0691a25ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Data *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a341521cc065c95861ed82d85e26a33d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Data *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a98b642e46b44b5a4d10a36e216470783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Data *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a52a73243270252c6f91851b377958e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Data *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae225b88b0d07991e9fff931bfab2f5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Data &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1bd4dcdbb9ad21123d874c69b0b49314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Data &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a291813c6366b015f9b5736bae9d6d4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac4150a4c7336f33d3e0bdbec832154ab</anchor>
      <arglist>(Data *pointer=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>Data &amp;</type>
      <name>emplace</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76f18ffe7324c11f56cf073ca2737717</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Data *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aaa8b2ed64ca7afb46c614e7aea7893a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af9b9640eac6d17650d0cc5111c4a19b6</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; Data &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a141814794f6072316c8fa72afc8c7f76</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; Data &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Data &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76b1a48222910763fdc5046b6625090e</anchor>
      <arglist>(Data *pointer)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9fe9dd514c016cdbff0fddf90ae1250f</anchor>
      <arglist>(Data &amp;&amp;other) -&gt; decltype(Implementation::DeducedPointerConverter&lt; Data &gt;::from(Utility::move(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Data &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab287dc10fa2591e662d9a9ea611a3dad</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; U &gt;</type>
      <name>pointerCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae1b70d106c3a13b76188c0f7f956cb0c</anchor>
      <arglist>(Pointer&lt; Data &gt; &amp;&amp;pointer)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9c784a034b942686ae70ce8f5b237e26</anchor>
      <arglist>(Utility::Debug &amp;debug, const Pointer&lt; Data &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Pointer&lt; State &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Pointer.html</filename>
    <member kind="typedef">
      <type>State</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1ac189c3d3b9c29eb10a2b41063d9cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>adfca41b457c65ad6f7a20e4da25a551d</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6961c1d838ce004acce16785ec434c91</anchor>
      <arglist>(State *pointer) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6cf6dc2d19c4f8fbfea21e3cace0015d</anchor>
      <arglist>(Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a30e35c7e582758f8814c2f6b6801dce8</anchor>
      <arglist>(Pointer&lt; U &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a4e598da5a54d78e0f6e3802a3678ccde</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab3fc3f6972074b386bf623601dfcbebd</anchor>
      <arglist>(const Pointer&lt; State &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a7cf60434462a0199b5bda1ecf4f80c01</anchor>
      <arglist>(Pointer&lt; State &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; State &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af50cfd42d6d0cbdd0909f66b7d99c8db</anchor>
      <arglist>(const Pointer&lt; State &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; State &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac18ee6f61f98e309e478725c61079a75</anchor>
      <arglist>(Pointer&lt; State &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a26d98d69b279f2618edf0785882e01e5</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a5b3089b6c7e3e57b3ebc712b3a1b65a5</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aded8d11d6271891c1fa62572e59bc6dd</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a3e4509891d92dde6088f5a73b0881a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6f4df0db94fe387105c56d0691a25ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a341521cc065c95861ed82d85e26a33d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const State *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a98b642e46b44b5a4d10a36e216470783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a52a73243270252c6f91851b377958e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const State *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae225b88b0d07991e9fff931bfab2f5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>State &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1bd4dcdbb9ad21123d874c69b0b49314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const State &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a291813c6366b015f9b5736bae9d6d4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac4150a4c7336f33d3e0bdbec832154ab</anchor>
      <arglist>(State *pointer=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>State &amp;</type>
      <name>emplace</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76f18ffe7324c11f56cf073ca2737717</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>State *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aaa8b2ed64ca7afb46c614e7aea7893a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af9b9640eac6d17650d0cc5111c4a19b6</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; State &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a141814794f6072316c8fa72afc8c7f76</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; State &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; State &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76b1a48222910763fdc5046b6625090e</anchor>
      <arglist>(State *pointer)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9fe9dd514c016cdbff0fddf90ae1250f</anchor>
      <arglist>(State &amp;&amp;other) -&gt; decltype(Implementation::DeducedPointerConverter&lt; State &gt;::from(Utility::move(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; State &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab287dc10fa2591e662d9a9ea611a3dad</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; U &gt;</type>
      <name>pointerCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae1b70d106c3a13b76188c0f7f956cb0c</anchor>
      <arglist>(Pointer&lt; State &gt; &amp;&amp;pointer)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9c784a034b942686ae70ce8f5b237e26</anchor>
      <arglist>(Utility::Debug &amp;debug, const Pointer&lt; State &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Pointer&lt; TesterState &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Pointer.html</filename>
    <member kind="typedef">
      <type>TesterState</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1ac189c3d3b9c29eb10a2b41063d9cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>adfca41b457c65ad6f7a20e4da25a551d</anchor>
      <arglist>(std::nullptr_t=nullptr) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6961c1d838ce004acce16785ec434c91</anchor>
      <arglist>(TesterState *pointer) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6cf6dc2d19c4f8fbfea21e3cace0015d</anchor>
      <arglist>(Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a30e35c7e582758f8814c2f6b6801dce8</anchor>
      <arglist>(Pointer&lt; U &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a4e598da5a54d78e0f6e3802a3678ccde</anchor>
      <arglist>(U &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab3fc3f6972074b386bf623601dfcbebd</anchor>
      <arglist>(const Pointer&lt; TesterState &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a7cf60434462a0199b5bda1ecf4f80c01</anchor>
      <arglist>(Pointer&lt; TesterState &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TesterState &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af50cfd42d6d0cbdd0909f66b7d99c8db</anchor>
      <arglist>(const Pointer&lt; TesterState &gt; &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TesterState &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac18ee6f61f98e309e478725c61079a75</anchor>
      <arglist>(Pointer&lt; TesterState &gt; &amp;&amp;other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a26d98d69b279f2618edf0785882e01e5</anchor>
      <arglist>() &amp;&amp;</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a5b3089b6c7e3e57b3ebc712b3a1b65a5</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aded8d11d6271891c1fa62572e59bc6dd</anchor>
      <arglist>(std::nullptr_t) const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a3e4509891d92dde6088f5a73b0881a64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a6f4df0db94fe387105c56d0691a25ac4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TesterState *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a341521cc065c95861ed82d85e26a33d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TesterState *</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a98b642e46b44b5a4d10a36e216470783</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TesterState *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a52a73243270252c6f91851b377958e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TesterState *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae225b88b0d07991e9fff931bfab2f5d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TesterState &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a1bd4dcdbb9ad21123d874c69b0b49314</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TesterState &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a291813c6366b015f9b5736bae9d6d4d2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ac4150a4c7336f33d3e0bdbec832154ab</anchor>
      <arglist>(TesterState *pointer=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>TesterState &amp;</type>
      <name>emplace</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76f18ffe7324c11f56cf073ca2737717</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>TesterState *</type>
      <name>release</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>aaa8b2ed64ca7afb46c614e7aea7893a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>af9b9640eac6d17650d0cc5111c4a19b6</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; TesterState &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a141814794f6072316c8fa72afc8c7f76</anchor>
      <arglist>(std::nullptr_t, const Pointer&lt; TesterState &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TesterState &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a76b1a48222910763fdc5046b6625090e</anchor>
      <arglist>(TesterState *pointer)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9fe9dd514c016cdbff0fddf90ae1250f</anchor>
      <arglist>(TesterState &amp;&amp;other) -&gt; decltype(Implementation::DeducedPointerConverter&lt; TesterState &gt;::from(Utility::move(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TesterState &gt;</type>
      <name>pointer</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ab287dc10fa2591e662d9a9ea611a3dad</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; U &gt;</type>
      <name>pointerCast</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>ae1b70d106c3a13b76188c0f7f956cb0c</anchor>
      <arglist>(Pointer&lt; TesterState &gt; &amp;&amp;pointer)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Pointer.html</anchorfile>
      <anchor>a9c784a034b942686ae70ce8f5b237e26</anchor>
      <arglist>(Utility::Debug &amp;debug, const Pointer&lt; TesterState &gt; &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Reference&lt; Corrade::Interconnect::Emitter &gt;</name>
    <filename>classCorrade_1_1Containers_1_1Reference.html</filename>
    <member kind="typedef">
      <type>Corrade::Interconnect::Emitter</type>
      <name>Type</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>aca4f1cdecedd512e56c231861603a4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a0421d566b189294de33306844e96d9f7</anchor>
      <arglist>(Corrade::Interconnect::Emitter &amp;reference) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a4e6818b1ac252c831d5198b8e8e115a4</anchor>
      <arglist>(U other) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>abf5b9c0a0a35bdf6328b3658081d40ae</anchor>
      <arglist>(Corrade::Interconnect::Emitter &amp;&amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>Reference</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>af8d23ae013554277f6b59ff891df756d</anchor>
      <arglist>(Reference&lt; U &gt; other) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator U</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a752abdaca2a9f9e76bf884aad6703b29</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Corrade::Interconnect::Emitter &amp;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a4d0a1c40a15d30c915b7062daac42c3d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator Reference&lt; const Corrade::Interconnect::Emitter &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>ac2fd386035105f40e6db5ef640f28e5d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Corrade::Interconnect::Emitter &amp;</type>
      <name>get</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>a8891dbfbf35e37be7cd08432dd5bb2a7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Corrade::Interconnect::Emitter *</type>
      <name>operator-&gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>aeb149ea11dc647219e66f4facf98acae</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr Corrade::Interconnect::Emitter &amp;</type>
      <name>operator*</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>ae1d1f00f31487a26fc01505832373006</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1Reference.html</anchorfile>
      <anchor>aa892af89bfa655998bd63bcbf394691c</anchor>
      <arglist>(Utility::Debug &amp;debug, Reference&lt; Corrade::Interconnect::Emitter &gt; value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StridedDimensions&lt; dimensions, std::ptrdiff_t &gt;</name>
    <filename>classCorrade_1_1Containers_1_1StridedDimensions.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a96cb09a101b6639009bfe79cdd9204b4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a7891e78e027670de1eb9cd01e0f4fcad</anchor>
      <arglist>(Corrade::ValueInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a40a9cf6b7740d80051a4f88b94dcaae1</anchor>
      <arglist>(Corrade::NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a50802cad6c511e2cf76e00b0189afab8</anchor>
      <arglist>(std::ptrdiff_t first, Args... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a484f60e4b07ae0e51e8c5856c6118322</anchor>
      <arglist>(StaticArrayView&lt; dimensions, const std::ptrdiff_t &gt; values) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a19e3e994e96fe16d0853dcf7453495c6</anchor>
      <arglist>(const std::ptrdiff_t(&amp;values)[dimensions]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator StaticArrayView&lt; dimensions, const std::ptrdiff_t &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a25ca4a3bc4108137283474e5a1b2b67c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator std::ptrdiff_t</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a2451492c97bd37ae9a76ef14a986eb14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a7e5c4ebf3c1b92f7e30db2c2a596579b</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, std::ptrdiff_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a09d527e5798d5e827ac8b7ca3b5def82</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, std::ptrdiff_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::ptrdiff_t</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a4187e63cd7612bb4dfe370ae7cafda68</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>std::ptrdiff_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a8345d58bb4e8920650421d8de4e7935a</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>std::ptrdiff_t *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a77e180080ac98fb6c4d0aeac6b761740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::ptrdiff_t *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a4a517253fa3136144eb9de7ab49e4278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::ptrdiff_t *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a59f36423a9202d3f5936ab3fc68fa6be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::ptrdiff_t *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>affd1f29d9b32d43101e22dad972d2250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::ptrdiff_t *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>acdaf28ed3bcbc4b04b4277e457f3464a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::ptrdiff_t *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a8d5d726c6aa1574a3798787879944a72</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StridedDimensions&lt; dimensions, std::size_t &gt;</name>
    <filename>classCorrade_1_1Containers_1_1StridedDimensions.html</filename>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a96cb09a101b6639009bfe79cdd9204b4</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a7891e78e027670de1eb9cd01e0f4fcad</anchor>
      <arglist>(Corrade::ValueInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a40a9cf6b7740d80051a4f88b94dcaae1</anchor>
      <arglist>(Corrade::NoInitT) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a50802cad6c511e2cf76e00b0189afab8</anchor>
      <arglist>(std::size_t first, Args... next) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a484f60e4b07ae0e51e8c5856c6118322</anchor>
      <arglist>(StaticArrayView&lt; dimensions, const std::size_t &gt; values) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>StridedDimensions</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a19e3e994e96fe16d0853dcf7453495c6</anchor>
      <arglist>(const std::size_t(&amp;values)[dimensions]) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator StaticArrayView&lt; dimensions, const std::size_t &gt;</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a25ca4a3bc4108137283474e5a1b2b67c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr</type>
      <name>operator std::size_t</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a2451492c97bd37ae9a76ef14a986eb14</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a7e5c4ebf3c1b92f7e30db2c2a596579b</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, std::size_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a09d527e5798d5e827ac8b7ca3b5def82</anchor>
      <arglist>(const StridedDimensions&lt; dimensions, std::size_t &gt; &amp;other) const</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a4187e63cd7612bb4dfe370ae7cafda68</anchor>
      <arglist>(std::size_t i) const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a8345d58bb4e8920650421d8de4e7935a</anchor>
      <arglist>(std::size_t i)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a77e180080ac98fb6c4d0aeac6b761740</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::size_t *</type>
      <name>begin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a4a517253fa3136144eb9de7ab49e4278</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::size_t *</type>
      <name>cbegin</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a59f36423a9202d3f5936ab3fc68fa6be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::size_t *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>affd1f29d9b32d43101e22dad972d2250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::size_t *</type>
      <name>end</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>acdaf28ed3bcbc4b04b4277e457f3464a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>constexpr const std::size_t *</type>
      <name>cend</name>
      <anchorfile>classCorrade_1_1Containers_1_1StridedDimensions.html</anchorfile>
      <anchor>a8d5d726c6aa1574a3798787879944a72</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade</name>
    <filename>namespaceCorrade.html</filename>
    <namespace>Corrade::Containers</namespace>
    <namespace>Corrade::Cpu</namespace>
    <namespace>Corrade::Interconnect</namespace>
    <namespace>Corrade::PluginManager</namespace>
    <namespace>Corrade::TestSuite</namespace>
    <namespace>Corrade::Utility</namespace>
    <class kind="struct">Corrade::DefaultInitT</class>
    <class kind="struct">Corrade::DirectInitT</class>
    <class kind="struct">Corrade::InPlaceInitT</class>
    <class kind="struct">Corrade::NoCreateT</class>
    <class kind="struct">Corrade::NoInitT</class>
    <class kind="struct">Corrade::ValueInitT</class>
    <member kind="variable">
      <type>constexpr DefaultInitT</type>
      <name>DefaultInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a2c768ae68c048998f2f97d920bf5413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr ValueInitT</type>
      <name>ValueInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>af3be6d0316a337741e2545bf2b1d7bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a0fc1aca838b7d380102ab12c608b62b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>adf027d6a5dc5c9c6fd0ac10be8558a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DirectInitT</type>
      <name>DirectInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a679ee035631033ace1eb3423bfbb6c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr InPlaceInitT</type>
      <name>InPlaceInit</name>
      <anchorfile>namespaceCorrade.html</anchorfile>
      <anchor>a84b3474f75f94cafa4a0b52911f362da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Containers</name>
    <filename>namespaceCorrade_1_1Containers.html</filename>
    <namespace>Corrade::Containers::Literals</namespace>
    <class kind="struct">Corrade::Containers::AllocatedInitT</class>
    <class kind="class">Corrade::Containers::AnyReference</class>
    <class kind="class">Corrade::Containers::Array</class>
    <class kind="struct">Corrade::Containers::ArrayAllocator</class>
    <class kind="struct">Corrade::Containers::ArrayMallocAllocator</class>
    <class kind="struct">Corrade::Containers::ArrayNewAllocator</class>
    <class kind="class">Corrade::Containers::ArrayTuple</class>
    <class kind="class">Corrade::Containers::ArrayView</class>
    <class kind="class">Corrade::Containers::ArrayView&lt; const void &gt;</class>
    <class kind="class">Corrade::Containers::ArrayView&lt; void &gt;</class>
    <class kind="class">Corrade::Containers::BasicBitArrayView</class>
    <class kind="class">Corrade::Containers::BasicStringView</class>
    <class kind="class">Corrade::Containers::BigEnumSet</class>
    <class kind="class">Corrade::Containers::BitArray</class>
    <class kind="class">Corrade::Containers::EnumSet</class>
    <class kind="class">Corrade::Containers::LinkedList</class>
    <class kind="class">Corrade::Containers::LinkedListItem</class>
    <class kind="class">Corrade::Containers::MoveReference</class>
    <class kind="struct">Corrade::Containers::NullOptT</class>
    <class kind="class">Corrade::Containers::Optional</class>
    <class kind="class">Corrade::Containers::Pair</class>
    <class kind="class">Corrade::Containers::Pointer</class>
    <class kind="class">Corrade::Containers::Reference</class>
    <class kind="class">Corrade::Containers::ScopeGuard</class>
    <class kind="class">Corrade::Containers::StaticArray</class>
    <class kind="class">Corrade::Containers::StaticArrayView</class>
    <class kind="class">Corrade::Containers::StridedArrayView</class>
    <class kind="class">Corrade::Containers::StridedArrayView&lt; dimensions, const void &gt;</class>
    <class kind="class">Corrade::Containers::StridedArrayView&lt; dimensions, void &gt;</class>
    <class kind="class">Corrade::Containers::StridedDimensions</class>
    <class kind="class">Corrade::Containers::StridedIterator</class>
    <class kind="class">Corrade::Containers::String</class>
    <class kind="class">Corrade::Containers::Triple</class>
    <member kind="typedef">
      <type>StaticArrayView&lt; 2, T &gt;</type>
      <name>ArrayView2</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a538f5aec51521bc0827c08093b94b2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArrayView&lt; 3, T &gt;</type>
      <name>ArrayView3</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a70273af021774c9602e069546e695aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArrayView&lt; 4, T &gt;</type>
      <name>ArrayView4</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9fd5a1e3503cd60414c512bed40b9494</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicBitArrayView&lt; const char &gt;</type>
      <name>BitArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa2cbc2d04487fbb69ac408beb3a61205</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicBitArrayView&lt; char &gt;</type>
      <name>MutableBitArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a524f39ffdbd9ea40f8679faeea91bf6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 1, T &gt;</type>
      <name>Array1</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ade5f9cc4d92b3f1a798e9d648ea49a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 2, T &gt;</type>
      <name>Array2</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a13dae01e39f8fd19040ad724b704ec50</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 3, T &gt;</type>
      <name>Array3</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abb1083b373a1a228c422f4f07b830287</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StaticArray&lt; 4, T &gt;</type>
      <name>Array4</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a0b0a9db6a9c6cd0eec1c2f3ea4b25b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 1, T &gt;</type>
      <name>StridedArrayView1D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a161bca60e6aa4f6f998b6f3cfa64eaef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 2, T &gt;</type>
      <name>StridedArrayView2D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aad0779dab68e1061b22da995439f668b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 3, T &gt;</type>
      <name>StridedArrayView3D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8fd4827befab8d70f0da5e4300bfdc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StridedArrayView&lt; 4, T &gt;</type>
      <name>StridedArrayView4D</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac01ba7473315887995a8680b259c9c74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EnumSet&lt; StringViewFlag &gt;</type>
      <name>StringViewFlags</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab43f431e0d4ae89b9f205e0e7adc7021</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicStringView&lt; const char &gt;</type>
      <name>StringView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ac77ad25e27290ff059450af138fbed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BasicStringView&lt; char &gt;</type>
      <name>MutableStringView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a810883e8f1a8d70a270974d86c5d6629</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::DefaultInitT</type>
      <name>DefaultInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a07c5953cb4114b33bfc0a9b88070b1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::ValueInitT</type>
      <name>ValueInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4db79a5757ea865004f931965b4b9946</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::NoInitT</type>
      <name>NoInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acb29bbf10a9f34366e299a490dbd75a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::NoCreateT</type>
      <name>NoCreateT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a49c57bc91b29e61bb35c15d0155e36f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::DirectInitT</type>
      <name>DirectInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2432fa245182237098830d84d950c21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Corrade::InPlaceInitT</type>
      <name>InPlaceInitT</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a22afdcae721ff44a2e0114daf04fa064</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StringViewFlag</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a7ea6dbda3ba1bf973775cf605dd5d436</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Containers.html" anchor="a7ea6dbda3ba1bf973775cf605dd5d436a4cc6684df7b4a92b1dec6fce3264fac8">Global</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Containers.html" anchor="a7ea6dbda3ba1bf973775cf605dd5d436ab90111c75972f26b57ab364724b34921">NullTerminated</enumvalue>
    </member>
    <member kind="function">
      <type>Array&lt; T &gt;</type>
      <name>array</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a03e71bc6da19a09b472b6d99c1072a42</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a57f8d4e0a25951f539461539c90d4e25</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4258433529f847d3e6ed10442f6b9b8b</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad5f0615634b2553b0cb304aa58da3347</anchor>
      <arglist>(Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9a1ca1efe52f9930f1b31b9feab5a145</anchor>
      <arglist>(const Array&lt; T, D &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af8a4e6b17dca34a5eb82b6a8da8c398b</anchor>
      <arglist>(const Array&lt; T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a32ef8daa386aee742e5f39fc5b1516fd</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac8edb9cd0a74f5a0da2ef9c6d03f9ef2</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a95ac37a82ede3b7b4aae3fb20e552c99</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac450a49515ff20058552c732542b1b13</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a3a43320e58651eafa9774e04c68545e5</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ade5f07807e9559c80c45e3c314299b91</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8e6435208f2cda38505084a930a3e9ec</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2b0383474d8ce57fbd53da5b5a428939</anchor>
      <arglist>(ArrayView&lt; const void &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a19e087600ec3a4f81931386ee28e39ef</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9e4a13e421a34a19eec002ed65bda582</anchor>
      <arglist>(StaticArrayView&lt; size_, T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aaf76e645cbe62b360a0f13de4dff2837</anchor>
      <arglist>(T(&amp;)[size_])</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a58d7bb8d46f44949b57b226485db4a9b</anchor>
      <arglist>(T *data)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a3cf428b256a5ed8941145e4d15ae8b45</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aeb96550df22942b8379e77d3942c88c4</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2f1123798b8bee4ebadf785646108c98</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aee41b58bdb45963c476ce7554dda2290</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aee9c43d476128f05403e638ce539c90d</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>bigEnumSetDebugOutput</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a43181898a295599ab45af395bce0bbbd</anchor>
      <arglist>(Utility::Debug &amp;debug, BigEnumSet&lt; T, size &gt; value, const char *empty)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a74e7890c172dce7a2a5b95c037d55996</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>enumCastUnderlyingType</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9ac3a9dbe8d6b8bc0422aaeaf11bfdf8</anchor>
      <arglist>(EnumSet&lt; T, fullValue &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>enumSetDebugOutput</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a12c4ea794fa62c56969b1311e2b5c21b</anchor>
      <arglist>(Utility::Debug &amp;debug, EnumSet&lt; T, fullValue &gt; value, const char *empty, std::initializer_list&lt; T &gt; enums)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; typename std::decay&lt; T &gt;::type &gt;</type>
      <name>optional</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a71e22f3640eb28dd7b2f7b8339931224</anchor>
      <arglist>(T &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Optional&lt; T &gt;</type>
      <name>optional</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a828d28109eb44c02f39b554a392606e9</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>optional</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab28ec333a1a0bfbfe1f0e93b200fe1a1</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedOptionalConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="function">
      <type>constexpr Pair&lt; typename std::decay&lt; F &gt;::type, typename std::decay&lt; S &gt;::type &gt;</type>
      <name>pair</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a2b7783627dcc6a1de27b18a1b91474db</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pair</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a299657ac36033cc6c615ca68b983ec6d</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedPairConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a76b1a48222910763fdc5046b6625090e</anchor>
      <arglist>(T *pointer)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>pointer</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9fe9dd514c016cdbff0fddf90ae1250f</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedPointerConverter&lt; T &gt;::from(Utility::move(other)))</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; U &gt;</type>
      <name>pointerCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae1b70d106c3a13b76188c0f7f956cb0c</anchor>
      <arglist>(Pointer&lt; T &gt; &amp;&amp;pointer)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; T &gt;</type>
      <name>pointer</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab287dc10fa2591e662d9a9ea611a3dad</anchor>
      <arglist>(Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa8111199cdb6cc30c470e3cc9c54a30e</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr ArrayView&lt; const T &gt;</type>
      <name>arrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5b40a450ade4927381bf97a165e3621e</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4f6c86de70a1ab496a1d798648c22f80</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StaticArrayView&lt; size, const T &gt;</type>
      <name>staticArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab15dc352f75f85e562eaa85ae058ac9f</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ebf447d7f388e81fe6d34910c80cfbe</anchor>
      <arglist>(StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>StaticArrayView&lt; size *sizeof(T)/sizeof(U), const U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aae0b8c37cdca03924fac3a3ff457bf9b</anchor>
      <arglist>(const StaticArray&lt; size, T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::size_t</type>
      <name>arraySize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a0cad6e09b65666040bb2460df883e4a3</anchor>
      <arglist>(const StaticArray&lt; size_, T &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a6c404d07d7621b49edc810ad76a7c6f0</anchor>
      <arglist>(ArrayView&lt; typename StridedArrayView1D&lt; T &gt;::ErasedType &gt; data, T *member, std::size_t size, std::ptrdiff_t stride)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>adc752d45dc49d4d9d2903cb23e127fac</anchor>
      <arglist>(ArrayView&lt; T &gt; data, std::size_t size, std::ptrdiff_t stride)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae1d5fefb507d00ef2f0df7c76b2c6c80</anchor>
      <arglist>(T *data, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a28f0f3e4514d0a6d4d463f7bd2884f16</anchor>
      <arglist>(T(&amp;data)[size])</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView1D&lt; const T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af01162b5a464cae22ae51d39a6baf5cd</anchor>
      <arglist>(std::initializer_list&lt; T &gt; list)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8a18ea77b75e5838af7828f4b681de1d</anchor>
      <arglist>(ArrayView&lt; T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView1D&lt; T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5687e5c332876211a23a2202ea89231b</anchor>
      <arglist>(StaticArrayView&lt; size, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr StridedArrayView&lt; dimensions, T &gt;</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab15f7dff3df81f6529c2b9e401f813dc</anchor>
      <arglist>(StridedArrayView&lt; dimensions, T &gt; view)</arglist>
    </member>
    <member kind="function">
      <type>constexpr U</type>
      <name>stridedArrayView</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af0b91e302ea8ee6b0c76fe99fe6af1f8</anchor>
      <arglist>(T &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a529bc0bc79d6272d1e53c85c5ecd7005</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a70b1b0045d3523446c65ef79416c6d99</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, const void &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; dimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af6b32c425934efbd48dbb3d18839b9ad</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, void &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abb1caf4042587dc306fc92204c441feb</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac1dad147461a93c462d36ae8a009c313</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8834b18f663b21057e77c4f33b725d9c</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, const void &gt; &amp;view, std::size_t lastDimensionSize)</arglist>
    </member>
    <member kind="function">
      <type>StridedArrayView&lt; newDimensions, U &gt;</type>
      <name>arrayCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a6d49244b843135197647e98f13a171c2</anchor>
      <arglist>(const StridedArrayView&lt; dimensions, void &gt; &amp;view, std::size_t lastDimensionSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aabd63b13acd5ca553d41015d6a0b7ec3</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a37533ccf37e6d0d25674e86bd52a8342</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a241cc5c0e7ed2bafaef013bc5735bd29</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acf48d36f9b3e4bd1add77640b13452b1</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a0fcba4446c47cef12dd65b28cbd23cca</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a15b299abd79e4afecbffa9f7fe5e2ccb</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>operator+</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa25a50dbfab845280e92ecae86b132b5</anchor>
      <arglist>(StringView a, StringView b)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>operator*</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aee6a277665b8ee53c8242753ccdd9bea</anchor>
      <arglist>(StringView string, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>operator*</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a99c531f093fa2c9248d31f5c735949f6</anchor>
      <arglist>(std::size_t count, StringView string)</arglist>
    </member>
    <member kind="function">
      <type>constexpr Triple&lt; typename std::decay&lt; F &gt;::type, typename std::decay&lt; S &gt;::type, typename std::decay&lt; T &gt;::type &gt;</type>
      <name>triple</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a6acd55864ee53360e153820f2348496d</anchor>
      <arglist>(F &amp;&amp;first, S &amp;&amp;second, T &amp;&amp;third)</arglist>
    </member>
    <member kind="function">
      <type>auto</type>
      <name>triple</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1748277cb24f2a03b286c1d741349696</anchor>
      <arglist>(T &amp;&amp;other) -&gt; decltype(Implementation::DeducedTripleConverter&lt; typename std::decay&lt; T &gt;::type &gt;::from(Utility::forward&lt; T &gt;(other)))</arglist>
    </member>
    <member kind="variable">
      <type>constexpr NullOptT</type>
      <name>NullOpt</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a047ff43a43f3841e3c7125e1cc41bb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AllocatedInitT</type>
      <name>AllocatedInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1f81c0df1f144ff03f4f02f6721f615b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::DefaultInitT</type>
      <name>DefaultInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a876a3f289a2d9bab6c960fb4d0c213d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::ValueInitT</type>
      <name>ValueInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4f2b333de68614337b8af5031241d1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::NoInitT</type>
      <name>NoInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9f525a7cad37460a212272538f2e7974</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::NoCreateT</type>
      <name>NoCreate</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad6e54209a8ced072dd01d53f1208387e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::DirectInitT</type>
      <name>DirectInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab2419af9b31a38b9a9647b257d5a69bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Corrade::InPlaceInitT</type>
      <name>InPlaceInit</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab46f58b81041b0f83fa3fc564c604133</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a46c91612607a6ce5a823322d05666879</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; U &gt;</type>
      <name>arrayAllocatorCast</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a5ee3b98c647b7c5ca7126a09673bc1b5</anchor>
      <arglist>(Array&lt; T &gt; &amp;&amp;array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>arrayIsGrowable</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a169f206bc857abaa7c4db37ffa536722</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayCapacity</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a7bc7511f661ed0c9b60eeaf69add11b3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>arrayReserve</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a365d83a4f4c08c44886e7429fe6afd08</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t capacity)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af1eec8f55170b31020601972676a666f</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7013a9fbe380f8165f498963b1574a7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a4bb55b3330d9a26981875c8386704520</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a8ff22e44e8ce7e1f28afc6b0bd1e2c1c</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ac2a73a29be4796e42f87abbccc9ff955</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9dc411dd05adcef6c681c9fad9b9bdbc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DirectInitT, std::size_t size, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayResize</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a296d5d6dd7d068c8a4213600d50c5307</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t size, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae62c9676edb6cf4a7ef65ce8b658b5e3</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a1816aeebda9cfeb7c3721870424f02fa</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a35d60ea406e01a325535da32b03b0634</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a42ea2d796126a0411960911e18b35447</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>af7c8f048165bf1ca49d4afacada57f82</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayAppend</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a9d4838774c256548468059c8394da8d9</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>afba53a4c9507e13ed2ee461ddc78ebc8</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, const typename std::common_type&lt; T &gt;::type &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>acf62b401f66f6fa02fd23dfb00aecef7</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::InPlaceInitT, Args &amp;&amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ab6a58e17da5dcffc298895f1b56ef5dc</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, typename std::common_type&lt; T &gt;::type &amp;&amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>abf99a6ca1917325bb25dbe3c09e9b294</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, ArrayView&lt; const T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ad4bf4ea5adffe8e78366201c0da60fa5</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::initializer_list&lt; T &gt; values)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayInsert</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a603c59a6e7c557af0cb5437a315c1c36</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, Corrade::NoInitT, std::size_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemove</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>ae92e01d4b8c12d4b3d7d4ff6bc558c7b</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveUnordered</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>aa64e7c94743a46f917b43c86b83c1bb4</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t index, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayRemoveSuffix</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a398816c87fac07ede4e18854b32f1cbf</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, std::size_t count=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a77949cacfb14e300bd153185f1992757</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::NoInitT=Corrade::NoInit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayShrink</name>
      <anchorfile>namespaceCorrade_1_1Containers.html</anchorfile>
      <anchor>a50c31776f6c38c1c3d7b7f326a148b26</anchor>
      <arglist>(Array&lt; T &gt; &amp;array, Corrade::DefaultInitT)</arglist>
    </member>
    <docanchor file="namespaceCorrade_1_1Containers.html" title="Mapping between Corrade and STL containers">Containers-mapping</docanchor>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Containers::Literals</name>
    <filename>namespaceCorrade_1_1Containers_1_1Literals.html</filename>
    <member kind="function">
      <type>constexpr StringView</type>
      <name>operator&quot;&quot;_s</name>
      <anchorfile>namespaceCorrade_1_1Containers_1_1Literals.html</anchorfile>
      <anchor>a77602518db83671261025e3ca632151d</anchor>
      <arglist>(const char *data, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Cpu</name>
    <filename>namespaceCorrade_1_1Cpu.html</filename>
    <class kind="struct">Corrade::Cpu::Avx2T</class>
    <class kind="struct">Corrade::Cpu::Avx512fT</class>
    <class kind="struct">Corrade::Cpu::AvxF16cT</class>
    <class kind="struct">Corrade::Cpu::AvxFmaT</class>
    <class kind="struct">Corrade::Cpu::AvxT</class>
    <class kind="struct">Corrade::Cpu::Bmi1T</class>
    <class kind="class">Corrade::Cpu::Features</class>
    <class kind="struct">Corrade::Cpu::LzcntT</class>
    <class kind="struct">Corrade::Cpu::NeonFmaT</class>
    <class kind="struct">Corrade::Cpu::NeonFp16T</class>
    <class kind="struct">Corrade::Cpu::NeonT</class>
    <class kind="struct">Corrade::Cpu::PopcntT</class>
    <class kind="struct">Corrade::Cpu::ScalarT</class>
    <class kind="struct">Corrade::Cpu::Simd128T</class>
    <class kind="struct">Corrade::Cpu::Sse2T</class>
    <class kind="struct">Corrade::Cpu::Sse3T</class>
    <class kind="struct">Corrade::Cpu::Sse41T</class>
    <class kind="struct">Corrade::Cpu::Sse42T</class>
    <class kind="struct">Corrade::Cpu::Ssse3T</class>
    <class kind="struct">Corrade::Cpu::TypeTraits</class>
    <member kind="typedef">
      <type>Implementation::Tags&lt; 0 &gt;</type>
      <name>DefaultExtraT</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a6e589f2f27676a179ea943ca0f4210d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Implementation::Tags&lt; TypeTraits&lt; DefaultBaseT &gt;::Index|DefaultExtraT::Value &gt;</type>
      <name>DefaultT</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a0c677e989287f4c0718c925ee9aabd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>tag</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ae523f73a603f905f3687e9acc69e0d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>features</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a33f27b3980b02c723baba427e353f735</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>constexpr Features</type>
      <name>compiledFeatures</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a9ec9c346a852c3e194df51b3d0b82e6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Features</type>
      <name>runtimeFeatures</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a9afada18b534309f7700f1cb79eeae28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>constexpr ScalarT</type>
      <name>Scalar</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ad46bdf541c1b53cbc48b61ada9322763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse2T</type>
      <name>Sse2</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a0824c1dffe74c9af986f5c448334df7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse3T</type>
      <name>Sse3</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a3b044236d7916684b4a87937907626e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Ssse3T</type>
      <name>Ssse3</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a114904bf69f2c4ecd91f90cc70d37b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse41T</type>
      <name>Sse41</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ac25dd6c599fe1e12851997d2697298d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Sse42T</type>
      <name>Sse42</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a01ca5010f56dc4811155125c000024d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr PopcntT</type>
      <name>Popcnt</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a03e5d8b9ee8cbb9bdb53fef9b06af0a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr LzcntT</type>
      <name>Lzcnt</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a157591d3b2a1877ba7645bbae1383551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Bmi1T</type>
      <name>Bmi1</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a0c582368e389d7c5c0e7f5292efdf581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AvxT</type>
      <name>Avx</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>acbbdbb148d34666728d3dae3ac636051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AvxF16cT</type>
      <name>AvxF16c</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a1ba9c6e0be3429fcde02d66697c803b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr AvxFmaT</type>
      <name>AvxFma</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a4775746a89fbf46704495e837f3add0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Avx2T</type>
      <name>Avx2</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ae53a0c8cdcbffd46cf48e443dd1c9ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Avx512fT</type>
      <name>Avx512f</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>aaad8362a47a0e673758f926fdd31dc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NeonT</type>
      <name>Neon</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>afb2aa2abe1d692820f60acc7bc839047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NeonFmaT</type>
      <name>NeonFma</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a69ca74be36799b556d04781b78a43a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr NeonFp16T</type>
      <name>NeonFp16</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>adcc7038ce8560bddbe32d7473dcfc5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr Simd128T</type>
      <name>Simd128</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a5994e7ffbf54ba14ab7ddc95cc5be311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>typedef</type>
      <name>DefaultBaseT</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>ae761c508c5e186eefc093605bf690a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultBaseT</type>
      <name>DefaultBase</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a7eb0fdea7fc6203c8abe112c2b58271a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultExtraT</type>
      <name>DefaultExtra</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>a41afb9c2034966f23645a677b8906588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>constexpr DefaultT</type>
      <name>Default</name>
      <anchorfile>namespaceCorrade_1_1Cpu.html</anchorfile>
      <anchor>adfd9d16f07465c937144c4155aa5b592</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Usage">Cpu-usage</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Dispatching on available CPU instruction set at compile time">Cpu-usage-dispatch-compile-time</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Runtime detection and manual dispatch">Cpu-usage-dispatch-runtime</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Usage with extra instruction sets">Cpu-usage-extra</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Enabling instruction sets for particular functions">Cpu-usage-target-attributes</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Automatic runtime dispatch">Cpu-usage-automatic-runtime-dispatch</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Automatic runtime dispach with extra instruction sets">Cpu-usage-automatic-runtime-dispatch-extra</docanchor>
    <docanchor file="namespaceCorrade_1_1Cpu.html" title="Automatic cached dispatch">Cpu-usage-automatic-cached-dispatch</docanchor>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Interconnect</name>
    <filename>namespaceCorrade_1_1Interconnect.html</filename>
    <class kind="class">Corrade::Interconnect::Connection</class>
    <class kind="class">Corrade::Interconnect::Emitter</class>
    <class kind="class">Corrade::Interconnect::Receiver</class>
    <class kind="class">Corrade::Interconnect::StateMachine</class>
    <class kind="class">Corrade::Interconnect::StateTransition</class>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>namespaceCorrade_1_1Interconnect.html</anchorfile>
      <anchor>afe6ec8e2281aa5a2804094419d135005</anchor>
      <arglist>(EmitterObject &amp;emitter, Interconnect::Emitter::Signal(Emitter::*signal)(Args...), Functor &amp;&amp;slot)</arglist>
    </member>
    <member kind="function">
      <type>Connection</type>
      <name>connect</name>
      <anchorfile>namespaceCorrade_1_1Interconnect.html</anchorfile>
      <anchor>a52f95755ab08bad47be07955f641f2cc</anchor>
      <arglist>(EmitterObject &amp;emitter, Interconnect::Emitter::Signal(Emitter::*signal)(Args...), ReceiverObject &amp;receiver, void(Receiver::*slot)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>disconnect</name>
      <anchorfile>namespaceCorrade_1_1Interconnect.html</anchorfile>
      <anchor>a08518bbf1547ae48fbd32afeba6fc787</anchor>
      <arglist>(Emitter &amp;emitter, const Connection &amp;connection)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::PluginManager</name>
    <filename>namespaceCorrade_1_1PluginManager.html</filename>
    <class kind="class">Corrade::PluginManager::AbstractManager</class>
    <class kind="class">Corrade::PluginManager::AbstractManagingPlugin</class>
    <class kind="class">Corrade::PluginManager::AbstractPlugin</class>
    <class kind="class">Corrade::PluginManager::Manager</class>
    <class kind="class">Corrade::PluginManager::PluginMetadata</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; LoadState &gt;</type>
      <name>LoadStates</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a61b14635bc0c147c65e8be80260ca891</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LoadState</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>aa240e935222a178e1acb5c0853f15547</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a38c300f4fc9ce8a77aad4a30de05cad8">NotFound</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a3485912f892918a4ed6b357abad8e5a4">WrongPluginVersion</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ae90c7458dc20c6326d3a34071de85e3f">WrongInterfaceVersion</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ad6ab066e75221cc9a69bfede5f75347c">WrongMetadataFile</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a3c062ee3a4f39445ef4ba44ada5bde3c">UnresolvedDependency</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a3729d9667c9ed82ae96b6174b288a3a5">LoadFailed</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a84a8921b25f505d0d2077aeb5db4bc16">Static</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a7381d487d18845b379422325c0a768d6">Loaded</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a5111e24c1ecc6266ce0de4b4dc42033b">NotLoaded</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ac7de13f47f40f470d0795d224221a577">UnloadFailed</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547ab651efdb98a5d6bd2b3935d0c3f4a5e2">Required</enumvalue>
      <enumvalue file="namespaceCorrade_1_1PluginManager.html" anchor="aa240e935222a178e1acb5c0853f15547a019d1ca7d50cc54b995f60d456435e87">Used</enumvalue>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a73b06a0cd1333798b796a2061dc6bedd</anchor>
      <arglist>(Utility::Debug &amp;debug, PluginManager::LoadState value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a75f06adcf2b3f416601f1f58507a3f15</anchor>
      <arglist>(Utility::Debug &amp;debug, PluginManager::LoadStates value)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::String &gt;</type>
      <name>implicitPluginSearchPaths</name>
      <anchorfile>namespaceCorrade_1_1PluginManager.html</anchorfile>
      <anchor>a3498558bb07446e3f5cdf624995e4291</anchor>
      <arglist>(Containers::StringView libraryLocation, Containers::StringView hardcodedPath, Containers::StringView relativePath)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::TestSuite</name>
    <filename>namespaceCorrade_1_1TestSuite.html</filename>
    <namespace>Corrade::TestSuite::Compare</namespace>
    <class kind="class">Corrade::TestSuite::Comparator</class>
    <class kind="class">Corrade::TestSuite::Comparator&lt; double &gt;</class>
    <class kind="class">Corrade::TestSuite::Comparator&lt; float &gt;</class>
    <class kind="class">Corrade::TestSuite::Comparator&lt; long double &gt;</class>
    <class kind="class">Corrade::TestSuite::Tester</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ComparisonStatusFlag &gt;</type>
      <name>ComparisonStatusFlags</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>a4578a3861445b1ed4bd30a160f9380bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ComparisonStatusFlag</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>ad2d124df3140f28b26e7e6b3f5c79170</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170ad7c8c85bf79bbe1b7188497c32c3b0ca">Failed</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170a0eaadb4fcb48a0a0ed7bc9868be9fbaa">Warning</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170a4c2a8fe7eaf24721cc7a9f0175115bd4">Message</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170ad4a9fa383ab700c5bdd6f31cf7df0faf">Verbose</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170a7f84beab04579bef70043ca0cc72fb85">Diagnostic</enumvalue>
      <enumvalue file="namespaceCorrade_1_1TestSuite.html" anchor="ad2d124df3140f28b26e7e6b3f5c79170ad86c142bfd1ab654a16c8eaf191eade7">VerboseDiagnostic</enumvalue>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>af1096abd0227add4b864b06b17b07b6b</anchor>
      <arglist>(Utility::Debug &amp;debug, ComparisonStatusFlag value)</arglist>
    </member>
    <member kind="function">
      <type>Utility::Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1TestSuite.html</anchorfile>
      <anchor>a76c55488944ad1983d80fac4fc3ddcaa</anchor>
      <arglist>(Utility::Debug &amp;debug, ComparisonStatusFlags value)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::TestSuite::Compare</name>
    <filename>namespaceCorrade_1_1TestSuite_1_1Compare.html</filename>
    <class kind="class">Corrade::TestSuite::Compare::Aligned</class>
    <class kind="class">Corrade::TestSuite::Compare::Around</class>
    <class kind="class">Corrade::TestSuite::Compare::Container</class>
    <class kind="class">Corrade::TestSuite::Compare::Divisible</class>
    <class kind="class">Corrade::TestSuite::Compare::File</class>
    <class kind="class">Corrade::TestSuite::Compare::FileToString</class>
    <class kind="class">Corrade::TestSuite::Compare::Greater</class>
    <class kind="class">Corrade::TestSuite::Compare::GreaterOrEqual</class>
    <class kind="class">Corrade::TestSuite::Compare::Less</class>
    <class kind="class">Corrade::TestSuite::Compare::LessOrEqual</class>
    <class kind="class">Corrade::TestSuite::Compare::NotAligned</class>
    <class kind="class">Corrade::TestSuite::Compare::NotDivisible</class>
    <class kind="class">Corrade::TestSuite::Compare::NotEqual</class>
    <class kind="class">Corrade::TestSuite::Compare::SortedContainer</class>
    <class kind="class">Corrade::TestSuite::Compare::StringContains</class>
    <class kind="class">Corrade::TestSuite::Compare::StringHasPrefix</class>
    <class kind="class">Corrade::TestSuite::Compare::StringHasSuffix</class>
    <class kind="class">Corrade::TestSuite::Compare::StringNotContains</class>
    <class kind="class">Corrade::TestSuite::Compare::StringToFile</class>
    <member kind="function">
      <type>Around&lt; T &gt;</type>
      <name>around</name>
      <anchorfile>namespaceCorrade_1_1TestSuite_1_1Compare.html</anchorfile>
      <anchor>a76165bdc14d6ddd8ba20356ffd11e2e5</anchor>
      <arglist>(T epsilon)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility</name>
    <filename>namespaceCorrade_1_1Utility.html</filename>
    <namespace>Corrade::Utility::Directory</namespace>
    <namespace>Corrade::Utility::Endianness</namespace>
    <namespace>Corrade::Utility::Path</namespace>
    <namespace>Corrade::Utility::String</namespace>
    <namespace>Corrade::Utility::System</namespace>
    <namespace>Corrade::Utility::Unicode</namespace>
    <class kind="class">Corrade::Utility::AbstractHash</class>
    <class kind="class">Corrade::Utility::AndroidLogStreamBuffer</class>
    <class kind="class">Corrade::Utility::Arguments</class>
    <class kind="class">Corrade::Utility::Configuration</class>
    <class kind="class">Corrade::Utility::ConfigurationGroup</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; bool &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; char32_t &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Containers::String &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; Containers::StringView &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; double &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; float &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; int &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; long double &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; long long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; short &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; std::string &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned int &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned long long &gt;</class>
    <class kind="struct">Corrade::Utility::ConfigurationValue&lt; unsigned short &gt;</class>
    <class kind="class">Corrade::Utility::Debug</class>
    <class kind="class">Corrade::Utility::Error</class>
    <class kind="class">Corrade::Utility::Fatal</class>
    <class kind="class">Corrade::Utility::FileWatcher</class>
    <class kind="class">Corrade::Utility::HashDigest</class>
    <class kind="class">Corrade::Utility::Json</class>
    <class kind="class">Corrade::Utility::JsonArrayItem</class>
    <class kind="class">Corrade::Utility::JsonIterator</class>
    <class kind="class">Corrade::Utility::JsonObjectItem</class>
    <class kind="class">Corrade::Utility::JsonToken</class>
    <class kind="class">Corrade::Utility::JsonView</class>
    <class kind="class">Corrade::Utility::JsonWriter</class>
    <class kind="class">Corrade::Utility::MurmurHash2</class>
    <class kind="class">Corrade::Utility::Resource</class>
    <class kind="class">Corrade::Utility::Sha1</class>
    <class kind="class">Corrade::Utility::Tweakable</class>
    <class kind="struct">Corrade::Utility::TweakableParser</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; bool &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; char &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; double &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; float &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; int &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; long double &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; long long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; unsigned int &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; unsigned long &gt;</class>
    <class kind="struct">Corrade::Utility::TweakableParser&lt; unsigned long long &gt;</class>
    <class kind="class">Corrade::Utility::Warning</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ConfigurationValueFlag &gt;</type>
      <name>ConfigurationValueFlags</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a4d1891e33318b3189e012812127acd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JsonView&lt; JsonObjectItem &gt;</type>
      <name>JsonObjectView</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ad1465283b0d84db8636372530d054f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>JsonView&lt; JsonArrayItem &gt;</type>
      <name>JsonArrayView</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a05350f92880c9e8e296891c6fd82dce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; bool, implementation-specific &gt;</type>
      <name>IsIterable</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a5b6f2707e54c886af00f4738ff83afa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::integral_constant&lt; bool, implementation-specific &gt;</type>
      <name>IsStringLike</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a25706236e8711798719a814357f6bffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ConfigurationValueFlag</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3b46f5e69ac219d10525df018f027b84</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a594be08882c8e9d5efb9eeb62f303744">Oct</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a92640bd72988395b326c888614f8937a">Hex</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a21234a0e100d74037a4da2e53f3200d7">Scientific</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a3b46f5e69ac219d10525df018f027b84a621e7b8ece62fecc55e883252ff2fbe7">Uppercase</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TweakableState</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a62dda609bc506c6cb04603c81742f974</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a4bac8cdf0a968472b519b3b295d0d48b">NoChange</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a505a83f220c02df2f85c3810cd9ceb38">Success</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a780b2be805c1437cd6730ba91f6107e3">Recompile</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility.html" anchor="a62dda609bc506c6cb04603c81742f974a902b0d55fddef6f8d651fe1035b7d4bd">Error</enumvalue>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a842b4e479156706bfb87ecec1232a127</anchor>
      <arglist>(const Containers::ArrayView&lt; const void &gt; &amp;src, const Containers::ArrayView&lt; void &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6d2284e38a3a106c3de3fc6dffc193c6</anchor>
      <arglist>(const Containers::ArrayView&lt; const T &gt; &amp;src, const Containers::ArrayView&lt; T &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6cd0c04124a0d7c4879d4cf6da3556a2</anchor>
      <arglist>(const Containers::StridedArrayView&lt; dimensions, const char &gt; &amp;src, const Containers::StridedArrayView&lt; dimensions, char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>afe017978af3a52fd6bfab7a461b26b04</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; const char &gt; &amp;src, const Containers::StridedArrayView1D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a048d3a441c483299359630bef7c29144</anchor>
      <arglist>(const Containers::StridedArrayView2D&lt; const char &gt; &amp;src, const Containers::StridedArrayView2D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a92f4374b3577f57527b9786fb2f2f4cc</anchor>
      <arglist>(const Containers::StridedArrayView3D&lt; const char &gt; &amp;src, const Containers::StridedArrayView3D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a4d88348f9502b5f662757be78e7e306c</anchor>
      <arglist>(const Containers::StridedArrayView4D&lt; const char &gt; &amp;src, const Containers::StridedArrayView4D&lt; char &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>affde4e62221981d89e5b95c4df33a325</anchor>
      <arglist>(const Containers::StridedArrayView&lt; dimensions, const T &gt; &amp;src, const Containers::StridedArrayView&lt; dimensions, T &gt; &amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a06f446f1c1c3651cbeecb2d4879d494f</anchor>
      <arglist>(From &amp;&amp;src, To &amp;&amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a039691d89f3ce26def0c05999735743e</anchor>
      <arglist>(std::initializer_list&lt; typename ToView::Type &gt; src, To &amp;&amp;dst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>flipInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab19ea7faa970d7f31bdab70097fdc291</anchor>
      <arglist>(const Containers::StridedArrayView&lt; dimensions, T &gt; &amp;view)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator!</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a9dc0b7f07f114111dbad9ab62d92ad8d</anchor>
      <arglist>(Implementation::DebugSourceLocation debug)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ae2cee4795e84d13d29d1d9e1c805ecd2</anchor>
      <arglist>(Debug &amp;debug, const T &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ac103e9217a8710bd03ee4783d3d6ed4b</anchor>
      <arglist>(Debug &amp;debug, const Iterable &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a76d39b67ac31b0abf23b5c5d4bec9f15</anchor>
      <arglist>(Debug &amp;debug, const std::pair&lt; T, U &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a516b71a8f99c9bd0edea7275889ebc7a</anchor>
      <arglist>(Debug &amp;debug, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>std::enable_if&lt;!std::is_same&lt; T, char &gt;::value, Debug &amp; &gt;::type</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a9c5697e2ec9a42531dbb3c9dfe1dbd02</anchor>
      <arglist>(Debug &amp;debug, const std::basic_string&lt; T &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a9f9d27d6f040e6e490f2d73c5a0b8b56</anchor>
      <arglist>(Debug &amp;debug, const std::tuple&lt; Args... &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a93d5d075373cf6340043fbd204d1c6b7</anchor>
      <arglist>(Debug &amp;debug, std::string_view value)</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab456ac723e0708a30c48123d4392dfc6</anchor>
      <arglist>(Debug &amp;debug, std::basic_string_view&lt; T &gt; value)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>format</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6ed9378fb78a4da408fd5154a9d9a308</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a8c16cf18e0326f57cdb267b3857f6947</anchor>
      <arglist>(const Containers::MutableStringView &amp;buffer, const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a1c10c304b9e8a058370c2b6e0ddd5b9d</anchor>
      <arglist>(char(&amp;buffer)[size], const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3b0e22fcc7bd43f5758df742ba40ebb1</anchor>
      <arglist>(std::FILE *file, const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab27a2c45ff7f820fa421daae6cdb82af</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printError</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a1d88fd05905f0c021fe6169068441102</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>formatString</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>aaa50b1dc1eaffad13a65ee141a5c9e4f</anchor>
      <arglist>(const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>formatInto</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>aaf6e2f081fa8fd67065dd7b39811f5f6</anchor>
      <arglist>(std::string &amp;string, std::size_t offset, const char *format, const Args &amp;... args)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>min</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ac40a96d7a67b36c7b93ab1ed1d0f2bc8</anchor>
      <arglist>(T value, T min)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T</type>
      <name>max</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a27a307079be1c24d171914a7af464960</anchor>
      <arglist>(T value, T max)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a4c107e1764479ea1f32ff5266bfb163e</anchor>
      <arglist>(std::size_t size)</arglist>
      <docanchor file="namespaceCorrade_1_1Utility.html" title="Array initialization">Utility-allocateAligned-initialization</docanchor>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>af407cb240cc490b1a88d5b0b1d36590d</anchor>
      <arglist>(DefaultInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ae3a2a13e2f51c4116d27059f124a14d8</anchor>
      <arglist>(ValueInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; T &gt;</type>
      <name>allocateAligned</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a345621f50f8ba99ff1f5fa678fc8375f</anchor>
      <arglist>(NoInitT, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;&amp;</type>
      <name>forward</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ab98a3f5ef78f381cdc74552174bf2760</anchor>
      <arglist>(typename std::remove_reference&lt; T &gt;::type &amp;t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr T &amp;&amp;</type>
      <name>forward</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ad4a60b97f25e3a60ea596d72ebfd5b52</anchor>
      <arglist>(typename std::remove_reference&lt; T &gt;::type &amp;&amp;t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::remove_reference&lt; T &gt;::type &amp;&amp;</type>
      <name>move</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a6360698b6c1e839706bd9ae1a8ab0d45</anchor>
      <arglist>(T &amp;&amp;t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>Debug &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>ae0d97ad312a2030f1344b8839f5d9779</anchor>
      <arglist>(Debug &amp;debug, TweakableState value)</arglist>
    </member>
    <member kind="function">
      <type>To</type>
      <name>bitCast</name>
      <anchorfile>namespaceCorrade_1_1Utility.html</anchorfile>
      <anchor>a3831cece822dfde455336664676f6867</anchor>
      <arglist>(const From &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility::Directory</name>
    <filename>namespaceCorrade_1_1Utility_1_1Directory.html</filename>
    <member kind="typedef">
      <type>Path::MapDeleter</type>
      <name>MapDeleter</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a4a3512fdf2fc13d62e82bfb9ec4ec68c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Path::ListFlag</type>
      <name>Flag</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a595594e312715b81d60e5ef4d17b9f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Path::ListFlags</type>
      <name>Flags</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a45fa918ad353c136a48e29e80e52fffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fromNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ac7fda13e2db7d2a780a0bfffbea9b751</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a6d1cffbdff2819a86ed9436934c9af13</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>path</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a222baead7128ec0cadc433e3a8c0059f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a07df998aa551057785f2db6c51e78e63</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; std::string, std::string &gt;</type>
      <name>splitExtension</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a33b62a435a580891394d5eef5ef40fbb</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>aa1c57ae6d2c15c7507ad1ae70810d4de</anchor>
      <arglist>(const std::string &amp;path, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a7caa7ac094864b221e993f045827dc29</anchor>
      <arglist>(std::initializer_list&lt; std::string &gt; paths)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>list</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a5712caca31ae4361b4a86d8b9cd938c2</anchor>
      <arglist>(const std::string &amp;path, Flags flags={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>mkpath</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ad80859f373fbf1ed39b11eb27649c34b</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rm</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ac78c147e3378045ca84362dc1617a5d2</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a02041ca36863926c8a7ff71082e71450</anchor>
      <arglist>(const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSandboxed</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a3cc7a87483e3b192253cbe72d1cb1f98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>current</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ae4f90da841b0501c64f42f062b68c1e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a7b6180448b3e9eb8c053d2e1a7076acf</anchor>
      <arglist>(const void *address)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a5cbda2bad2c154240c7c229360a3c0da</anchor>
      <arglist>(R(*address)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>executableLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a4e3dbc86c7b8d0c3c39d9802a9947b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>home</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a8dcea7e885d165d77f8ef68814788bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>configurationDir</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a73ddfdc8249b1bc779e8bb58cd9c319a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>tmp</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a7b3ca5990decccd118261fe86824af70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a0299a9e5b18b4187615c2fd8e256d586</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a71124e92e3ac55de0d4b821d2c9a2206</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fileExists</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a1a83e17a2230dd6c04d33dac2a6e745f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::size_t &gt;</type>
      <name>fileSize</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>ad9900231f9e45e681b2394b686239cea</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char &gt;</type>
      <name>read</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a479f58a44c8c8f352e15c315b8d7666f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>readString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>afdc9b2319f9470117c4fb6b2ecf63187</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>af3e40dd0b19be0b79e8d2bad631f9009</anchor>
      <arglist>(const std::string &amp;filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>writeString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a2e31a8897f1f4d78ec7179d584ab0100</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>append</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>aab260374e6387877a6648dfa8696c1b3</anchor>
      <arglist>(const std::string &amp;filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>appendString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a5dbaa371ae23637c6952fa1360de0f0e</anchor>
      <arglist>(const std::string &amp;filename, const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a665cc812333bddf0c9640376291a8bcb</anchor>
      <arglist>(const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char, MapDeleter &gt;</type>
      <name>map</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>acd5bb7f69640298e8b046912ab6e9c5b</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; const char, MapDeleter &gt;</type>
      <name>mapRead</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a84c45342a8cec2111853f51873d82c9d</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char, MapDeleter &gt;</type>
      <name>mapWrite</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a2efbd1e6b276c36e4a3a2c18895795ab</anchor>
      <arglist>(const std::string &amp;filename, std::size_t size)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; char, MapDeleter &gt;</type>
      <name>map</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Directory.html</anchorfile>
      <anchor>a769141becd7eed77b15c0d0d1a79cc04</anchor>
      <arglist>(const std::string &amp;filename, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility::Endianness</name>
    <filename>namespaceCorrade_1_1Utility_1_1Endianness.html</filename>
    <member kind="function">
      <type>T</type>
      <name>swap</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a32cdd5603b8c9356b2bf8f85a508e006</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a72f4acb55efd11bdb075218a0e36c4c7</anchor>
      <arglist>(T &amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>constexpr bool</type>
      <name>isBigEndian</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>aeff28d1f20b7da71712f85ae04203dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>bigEndian</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>ae88adb4ebce124ae783e1183ffcb607f</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bigEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a58cefb8b571d639049a253557a5a796c</anchor>
      <arglist>(T &amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>littleEndian</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a9848d9ae0a2cf9e05b76f5c39e4b294e</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>littleEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a495156c88b017f68145ae431f0c4655c</anchor>
      <arglist>(T &amp;... values)</arglist>
    </member>
    <member kind="function">
      <type>constexpr std::uint32_t</type>
      <name>fourCC</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>af63968671f5f4d919a27793d59ef21b7</anchor>
      <arglist>(char a, char b, char c, char d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>ad847186f0783252771182f1fe234c984</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>aa8c817beb76071450e085d889c4e353b</anchor>
      <arglist>(const Containers::ArrayView&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>littleEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a860ace689a05c291f931a5d830aa711a</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>littleEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a8f27ad4e2bd328fedd1159bb240cc245</anchor>
      <arglist>(const Containers::ArrayView&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bigEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>a66e612b31d8531b0337862b1e54b0f9d</anchor>
      <arglist>(const Containers::StridedArrayView1D&lt; T &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bigEndianInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Endianness.html</anchorfile>
      <anchor>ad54b30aac0eaeebf36b4fe1fc1b64c44</anchor>
      <arglist>(const Containers::ArrayView&lt; T &gt; &amp;values)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility::Path</name>
    <filename>namespaceCorrade_1_1Utility_1_1Path.html</filename>
    <class kind="class">Corrade::Utility::Path::MapDeleter</class>
    <member kind="typedef">
      <type>Containers::EnumSet&lt; ListFlag &gt;</type>
      <name>ListFlags</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aa06cbdd515339c2e6e483a343534f0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ListFlag</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aaedb816dc129cca78cbe29c2846f3c74</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74ad6186b962ccb090e812467363c008e0a">SkipDotAndDotDot</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74ab5fc8c3926425785013c492ab8ecc22f">SkipFiles</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a9011abdfaf22b80f4ae98a3f59fed46b">SkipDirectories</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a2e58e2c745e14cc46a112c48075b863e">SkipSpecial</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a6e1549d1367460b4ab06f5575f2d427c">SortAscending</enumvalue>
      <enumvalue file="namespaceCorrade_1_1Utility_1_1Path.html" anchor="aaedb816dc129cca78cbe29c2846f3c74a12995c419287e0ef1f6f2d6ce1dfc12a">SortDescending</enumvalue>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>fromNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>abc182ac11ec281d7a1ea88239cab1790</anchor>
      <arglist>(Containers::String path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>toNativeSeparators</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>af0ed0a36839892032407b7a6d2f35b36</anchor>
      <arglist>(Containers::String path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pair&lt; Containers::StringView, Containers::StringView &gt;</type>
      <name>split</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>afa00c1be4062e72ca953c6fec8360ac0</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Pair&lt; Containers::StringView, Containers::StringView &gt;</type>
      <name>splitExtension</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a26bb101cea4fa0121be87cd7310bd21c</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>afb4796406072719aae055752c4f53fc7</anchor>
      <arglist>(Containers::StringView path, Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aed31d5c88e7e8dcd864d215787163ed5</anchor>
      <arglist>(Containers::ArrayView&lt; const Containers::StringView &gt; paths)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a296e591d2bc43e0aeefe07b0c49fe009</anchor>
      <arglist>(std::initializer_list&lt; Containers::StringView &gt; paths)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>exists</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a0d4fc3b710b264a0fdc87be9d4481361</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ab2e3405e590c5b47299c1a5ae8e61560</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>make</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a41321c89e0d8f23bdfb5b1b876b3ab82</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>aea62357b9738996a531e313505e57841</anchor>
      <arglist>(Containers::StringView path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>move</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a394d79e9f49936bd1206ac61e9cd3122</anchor>
      <arglist>(Containers::StringView from, Containers::StringView to)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ab9790051c2232e266c3c6274720ddfaa</anchor>
      <arglist>(const void *address)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>libraryLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ac52bceea2517fa8db3002b727abd6c67</anchor>
      <arglist>(R(*address)(Args...))</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>executableLocation</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>afb4f47bf31e9e48bb8dc1dcb235ec5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>currentDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ad9fa7dca2bcd867e8c4c91e9fd2053b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>homeDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ac64c037dc4ac5bb5df5cf14f7ed8416a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>configurationDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a704c5d5f22dea5e56776242c2f22e689</anchor>
      <arglist>(Containers::StringView name)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>temporaryDirectory</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>ae00eda6ee11143995ea7fa6c88615b0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; Containers::String &gt; &gt;</type>
      <name>list</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a453829fbdc42242938bdfcbad9934633</anchor>
      <arglist>(Containers::StringView path, ListFlags flags={})</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; std::size_t &gt;</type>
      <name>size</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a5354d1342dd6dc420ff88b26b63e4ce5</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; char &gt; &gt;</type>
      <name>read</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>adbaf347c00ef1c9089df79894262e262</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::String &gt;</type>
      <name>readString</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>acacbfb6c60b9f98eb74ebe9920fa1425</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a7170a8ddab379f31bb32701262480ca5</anchor>
      <arglist>(Containers::StringView filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>write</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a8f4728b65c0044483804bc7396ca66eb</anchor>
      <arglist>(Containers::StringView filename, const char *string)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>append</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a7e8d536c651ef6f321ccd8c3cdf11c93</anchor>
      <arglist>(Containers::StringView filename, Containers::ArrayView&lt; const void &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>append</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a955b45964491bcfc20a6ec34e41cd0d8</anchor>
      <arglist>(Containers::StringView filename, const char *string)=delete</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>copy</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a9059a8790646066c5fa0b943a65a9f1f</anchor>
      <arglist>(Containers::StringView from, Containers::StringView to)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; char, MapDeleter &gt; &gt;</type>
      <name>map</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a2d6d5e2cfef5b8a8423815845f0bf6c1</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; const char, MapDeleter &gt; &gt;</type>
      <name>mapRead</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a722db85ca13a6bf55221c55054260705</anchor>
      <arglist>(Containers::StringView filename)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; char, MapDeleter &gt; &gt;</type>
      <name>mapWrite</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Path.html</anchorfile>
      <anchor>a0027cbd41dbbad403a14a5ecfa2d9359</anchor>
      <arglist>(Containers::StringView filename, std::size_t size)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility::String</name>
    <filename>namespaceCorrade_1_1Utility_1_1String.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>fromArray</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a3e5a23b4c3afe46b19c0ea93a098e634</anchor>
      <arglist>(const char *string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fromArray</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>acb24339bd65dda380b696d363f4cc799</anchor>
      <arglist>(const char *string, std::size_t length)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ltrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>afc39c7e3c0d3da5bb4cfdf4bada808ab</anchor>
      <arglist>(std::string string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ltrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9b120b72f24ac6c1266d60b112a131f6</anchor>
      <arglist>(std::string string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ltrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a5dcd2f1e07dfeb6b3f523b8fd7fcc0db</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rtrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aa7519775e721a492a57c3752b6e0a5ae</anchor>
      <arglist>(std::string string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rtrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a787500cae52742d206c30a00d315bd88</anchor>
      <arglist>(std::string string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>rtrim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a13384c2eb91136a2282cabcf6d40e7e7</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a010626127bd50cc902768b3fa50e8e8c</anchor>
      <arglist>(std::string string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a3e6ed45cb59343ff1c968cc7c5f74864</anchor>
      <arglist>(std::string string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ab1422c3f09858ed4959d7ddd022c913a</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ltrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9ec8fbf7b2a097997d9ae0b7fd8008b6</anchor>
      <arglist>(std::string &amp;string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ltrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aeb380f7b1a78cde7b825a2dd70d13035</anchor>
      <arglist>(std::string &amp;string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ltrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aa559956eafb291ec822be7a090303d93</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rtrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a7fe6b0a142484d4768e6cbb915229a7e</anchor>
      <arglist>(std::string &amp;string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rtrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>afe0d71afe06d476c99ca801c4a60a13c</anchor>
      <arglist>(std::string &amp;string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rtrimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ae415f2a9274c946aa64ce76b2978f512</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a60ffdcb3d21f7d4fcf1068be07c37908</anchor>
      <arglist>(std::string &amp;string, const std::string &amp;characters)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a03e7318d0f0755c771da20b917c294e4</anchor>
      <arglist>(std::string &amp;string, const char(&amp;characters)[size])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trimInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9ad609584914e7de5a25fc01d807731b</anchor>
      <arglist>(std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aef6ef6f1df55eb8e089d3ee154137223</anchor>
      <arglist>(const std::string &amp;string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>split</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af1f53a99f6e06d5edf606b8bc41a0e74</anchor>
      <arglist>(Containers::StringView string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac7cdf17db22ef43ed931c52745dccff7</anchor>
      <arglist>(const std::string &amp;string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a36418e055bcddcb32f19e022a2dbb606</anchor>
      <arglist>(Containers::StringView string, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac0ff6b03a281fecebe8540c3aa86cd47</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;delimiters)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a5c53bb9b7eb0b881648d1a419b2e4423</anchor>
      <arglist>(Containers::StringView string, Containers::StringView delimiters)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ae292e7122f5d7274263fe0b02262c801</anchor>
      <arglist>(const std::string &amp;string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; Containers::StringView &gt;</type>
      <name>splitWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a2dabe0d792b9a3e983e67c0c222bee3e</anchor>
      <arglist>(const Containers::StringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>partition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ad61d663b8d5d2be27fb99dd8935fd276</anchor>
      <arglist>(const std::string &amp;string, char separator)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>partition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>afd863b0ac4b9f32424e3cc8f553a76cf</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;separator)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>rpartition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a03a31c17c8f6699134f65c887ba152d4</anchor>
      <arglist>(const std::string &amp;string, char separator)</arglist>
    </member>
    <member kind="function">
      <type>Containers::StaticArray&lt; 3, std::string &gt;</type>
      <name>rpartition</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aef50f459a779177ce9871efcdd18ce09</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;separator)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a9af3018407a9cac247c09da9ac8e577d</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ab3976871853ef6dea483d603dbf2dce1</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const char(&amp;delimiter)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>join</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac2209eae14e2358736f8476d49fd0e8d</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const std::string &amp;delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac2adb8eafce8ddb6f7c163bd112e5c57</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, char delimiter)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a31b9cde42bf5ac3ba81b8bf91419e866</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const char(&amp;delimiter)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>joinWithoutEmptyParts</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af6fd8637c075cade57f6fc099c62106c</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;strings, const std::string &amp;delimiter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lowercaseInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a8f89429f64be0b47f198ef3332f29be1</anchor>
      <arglist>(Containers::MutableStringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>lowercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a47dd33cbf867fd55b23a271e682a141b</anchor>
      <arglist>(Containers::StringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>lowercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a1148769f11fcb3d7c26705d18b63d8a5</anchor>
      <arglist>(Containers::String string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lowercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a09fde2ac2c5c7a28e0c694d22ca89ee6</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uppercaseInPlace</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a963077494efd41f5f016ad257b069d5d</anchor>
      <arglist>(Containers::MutableStringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>uppercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af05b99fccf0a865e0574b2b282838a4b</anchor>
      <arglist>(Containers::StringView string)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>uppercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a17fa61e495612987859d77c434772778</anchor>
      <arglist>(Containers::String string)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>uppercase</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4593d63bc7b1f340584b21d6a169afe9</anchor>
      <arglist>(std::string string)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>add091001179ac1455795365a3b667073</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aca63ac7667c9b71ce5e3240daf32316e</anchor>
      <arglist>(const std::string &amp;string, const char(&amp;prefix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>adcf054be72915ea30008949ba8d7e45a</anchor>
      <arglist>(const std::string &amp;string, char prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewBeginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aac2a0377274984a88d8c5ba1267bfaa0</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, const char(&amp;prefix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewBeginsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aba910ca698919200907a1b82b446e0cb</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, char prefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a810b5cb07e3a5e5063145ef47567ab7f</anchor>
      <arglist>(const std::string &amp;string, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ace94f739418cde7292a1e4ffdb75598e</anchor>
      <arglist>(const std::string &amp;string, const char(&amp;suffix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>endsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a5a89d25c3d54527384d85f3b9b22010f</anchor>
      <arglist>(const std::string &amp;string, char suffix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewEndsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a036c4916e1cd32b0d31978899c205a9c</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, const char(&amp;suffix)[size])</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>viewEndsWith</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a86b3902899551c11f8a1db1b9b0becdf</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; string, char suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripPrefix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a6d1d8723eecd80d2cb0b476a92730782</anchor>
      <arglist>(std::string string, const std::string &amp;prefix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripPrefix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a220d3903694aa0a90ec23540054c73cd</anchor>
      <arglist>(std::string string, const char(&amp;prefix)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripPrefix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a6dbe4d041b412de515dfaf992f6778b0</anchor>
      <arglist>(std::string string, char prefix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripSuffix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4913f68a09a3ad6dec44e8220d8d4c72</anchor>
      <arglist>(std::string string, const std::string &amp;suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripSuffix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ab70c0084c70b8dfc512283edb553c5fa</anchor>
      <arglist>(std::string string, const char(&amp;suffix)[size])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stripSuffix</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a376d68bfe85b7c6a6d4a4d87209fcd2b</anchor>
      <arglist>(std::string string, char suffix)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ae74814f4438913aa1300538529069d32</anchor>
      <arglist>(std::string string, const std::string &amp;search, const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4efbec885c01308ee148007ad21d42ad</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>ac7fb659c24110adebb2955a75d290442</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceFirst</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a4d54d0ac8fb49d705ae692bc88fa2c85</anchor>
      <arglist>(std::string string, const std::string &amp;search, const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>aef5cb78b1c8e6336abce1c5b94b6fbf0</anchor>
      <arglist>(std::string string, const std::string &amp;search, const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a6dd7b108947809be4906cab43e050f0b</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a3c0ad6e25f8092de0ac2737ff9c62ee7</anchor>
      <arglist>(std::string string, const char(&amp;search)[searchSize], const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>a47b378ccf712482676488a771ec07f46</anchor>
      <arglist>(std::string string, const std::string &amp;search, const char(&amp;replace)[replaceSize])</arglist>
    </member>
    <member kind="function">
      <type>Containers::Optional&lt; Containers::Array&lt; std::uint32_t &gt; &gt;</type>
      <name>parseNumberSequence</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1String.html</anchorfile>
      <anchor>af0649368075a2f9b387c72a09b7bfc87</anchor>
      <arglist>(Containers::StringView string, std::uint32_t min, std::uint32_t max)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility::System</name>
    <filename>namespaceCorrade_1_1Utility_1_1System.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>isSandboxed</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1System.html</anchorfile>
      <anchor>a21c40d8baa4eb92d77460a1ebb5c84be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sleep</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1System.html</anchorfile>
      <anchor>a7f93179c285d2667b97d9b38476d4cda</anchor>
      <arglist>(std::size_t ms)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Corrade::Utility::Unicode</name>
    <filename>namespaceCorrade_1_1Utility_1_1Unicode.html</filename>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>nextChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ad74ef425d1e826c21af814030d763807</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text, std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>nextChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a3cd253f620e843e9ecac1d427b7c070f</anchor>
      <arglist>(const std::string &amp;text, const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>nextChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a634c36aab0be25e8417905c1a1b492c4</anchor>
      <arglist>(const char(&amp;text)[size], const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>prevChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>af74600d45c83f2cc0e60f925159d47c5</anchor>
      <arglist>(Containers::ArrayView&lt; const char &gt; text, std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>prevChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ad231509de72398162b11d48f9ea75f85</anchor>
      <arglist>(const std::string &amp;text, const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; char32_t, std::size_t &gt;</type>
      <name>prevChar</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ab7b8f89831f52d67d311c5886b847ce6</anchor>
      <arglist>(const char(&amp;text)[size], const std::size_t cursor)</arglist>
    </member>
    <member kind="function">
      <type>std::u32string</type>
      <name>utf32</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a738435f73e123822a70f692d9d9cfec8</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>utf8</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a0b1547a3b650117161826a75943e5946</anchor>
      <arglist>(char32_t character, Containers::StaticArrayView&lt; 4, char &gt; result)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; wchar_t &gt;</type>
      <name>widen</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a9be15534350700c2eaf00cab36114447</anchor>
      <arglist>(Containers::StringView text)</arglist>
    </member>
    <member kind="function">
      <type>Containers::Array&lt; wchar_t &gt;</type>
      <name>widen</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>aceca9ac9adddf6dd8f5d1d0a37b2fb5f</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>std::wstring</type>
      <name>widen</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>af92cf003d4c9bf36b0a53777ab5a0445</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>narrow</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a28b402c1ada2f1c71d99854cb8693c28</anchor>
      <arglist>(Containers::ArrayView&lt; const wchar_t &gt; text)</arglist>
    </member>
    <member kind="function">
      <type>Containers::String</type>
      <name>narrow</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>a014e858ed4979934d7d90bf545f938bf</anchor>
      <arglist>(const wchar_t *text)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>narrow</name>
      <anchorfile>namespaceCorrade_1_1Utility_1_1Unicode.html</anchorfile>
      <anchor>ad81ae601a86426189543698218fb276d</anchor>
      <arglist>(const std::wstring &amp;text)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
  </compound>
  <compound kind="page">
    <name>building-corrade</name>
    <title>Downloading and building Corrade</title>
    <filename>building-corrade</filename>
    <docanchor file="building-corrade.html" title="Single-header libraries">building-corrade-singles</docanchor>
    <docanchor file="building-corrade.html" title="Using Corrade as a CMake subproject">building-corrade-cmake-subproject</docanchor>
    <docanchor file="building-corrade.html" title="Prepared packages">building-corrade-packages</docanchor>
    <docanchor file="building-corrade.html" title="Conan package">building-corrade-packages-conan</docanchor>
    <docanchor file="building-corrade.html" title="Hunter package">building-corrade-packages-hunter</docanchor>
    <docanchor file="building-corrade.html" title="Vcpkg package">building-corrade-packages-vcpkg</docanchor>
    <docanchor file="building-corrade.html" title="ArchLinux packages">building-corrade-packages-arch</docanchor>
    <docanchor file="building-corrade.html" title="MSYS2 packages">building-corrade-packages-msys</docanchor>
    <docanchor file="building-corrade.html" title="Packages for Debian, Ubuntu and derivatives">building-corrade-packages-deb</docanchor>
    <docanchor file="building-corrade.html" title="Gentoo Linux ebuilds">building-corrade-packages-gentoo</docanchor>
    <docanchor file="building-corrade.html" title="Packages for Fedora, openSUSE and other RPM-based Linux distributions">building-corrade-packages-rpm</docanchor>
    <docanchor file="building-corrade.html" title="Homebrew formulas for macOS">building-corrade-packages-brew</docanchor>
    <docanchor file="building-corrade.html" title="Manual build">building-corrade-manual</docanchor>
    <docanchor file="building-corrade.html" title="Downloading the sources">building-corrade-download</docanchor>
    <docanchor file="building-corrade.html" title="CMake primer">building-corrade-cmake</docanchor>
    <docanchor file="building-corrade.html" title="Via command line (on Linux/Unix)">building-corrade-linux</docanchor>
    <docanchor file="building-corrade.html" title="Building on Windows">building-corrade-windows</docanchor>
    <docanchor file="building-corrade.html" title="Using Visual Studio">building-corrade-windows-msvc</docanchor>
    <docanchor file="building-corrade.html" title="Using QtCreator">building-corrade-windows-qtcreator</docanchor>
    <docanchor file="building-corrade.html" title="Enabling or disabling features">building-corrade-features</docanchor>
    <docanchor file="building-corrade.html" title="Building and running tests">building-corrade-tests</docanchor>
    <docanchor file="building-corrade.html" title="Building documentation">building-corrade-doc</docanchor>
    <docanchor file="building-corrade.html" title="Building examples">building-corrade-examples</docanchor>
    <docanchor file="building-corrade.html" title="Cross-compiling">building-corrade-cross</docanchor>
    <docanchor file="building-corrade.html">building-corrade-cross-rc</docanchor>
    <docanchor file="building-corrade.html" title="Cross-compiling for Windows RT">building-corrade-cross-winrt</docanchor>
    <docanchor file="building-corrade.html" title="Cross-compiling for Windows using MinGW-w64">building-corrade-cross-win</docanchor>
    <docanchor file="building-corrade.html" title="Cross-compiling for Emscripten">building-corrade-cross-emscripten</docanchor>
    <docanchor file="building-corrade.html" title="Cross-compiling for iOS">building-corrade-cross-ios</docanchor>
    <docanchor file="building-corrade.html" title="Cross-compiling for Android">building-corrade-cross-android</docanchor>
    <docanchor file="building-corrade.html" title="Continuous Integration">building-corrade-ci</docanchor>
    <docanchor file="building-corrade.html" title="CircleCI">building-corrade-ci-circleci</docanchor>
    <docanchor file="building-corrade.html" title="AppVeyor">building-corrade-ci-appveyor</docanchor>
    <docanchor file="building-corrade.html" title="Codecov.io">building-corrade-ci-coverage</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-cmake</name>
    <title>Using Corrade with CMake</title>
    <filename>corrade-cmake</filename>
    <docanchor file="corrade-cmake.html" title="Using Corrade that was externally built and installed">corrade-cmake-installed</docanchor>
    <docanchor file="corrade-cmake.html" title="Using Corrade as a CMake subproject">corrade-cmake-subproject</docanchor>
    <docanchor file="corrade-cmake.html" title="Finding the package and its components">corrade-cmake-find-module</docanchor>
    <docanchor file="corrade-cmake.html" title="Other CMake modules">corrade-cmake-modules</docanchor>
    <docanchor file="corrade-cmake.html" title="Macros and functions">corrade-cmake-functions</docanchor>
    <docanchor file="corrade-cmake.html" title="Add unit test using Corrade&apos;s TestSuite">corrade-cmake-add-test</docanchor>
    <docanchor file="corrade-cmake.html" title="Compile data resources into application binary">corrade-cmake-add-resource</docanchor>
    <docanchor file="corrade-cmake.html" title="Add dynamic plugin">corrade-cmake-add-plugin</docanchor>
    <docanchor file="corrade-cmake.html" title="Add static plugin">corrade-cmake-add-static-plugin</docanchor>
    <docanchor file="corrade-cmake.html" title="Find corresponding DLLs for library files">corrade-cmake-find-dlls-for-libs</docanchor>
  </compound>
  <compound kind="page">
    <name>main</name>
    <title>Corrade::Main library</title>
    <filename>main</filename>
    <docanchor file="main.html" title="Standard main() with UTF-8 command-line arguments">main-utf8-arguments</docanchor>
    <docanchor file="main.html" title="WIN32 apps without console window lurking in the background">main-winmain</docanchor>
    <docanchor file="main.html" title="ANSI colors in console output">main-ansi-colors</docanchor>
    <docanchor file="main.html" title="UTF-8 console output encoding">main-utf8-output</docanchor>
    <docanchor file="main.html" title="Usage without CMake">main-non-cmake</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-singles</name>
    <title>Single-header libraries</title>
    <filename>corrade-singles</filename>
    <docanchor file="corrade-singles.html" title="Behavior">corrade-singles-behavior</docanchor>
    <docanchor file="corrade-singles.html" title="Customization points">corrade-singles-customization</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-example-index</name>
    <title>Examples</title>
    <filename>corrade-example-index</filename>
  </compound>
  <compound kind="page">
    <name>corrade-rc</name>
    <title>Resource compiler</title>
    <filename>corrade-rc</filename>
    <docanchor file="corrade-rc.html" title="Usage">corrade-rc-usage</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-changelog</name>
    <title>Changelog</title>
    <filename>corrade-changelog</filename>
    <docanchor file="corrade-changelog.html" title="Changes since 2020.06">corrade-changelog-latest</docanchor>
    <docanchor file="corrade-changelog.html" title="New features">corrade-changelog-latest-new</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-latest-new-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-latest-new-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-latest-new-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-latest-new-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Changes and improvements">corrade-changelog-latest-changes</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-latest-changes-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-latest-changes-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-latest-changes-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-latest-changes-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Build system">corrade-changelog-latest-buildsystem</docanchor>
    <docanchor file="corrade-changelog.html" title="Bug fixes">corrade-changelog-latest-bugfixes</docanchor>
    <docanchor file="corrade-changelog.html" title="Deprecated APIs">corrade-changelog-latest-deprecated</docanchor>
    <docanchor file="corrade-changelog.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-latest-compatibility</docanchor>
    <docanchor file="corrade-changelog.html" title="Documentation">corrade-changelog-latest-documentation</docanchor>
    <docanchor file="corrade-changelog.html" title="2020.06">corrade-changelog-2020-06</docanchor>
    <docanchor file="corrade-changelog.html" title="New features">corrade-changelog-2020-06-new</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2020-06-new-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2020-06-new-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-2020-06-new-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2020-06-new-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Changes and improvements">corrade-changelog-2020-06-changes</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2020-06-changes-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="Interconnect library">corrade-changelog-2020-06-changes-interconnect</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2020-06-changes-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-2020-06-changes-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2020-06-changes-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Build system">corrade-changelog-2020-06-buildsystem</docanchor>
    <docanchor file="corrade-changelog.html" title="Bug fixes">corrade-changelog-2020-06-bugfixes</docanchor>
    <docanchor file="corrade-changelog.html" title="Documentation">corrade-changelog-2020-06-documentation</docanchor>
    <docanchor file="corrade-changelog.html" title="Deprecated APIs">corrade-changelog-2020-06-deprecated</docanchor>
    <docanchor file="corrade-changelog.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2020-06-compatibility</docanchor>
    <docanchor file="corrade-changelog.html" title="2019.10">corrade-changelog-2019-10</docanchor>
    <docanchor file="corrade-changelog.html" title="Dependency changes">corrade-changelog-2019-10-dependencies</docanchor>
    <docanchor file="corrade-changelog.html" title="New features">corrade-changelog-2019-10-new</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2019-10-new-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2019-10-new-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-2019-10-new-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2019-10-new-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Changes and improvements">corrade-changelog-2019-10-changes</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2019-10-changes-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="Interconnect library">corrade-changelog-2019-10-changes-Interconnect</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2019-10-changes-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-2019-10-changes-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2019-10-changes-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Build system">corrade-changelog-2019-10-buildsystem</docanchor>
    <docanchor file="corrade-changelog.html" title="Bug fixes">corrade-changelog-2019-10-bugfixes</docanchor>
    <docanchor file="corrade-changelog.html" title="Deprecated APIs">corrade-changelog-2019-10-deprecated</docanchor>
    <docanchor file="corrade-changelog.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2019-10-compatibility</docanchor>
    <docanchor file="corrade-changelog.html" title="Documentation">corrade-changelog-2019-10-documentation</docanchor>
    <docanchor file="corrade-changelog.html" title="2019.01">corrade-changelog-2019-01</docanchor>
    <docanchor file="corrade-changelog.html" title="Dependency changes">corrade-changelog-2019-01-dependencies</docanchor>
    <docanchor file="corrade-changelog.html" title="New features">corrade-changelog-2019-01-new</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2019-01-new-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2019-01-new-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Changes and improvements">corrade-changelog-2019-01-changes</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2019-01-changes-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2019-01-changes-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2019-01-changes-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Build system">corrade-changelog-2019-01-buildsystem</docanchor>
    <docanchor file="corrade-changelog.html" title="Bug fixes">corrade-changelog-2019-01-bugfixes</docanchor>
    <docanchor file="corrade-changelog.html" title="Deprecated APIs">corrade-changelog-2019-01-deprecated</docanchor>
    <docanchor file="corrade-changelog.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2019-01-compatibility</docanchor>
    <docanchor file="corrade-changelog.html" title="Documentation">corrade-changelog-2019-01-documentation</docanchor>
    <docanchor file="corrade-changelog.html" title="2018.10">corrade-changelog-2018-10</docanchor>
    <docanchor file="corrade-changelog.html" title="New features">corrade-changelog-2018-10-new</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2018-10-new-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2018-10-new-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2018-10-new-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Changes and improvements">corrade-changelog-2018-10-changes</docanchor>
    <docanchor file="corrade-changelog.html" title="Containers library">corrade-changelog-2018-10-changes-containers</docanchor>
    <docanchor file="corrade-changelog.html" title="PluginManager library">corrade-changelog-2018-10-changes-pluginmanager</docanchor>
    <docanchor file="corrade-changelog.html" title="TestSuite library">corrade-changelog-2018-10-changes-testsuite</docanchor>
    <docanchor file="corrade-changelog.html" title="Utility library">corrade-changelog-2018-10-changes-utility</docanchor>
    <docanchor file="corrade-changelog.html" title="Build system">corrade-changelog-2018-10-buildsystem</docanchor>
    <docanchor file="corrade-changelog.html" title="Bug fixes">corrade-changelog-2018-10-bugfixes</docanchor>
    <docanchor file="corrade-changelog.html" title="Documentation">corrade-changelog-2018-10-docs</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-changelog-old</name>
    <title>Archived changelogs</title>
    <filename>corrade-changelog-old</filename>
    <docanchor file="corrade-changelog-old.html" title="2018.04">corrade-changelog-2018-04</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Dependency changes">corrade-changelog-2018-04-dependencies</docanchor>
    <docanchor file="corrade-changelog-old.html" title="New features">corrade-changelog-2018-04-new</docanchor>
    <docanchor file="corrade-changelog-old.html" title="PluginManager library">corrade-changelog-2018-04-new-pluginmanager</docanchor>
    <docanchor file="corrade-changelog-old.html" title="TestSuite library">corrade-changelog-2018-04-new-testsuite</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Utility library">corrade-changelog-2018-04-new-utility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Build system">corrade-changelog-2018-04-buildsystem</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Bug fixes">corrade-changelog-2018-04-bugfixes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Deprecated APIs">corrade-changelog-2018-04-deprecated</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2018-04-compatibility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Documentation">corrade-changelog-2018-04-docs</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2018.02">corrade-changelog-2018-02</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Dependency changes">corrade-changelog-2018-02-dependencies</docanchor>
    <docanchor file="corrade-changelog-old.html" title="New features">corrade-changelog-2018-02-new</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Containers library">corrade-changelog-2018-02-new-containers</docanchor>
    <docanchor file="corrade-changelog-old.html" title="PluginManager library">corrade-changelog-2018-02-new-pluginmanager</docanchor>
    <docanchor file="corrade-changelog-old.html" title="TestSuite library">corrade-changelog-2018-02-new-testsuite</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Utility library">corrade-changelog-2018-02-new-utility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Changes and improvements">corrade-changelog-2018-02-changes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Containers library">corrade-changelog-2018-02-changes-containers</docanchor>
    <docanchor file="corrade-changelog-old.html" title="PluginManager library">corrade-changelog-2018-02-changes-pluginmanager</docanchor>
    <docanchor file="corrade-changelog-old.html" title="TestSuite library">corrade-changelog-2018-02-changes-testsuite</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Utility library">corrade-changelog-2018-02-changes-utility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Build system">corrade-changelog-2018-02-buildsystem</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Bug fixes">corrade-changelog-2018-02-bugfixes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Deprecated APIs">corrade-changelog-2018-02-deprecated</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2018-02-compatibility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Documentation">corrade-changelog-2018-02-documentation</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2015.05">corrade-changelog-2015-05</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Dependency changes">corrade-changelog-2015-05-dependencies</docanchor>
    <docanchor file="corrade-changelog-old.html" title="New features">corrade-changelog-2015-05-new</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Changes">corrade-changelog-2015-05-changes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Build system">corrade-changelog-2015-05-buildsystem</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Bug fixes">corrade-changelog-2015-05-bugfixes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Deprecated APIs">corrade-changelog-2015-05-deprecated</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2015-05-compatibility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2014.06">corrade-changelog-2014-06</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Dependency changes">corrade-changelog-2014-06-dependencies</docanchor>
    <docanchor file="corrade-changelog-old.html" title="New features">corrade-changelog-2014-06-new</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Changes">corrade-changelog-2014-06-changes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Bug fixes">corrade-changelog-2014-06-bugfixes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Deprecated APIs">corrade-changelog-2014-06-deprecated</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2014-06-compatibility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2014.01">corrade-changelog-2014-01</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Dependency changes">corrade-changelog-2014-01-dependencies</docanchor>
    <docanchor file="corrade-changelog-old.html" title="New features">corrade-changelog-2014-01-new</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Changes">corrade-changelog-2014-01-changes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Bug fixes">corrade-changelog-2014-01-bugfixes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Deprecated APIs">corrade-changelog-2014-01-deprecated</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2014-01-compatibility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Internal changes">corrade-changelog-2014-01-internal</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2013.10">corrade-changelog-2013-10</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Dependency changes">corrade-changelog-2013-10-dependencies</docanchor>
    <docanchor file="corrade-changelog-old.html" title="New features">corrade-changelog-2013-10-new</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Changes">corrade-changelog-2013-10-changes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Build system">corrade-changelog-2013-10-buildsystem</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Bug fixes">corrade-changelog-2013-10-bugfixes</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Deprecated APIs">corrade-changelog-2013-10-deprecated</docanchor>
    <docanchor file="corrade-changelog-old.html" title="Potential compatibility breakages, removed APIs">corrade-changelog-2013-10-compatibility</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2013.08">corrade-changelog-2013-08</docanchor>
    <docanchor file="corrade-changelog-old.html" title="2012.02">corrade-changelog-2012-02</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-developers</name>
    <title>Developers guide</title>
    <filename>corrade-developers</filename>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a library">corrade-developers-library</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a plugin">corrade-developers-plugin</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a plugin interface">corrade-developers-plugin-interface</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a tool">corrade-developers-tool</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing an example">corrade-developers-example</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a new source / header file">corrade-developers-file</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a symbol">corrade-developers-symbol</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding a new CMake documentation page">corrade-developers-page</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for deprecating a feature">corrade-developers-deprecation</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for removing a feature">corrade-developers-removing</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding, removing or updating a dependency">corrade-developers-dependency</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding or removing a port">corrade-developers-port</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for adding / removing a CPU instruction set">corrade-developers-cpu-tag</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for updating copyright year">corrade-developers-copyright-year</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for uploading documentation">corrade-developers-documentation</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for merging a PR">corrade-developers-pr</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for creating/updating a single-header lib">corrade-developers-singles</docanchor>
    <docanchor file="corrade-developers.html" title="Checklist for making a release">corrade-developers-release</docanchor>
  </compound>
  <compound kind="page">
    <name>acme</name>
    <title>Single-header generator tool</title>
    <filename>acme</filename>
    <docanchor file="acme.html" title="System include placement">acme-system-includes</docanchor>
    <docanchor file="acme.html" title="Local include matching">acme-local-include-matching</docanchor>
    <docanchor file="acme.html" title="Local include processing">acme-local-include-processing</docanchor>
    <docanchor file="acme.html" title="Preprocessor branch processing">acme-preprocessor</docanchor>
    <docanchor file="acme.html" title="Copyright information">acme-copyright</docanchor>
    <docanchor file="acme.html" title="Code comments">acme-comments</docanchor>
    <docanchor file="acme.html" title="{{revision}}">acme-revision</docanchor>
    <docanchor file="acme.html" title="{{stats}}">acme-stats</docanchor>
    <docanchor file="acme.html" title="Real-world examples">acme-example</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-coding-style</name>
    <title>Coding style</title>
    <filename>corrade-coding-style</filename>
    <docanchor file="corrade-coding-style.html" title="Text files in general">corrade-coding-style-text</docanchor>
    <docanchor file="corrade-coding-style.html" title="CMake code">corrade-coding-style-cmake</docanchor>
    <docanchor file="corrade-coding-style.html" title="CMake modules">corrade-coding-style-cmake-modules</docanchor>
    <docanchor file="corrade-coding-style.html" title="C++ code">corrade-coding-style-cpp</docanchor>
    <docanchor file="corrade-coding-style.html" title="File and directory naming">corrade-coding-style-cpp-filesystem</docanchor>
    <docanchor file="corrade-coding-style.html" title="File structure">corrade-coding-style-cpp-files</docanchor>
    <docanchor file="corrade-coding-style.html" title="Code format">corrade-coding-style-cpp-format</docanchor>
    <docanchor file="corrade-coding-style.html" title="Naming style">corrade-coding-style-cpp-naming-style</docanchor>
    <docanchor file="corrade-coding-style.html" title="API usability and naming clarity">corrade-coding-style-cpp-naming-clarity</docanchor>
    <docanchor file="corrade-coding-style.html" title="Forward declarations and forward declaration headers">corrade-coding-style-cpp-forward-declarations</docanchor>
    <docanchor file="corrade-coding-style.html" title="Namespace declarations">corrade-coding-style-cpp-namespace</docanchor>
    <docanchor file="corrade-coding-style.html" title="Class and structure declarations">corrade-coding-style-cpp-classes</docanchor>
    <docanchor file="corrade-coding-style.html" title="Blocks, whitespace and indentation">corrade-coding-style-cpp-style</docanchor>
    <docanchor file="corrade-coding-style.html" title="Switch statements">corrade-coding-style-cpp-switches</docanchor>
    <docanchor file="corrade-coding-style.html" title="Class member and function keywords">corrade-coding-style-cpp-keywords</docanchor>
    <docanchor file="corrade-coding-style.html" title="Preprocessor macros">corrade-coding-style-cpp-macros</docanchor>
    <docanchor file="corrade-coding-style.html" title="Class constructors and destructors">corrade-coding-style-cpp-constructors</docanchor>
    <docanchor file="corrade-coding-style.html" title="Constant expressions and constants">corrade-coding-style-cpp-constexpr</docanchor>
    <docanchor file="corrade-coding-style.html" title="Assertions">corrade-coding-style-cpp-assert</docanchor>
    <docanchor file="corrade-coding-style.html" title="Enums and inheritance">corrade-coding-style-cpp-enum-inheritance</docanchor>
    <docanchor file="corrade-coding-style.html" title="Initialization">corrade-coding-style-cpp-initialization</docanchor>
    <docanchor file="corrade-coding-style.html" title="Virtual functions">corrade-coding-style-cpp-virtual</docanchor>
    <docanchor file="corrade-coding-style.html" title="Naked pointers">corrade-coding-style-cpp-pointers</docanchor>
    <docanchor file="corrade-coding-style.html" title="SFINAE and templates">corrade-coding-style-cpp-sfinae</docanchor>
    <docanchor file="corrade-coding-style.html" title="Discouraged C/C++ features">corrade-coding-style-cpp-discouraged</docanchor>
    <docanchor file="corrade-coding-style.html" title="Heavy STL headers">corrade-coding-style-cpp-heavy-headers</docanchor>
    <docanchor file="corrade-coding-style.html" title="using namespace keyword">corrade-coding-style-cpp-using</docanchor>
    <docanchor file="corrade-coding-style.html" title="C-style casts">corrade-coding-style-cpp-backward</docanchor>
    <docanchor file="corrade-coding-style.html" title="Unscoped and untyped enums">corrade-coding-style-cpp-enums</docanchor>
    <docanchor file="corrade-coding-style.html" title="static keyword">corrade-coding-style-cpp-anonymous-namespace</docanchor>
    <docanchor file="corrade-coding-style.html" title="Comments">corrade-coding-style-comments</docanchor>
    <docanchor file="corrade-coding-style.html" title="Doxygen documentation">corrade-coding-style-documentation</docanchor>
    <docanchor file="corrade-coding-style.html" title="Section ordering">corrade-coding-style-documentation-ordering</docanchor>
    <docanchor file="corrade-coding-style.html" title="Special documentation commands">corrade-coding-style-documentation-commands</docanchor>
    <docanchor file="corrade-coding-style.html" title="Code">corrade-coding-style-documentation-commands-code</docanchor>
    <docanchor file="corrade-coding-style.html" title="Documentation-related TODOs">corrade-coding-style-documentation-commands-todoc</docanchor>
    <docanchor file="corrade-coding-style.html" title="Debugging operators">corrade-coding-style-documentation-commands-debugoperator</docanchor>
    <docanchor file="corrade-coding-style.html" title="Configuration value parsers and writers">corrade-coding-style-documentation-commands-configurationvalue</docanchor>
    <docanchor file="corrade-coding-style.html" title="Tweakable literal parsers">corrade-coding-style-documentation-commands-tweakableliteral</docanchor>
    <docanchor file="corrade-coding-style.html" title="Partially supported features">corrade-coding-style-documentation-commands-partialsupport</docanchor>
    <docanchor file="corrade-coding-style.html" title="Third party dependency licensing info">corrade-coding-style-documentation-commands-thirdparty</docanchor>
    <docanchor file="corrade-coding-style.html" title="Backwards compatibility and experimental features">corrade-coding-style-documentation-commands-experimental</docanchor>
    <docanchor file="corrade-coding-style.html" title="Git">corrade-coding-style-git</docanchor>
    <docanchor file="corrade-coding-style.html" title="Commit message format">corrade-coding-style-git-commits</docanchor>
    <docanchor file="corrade-coding-style.html" title="Repository, branch and tag format">corrade-coding-style-git-branches</docanchor>
  </compound>
  <compound kind="page">
    <name>corrade-credits-third-party</name>
    <title>Third-party components</title>
    <filename>corrade-credits-third-party</filename>
  </compound>
  <compound kind="page">
    <name>corrade-credits-contributors</name>
    <title>Contributors</title>
    <filename>corrade-credits-contributors</filename>
  </compound>
  <compound kind="page">
    <name>corrade-configurationvalues</name>
    <title>Configuration value parsers and writers for custom types</title>
    <filename>corrade-configurationvalues</filename>
  </compound>
  <compound kind="page">
    <name>corrade-tweakableliterals</name>
    <title>Tweakable literal parsers</title>
    <filename>corrade-tweakableliterals</filename>
  </compound>
  <compound kind="page">
    <name>interconnect</name>
    <title>Signals and slots</title>
    <filename>interconnect</filename>
    <docanchor file="interconnect.html" title="Implementing signals">interconnect-signals</docanchor>
    <docanchor file="interconnect.html" title="Implementing slots">interconnect-slots</docanchor>
    <docanchor file="interconnect.html" title="Connecting signals to slots">interconnect-connecting</docanchor>
    <docanchor file="interconnect.html" title="Emitting signals">interconnect-emitting</docanchor>
    <docanchor file="interconnect.html" title="Compiling and running the example">interconnect-compiling</docanchor>
  </compound>
  <compound kind="page">
    <name>plugin-management</name>
    <title>Plugin management</title>
    <filename>plugin-management</filename>
    <docanchor file="plugin-management.html" title="Plugin interface">plugin-management-interface</docanchor>
    <docanchor file="plugin-management.html" title="Plugin definition">plugin-management-plugin</docanchor>
    <docanchor file="plugin-management.html" title="Plugin compilation">plugin-management-compilation</docanchor>
    <docanchor file="plugin-management.html" title="Plugin management">plugin-management-management</docanchor>
  </compound>
  <compound kind="page">
    <name>resource-management</name>
    <title>Resource management</title>
    <filename>resource-management</filename>
    <docanchor file="resource-management.html" title="Resource compilation">resource-management-compilation</docanchor>
    <docanchor file="resource-management.html" title="Resource management">resource-management-management</docanchor>
  </compound>
  <compound kind="page">
    <name>testsuite</name>
    <title>Testing and benchmarking</title>
    <filename>testsuite</filename>
    <docanchor file="testsuite.html" title="Tester class">testsuite-class</docanchor>
    <docanchor file="testsuite.html" title="Compilation and running">testsuite-compilation</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Corrade</title>
    <filename>index</filename>
    <docanchor file="index.html" title="What&apos;s new?">corrade-mainpage-whats-new</docanchor>
    <docanchor file="index.html" title="Getting started">corrade-mainpage-getting-started</docanchor>
    <docanchor file="index.html" title="Contact &amp; support">corrade-mainpage-contact</docanchor>
    <docanchor file="index.html" title="License">corrade-mainpage-license</docanchor>
  </compound>
</tagfile>
